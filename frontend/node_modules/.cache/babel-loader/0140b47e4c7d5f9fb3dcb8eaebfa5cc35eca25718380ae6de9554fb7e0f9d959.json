{"ast":null,"code":"import { EventHandler, Browser, createElement } from '@syncfusion/ej2-base';\nimport { getRectLocation, minMax, getElement, ChartLocation, RectOption } from '../../common/utils/helper';\nimport { Rect, measureText } from '@syncfusion/ej2-svg-base';\nimport { Toolkit } from './zooming-toolkit';\nimport { zoomComplete, onZooming } from '../../common/model/constants';\nimport { withInBounds } from '../../common/utils/helper';\n/**\n * `Zooming` module handles the zooming for chart.\n */\nvar Zoom = /** @class */function () {\n  /**\n   * Constructor for Zooming module.\n   *\n   * @private\n   */\n  function Zoom(chart) {\n    this.zoomCompleteEvtCollection = [];\n    this.chart = chart;\n    this.isPointer = Browser.isPointer;\n    this.browserName = Browser.info.name;\n    this.wheelEvent = this.browserName === 'mozilla' ? this.isPointer ? 'mousewheel' : 'DOMMouseScroll' : 'mousewheel';\n    this.cancelEvent = this.isPointer ? 'pointerleave' : 'mouseleave';\n    this.addEventListener();\n    this.isDevice = Browser.isDevice;\n    var zooming = chart.zoomSettings;\n    this.toolkit = new Toolkit(chart);\n    this.zooming = zooming;\n    this.elementId = chart.element.id;\n    this.zoomingRect = new Rect(0, 0, 0, 0);\n    this.zoomAxes = [];\n    this.zoomkitOpacity = 0.3;\n    this.isIOS = Browser.isIos || Browser.isIos7;\n    this.isZoomed = this.performedUI = this.zooming.enablePan && this.zooming.enableSelectionZooming;\n    if (zooming.enableScrollbar) {\n      chart.scrollElement = createElement('div', {\n        id: chart.element.id + '_scrollElement'\n      });\n    }\n  }\n  /**\n   * Function that handles the Rectangular zooming.\n   *\n   * @returns {void}\n   */\n  Zoom.prototype.renderZooming = function (e, chart, isTouch) {\n    this.calculateZoomAxesRange(chart);\n    if (this.zooming.enableSelectionZooming && (!isTouch || chart.isDoubleTap && this.touchStartList.length === 1) && (!this.isPanning || chart.isDoubleTap)) {\n      this.isPanning = this.isDevice ? true : this.isPanning;\n      this.performedUI = true;\n      this.drawZoomingRectangle(chart);\n    } else if (this.isPanning && chart.isChartDrag) {\n      if (!isTouch || isTouch && this.touchStartList.length === 1) {\n        this.pinchTarget = isTouch ? e.target : null;\n        this.doPan(chart, chart.axisCollections);\n      }\n    }\n  };\n  // Zooming rectangle drawn here\n  Zoom.prototype.drawZoomingRectangle = function (chart) {\n    var areaBounds = chart.chartAxisLayoutPanel.seriesClipRect;\n    var startLocation = new ChartLocation(chart.previousMouseMoveX, chart.previousMouseMoveY);\n    var endLocation = new ChartLocation(chart.mouseX, chart.mouseY);\n    var rect = this.zoomingRect = getRectLocation(startLocation, endLocation, areaBounds);\n    if (rect.width > 0 && rect.height > 0) {\n      this.isZoomed = true;\n      chart.disableTrackTooltip = true;\n      chart.svgObject.setAttribute('cursor', 'crosshair');\n      if (this.zooming.mode === 'X') {\n        rect.height = areaBounds.height;\n        rect.y = areaBounds.y;\n      } else if (this.zooming.mode === 'Y') {\n        rect.width = areaBounds.width;\n        rect.x = areaBounds.x;\n      }\n      var svg = chart.enableCanvas ? document.getElementById(this.elementId + '_tooltip_svg') : chart.svgObject;\n      svg.appendChild(chart.svgRenderer.drawRectangle(new RectOption(this.elementId + '_ZoomArea', chart.themeStyle.selectionRectFill, {\n        color: chart.themeStyle.selectionRectStroke,\n        width: 1\n      }, 1, rect, 0, 0, '', '3')));\n    }\n  };\n  // Panning performed here\n  Zoom.prototype.doPan = function (chart, axes, xDifference, yDifference) {\n    var _this = this;\n    if (xDifference === void 0) {\n      xDifference = 0;\n    }\n    if (yDifference === void 0) {\n      yDifference = 0;\n    }\n    if (chart.startMove && chart.crosshair.enable) {\n      return null;\n    }\n    var currentScale;\n    var offset;\n    this.isZoomed = true;\n    this.offset = !chart.delayRedraw ? chart.chartAxisLayoutPanel.seriesClipRect : this.offset;\n    chart.delayRedraw = true;\n    this.zoomCompleteEvtCollection = [];\n    chart.disableTrackTooltip = true;\n    var argsData;\n    var zoomedAxisCollection = [];\n    for (var _i = 0, _a = axes; _i < _a.length; _i++) {\n      var axis = _a[_i];\n      argsData = {\n        cancel: false,\n        name: zoomComplete,\n        axis: axis,\n        previousZoomFactor: axis.zoomFactor,\n        previousZoomPosition: axis.zoomPosition,\n        currentZoomFactor: axis.zoomFactor,\n        currentZoomPosition: axis.zoomPosition,\n        previousVisibleRange: axis.visibleRange,\n        currentVisibleRange: null\n      };\n      currentScale = Math.max(1 / minMax(axis.zoomFactor, 0, 1), 1);\n      if (axis.orientation === 'Horizontal') {\n        offset = (xDifference != 0 ? xDifference : chart.previousMouseMoveX - chart.mouseX) / axis.rect.width / currentScale;\n        argsData.currentZoomPosition = minMax(axis.zoomPosition + offset, 0, 1 - axis.zoomFactor);\n      } else {\n        offset = (yDifference != 0 ? yDifference : chart.previousMouseMoveY - chart.mouseY) / axis.rect.height / currentScale;\n        argsData.currentZoomPosition = minMax(axis.zoomPosition - offset, 0, 1 - axis.zoomFactor);\n      }\n      if (!argsData.cancel) {\n        axis.zoomFactor = argsData.currentZoomFactor;\n        axis.zoomPosition = argsData.currentZoomPosition;\n        this.zoomCompleteEvtCollection.push(argsData);\n      }\n      zoomedAxisCollection.push({\n        zoomFactor: axis.zoomFactor,\n        zoomPosition: axis.zoomFactor,\n        axisName: axis.name,\n        axisRange: axis.visibleRange\n      });\n    }\n    var zoomingEventArgs = {\n      cancel: false,\n      axisCollection: zoomedAxisCollection,\n      name: onZooming\n    };\n    if (!zoomingEventArgs.cancel && this.chart.isBlazor) {\n      this.chart.trigger(onZooming, zoomingEventArgs, function () {\n        _this.performDefferedZoom(chart);\n      });\n    } else {\n      this.chart.trigger(onZooming, zoomingEventArgs, function () {\n        _this.performDefferedZoom(chart);\n        _this.redrawOnZooming(chart, false);\n      });\n    }\n  };\n  Zoom.prototype.performDefferedZoom = function (chart) {\n    var translateX;\n    var translateY;\n    if (this.zooming.enableDeferredZooming) {\n      translateX = chart.mouseX - chart.mouseDownX;\n      translateY = chart.mouseY - chart.mouseDownY;\n      switch (this.zooming.mode) {\n        case 'X':\n          translateY = 0;\n          break;\n        case 'Y':\n          translateX = 0;\n          break;\n      }\n      this.setTransform(translateX, translateY, null, null, chart, false);\n      this.refreshAxis(chart.chartAxisLayoutPanel, chart, chart.axisCollections);\n      if (chart.enableCanvas) {\n        this.performZoomRedraw(chart);\n      }\n    } else {\n      this.performZoomRedraw(chart);\n    }\n    chart.previousMouseMoveX = chart.mouseX;\n    chart.previousMouseMoveY = chart.mouseY;\n  };\n  /**\n   * Redraw the chart on zooming.\n   *\n   * @returns {void}\n   * @private\n   */\n  Zoom.prototype.performZoomRedraw = function (chart) {\n    var rect = this.zoomingRect;\n    chart.animateSeries = false;\n    if (this.isZoomed) {\n      if (rect.width > 0 && rect.height > 0) {\n        this.performedUI = true;\n        chart.svgObject.setAttribute('cursor', 'auto');\n        this.doZoom(chart, chart.axisCollections, chart.chartAxisLayoutPanel.seriesClipRect);\n        chart.isDoubleTap = false;\n      } else if (chart.disableTrackTooltip) {\n        chart.disableTrackTooltip = false;\n        chart.delayRedraw = false;\n        chart.enableCanvas ? chart.createChartSvg() : chart.removeSvg();\n        chart.refreshAxis();\n        chart.refreshBound();\n      }\n    }\n  };\n  Zoom.prototype.refreshAxis = function (layout, chart, axes) {\n    var mode = chart.zoomSettings.mode;\n    layout.measureAxis(new Rect(chart.initialClipRect.x, chart.initialClipRect.y, chart.initialClipRect.width, chart.initialClipRect.height));\n    axes.map(function (axis, index) {\n      if (axis.orientation === 'Horizontal' && mode !== 'Y') {\n        layout.drawXAxisLabels(axis, index, null, axis.placeNextToAxisLine ? axis.updatedRect : axis.rect);\n      }\n      if (axis.orientation === 'Vertical' && mode !== 'X') {\n        layout.drawYAxisLabels(axis, index, null, axis.placeNextToAxisLine ? axis.updatedRect : axis.rect);\n      }\n    });\n  };\n  // Rectangular zoom calculated here performed here\n  Zoom.prototype.doZoom = function (chart, axes, bounds) {\n    var _this = this;\n    var zoomRect = this.zoomingRect;\n    var mode = this.zooming.mode;\n    var argsData;\n    this.isPanning = chart.zoomSettings.enablePan || this.isPanning;\n    var zoomedAxisCollections = [];\n    this.zoomCompleteEvtCollection = [];\n    for (var _i = 0, _a = axes; _i < _a.length; _i++) {\n      var axis = _a[_i];\n      argsData = {\n        cancel: false,\n        name: zoomComplete,\n        axis: axis,\n        previousZoomFactor: axis.zoomFactor,\n        previousZoomPosition: axis.zoomPosition,\n        currentZoomFactor: axis.zoomFactor,\n        currentZoomPosition: axis.zoomPosition,\n        previousVisibleRange: axis.visibleRange,\n        currentVisibleRange: null\n      };\n      if (axis.orientation === 'Horizontal') {\n        if (mode !== 'Y') {\n          argsData.currentZoomPosition += Math.abs((zoomRect.x - bounds.x) / bounds.width) * axis.zoomFactor;\n          argsData.currentZoomFactor *= zoomRect.width / bounds.width;\n        }\n      } else {\n        if (mode !== 'X') {\n          argsData.currentZoomPosition += (1 - Math.abs((zoomRect.height + (zoomRect.y - bounds.y)) / bounds.height)) * axis.zoomFactor;\n          argsData.currentZoomFactor *= zoomRect.height / bounds.height;\n        }\n      }\n      if (parseFloat(argsData.currentZoomFactor.toFixed(3)) <= 0.001) {\n        argsData.currentZoomFactor = argsData.previousZoomFactor;\n        argsData.currentZoomPosition = argsData.previousZoomPosition;\n      }\n      if (!argsData.cancel) {\n        axis.zoomFactor = argsData.currentZoomFactor;\n        axis.zoomPosition = argsData.currentZoomPosition;\n        this.zoomCompleteEvtCollection.push(argsData);\n      }\n      zoomedAxisCollections.push({\n        zoomFactor: axis.zoomFactor,\n        zoomPosition: axis.zoomFactor,\n        axisName: axis.name,\n        axisRange: axis.visibleRange\n      });\n    }\n    var onZoomingEventArg = {\n      cancel: false,\n      axisCollection: zoomedAxisCollections,\n      name: onZooming\n    };\n    if (!onZoomingEventArg.cancel && this.chart.isBlazor) {\n      this.chart.trigger(onZooming, onZoomingEventArg, function () {\n        _this.zoomingRect = new Rect(0, 0, 0, 0);\n        _this.performZoomRedraw(chart);\n      });\n    } else {\n      this.chart.trigger(onZooming, onZoomingEventArg, function () {\n        _this.zoomingRect = new Rect(0, 0, 0, 0);\n        _this.redrawOnZooming(chart);\n      });\n    }\n  };\n  /** It is used to redraw the chart and trigger zoomComplete event */\n  Zoom.prototype.redrawOnZooming = function (chart, isRedraw, isMouseUp) {\n    if (isRedraw === void 0) {\n      isRedraw = true;\n    }\n    if (isMouseUp === void 0) {\n      isMouseUp = false;\n    }\n    var zoomCompleteCollection = isMouseUp ? this.toolkit.zoomCompleteEvtCollection : this.zoomCompleteEvtCollection;\n    if (isRedraw) {\n      this.performZoomRedraw(chart);\n    }\n    var argsData;\n    for (var i = 0; i < zoomCompleteCollection.length; i++) {\n      if (!zoomCompleteCollection[i].cancel) {\n        argsData = {\n          cancel: false,\n          name: zoomComplete,\n          axis: chart.axisCollections[i],\n          previousZoomFactor: zoomCompleteCollection[i].previousZoomFactor,\n          previousZoomPosition: zoomCompleteCollection[i].previousZoomPosition,\n          currentZoomFactor: chart.axisCollections[i].zoomFactor,\n          currentZoomPosition: chart.axisCollections[i].zoomPosition,\n          currentVisibleRange: chart.axisCollections[i].visibleRange,\n          previousVisibleRange: zoomCompleteCollection[i].previousVisibleRange\n        };\n        chart.trigger(zoomComplete, argsData);\n      }\n    }\n  };\n  /**\n   * Function that handles the Mouse wheel zooming.\n   *\n   * @returns {void}\n   * @private\n   */\n  Zoom.prototype.performMouseWheelZooming = function (e, mouseX, mouseY, chart, axes) {\n    var _this = this;\n    var direction = this.browserName === 'mozilla' && !this.isPointer ? -e.detail / 3 > 0 ? 1 : -1 : e['wheelDelta'] > 0 ? 1 : -1;\n    var mode = this.zooming.mode;\n    var origin = 0.5;\n    var cumulative;\n    var zoomFactor;\n    var zoomPosition;\n    this.isZoomed = true;\n    this.calculateZoomAxesRange(chart);\n    chart.disableTrackTooltip = true;\n    this.performedUI = true;\n    this.isPanning = chart.zoomSettings.enablePan || this.isPanning;\n    this.zoomCompleteEvtCollection = [];\n    var argsData;\n    var zoomedAxisCollection = [];\n    for (var _i = 0, _a = axes; _i < _a.length; _i++) {\n      var axis = _a[_i];\n      argsData = {\n        cancel: false,\n        name: zoomComplete,\n        axis: axis,\n        previousZoomFactor: axis.zoomFactor,\n        previousZoomPosition: axis.zoomPosition,\n        currentZoomFactor: axis.zoomFactor,\n        currentZoomPosition: axis.zoomPosition,\n        currentVisibleRange: null,\n        previousVisibleRange: axis.visibleRange\n      };\n      if (axis.orientation === 'Vertical' && mode !== 'X' || axis.orientation === 'Horizontal' && mode !== 'Y') {\n        cumulative = Math.max(Math.max(1 / minMax(axis.zoomFactor, 0, 1), 1) + 0.25 * direction, 1);\n        cumulative = cumulative > 50000000000 ? 50000000000 : cumulative;\n        if (cumulative >= 1) {\n          origin = axis.orientation === 'Horizontal' ? mouseX / axis.rect.width : 1 - mouseY / axis.rect.height;\n          origin = origin > 1 ? 1 : origin < 0 ? 0 : origin;\n          zoomFactor = cumulative === 1 ? 1 : minMax((direction > 0 ? 0.9 : 1.1) / cumulative, 0, 1);\n          zoomPosition = cumulative === 1 ? 0 : axis.zoomPosition + (axis.zoomFactor - zoomFactor) * origin;\n          if (axis.zoomPosition !== zoomPosition || axis.zoomFactor !== zoomFactor) {\n            zoomFactor = zoomPosition + zoomFactor > 1 ? 1 - zoomPosition : zoomFactor;\n          }\n          argsData.currentZoomFactor = zoomFactor;\n          argsData.currentZoomPosition = zoomPosition;\n        }\n        if (!argsData.cancel) {\n          axis.zoomFactor = argsData.currentZoomFactor;\n          axis.zoomPosition = argsData.currentZoomPosition;\n          this.zoomCompleteEvtCollection.push(argsData);\n        }\n      }\n      zoomedAxisCollection.push({\n        zoomFactor: axis.zoomFactor,\n        zoomPosition: axis.zoomFactor,\n        axisName: axis.name,\n        axisRange: axis.visibleRange\n      });\n    }\n    var onZoomingEventArgs = {\n      cancel: false,\n      axisCollection: zoomedAxisCollection,\n      name: onZooming\n    };\n    if (!onZoomingEventArgs.cancel && this.chart.isBlazor) {\n      this.chart.trigger(onZooming, onZoomingEventArgs, function () {\n        _this.performZoomRedraw(chart);\n      });\n    } else {\n      this.chart.trigger(onZooming, onZoomingEventArgs, function () {\n        _this.redrawOnZooming(chart);\n      });\n    }\n  };\n  /**\n   * Function that handles the Pinch zooming.\n   *\n   * @returns {void}\n   * @private\n   */\n  Zoom.prototype.performPinchZooming = function (e, chart) {\n    if (this.zoomingRect.width > 0 && this.zoomingRect.height > 0 || chart.startMove && chart.crosshair.enable) {\n      return false;\n    }\n    this.calculateZoomAxesRange(chart);\n    this.isZoomed = true;\n    this.isPanning = true;\n    this.performedUI = true;\n    this.offset = !chart.delayRedraw ? chart.chartAxisLayoutPanel.seriesClipRect : this.offset;\n    chart.delayRedraw = true;\n    chart.disableTrackTooltip = true;\n    var elementOffset = chart.element.getBoundingClientRect();\n    var touchDown = this.touchStartList;\n    var touchMove = this.touchMoveList;\n    var touch0StartX = touchDown[0].pageX - elementOffset.left;\n    var touch0StartY = touchDown[0].pageY - elementOffset.top;\n    var touch0EndX = touchMove[0].pageX - elementOffset.left;\n    var touch0EndY = touchMove[0].pageY - elementOffset.top;\n    var touch1StartX = touchDown[1].pageX - elementOffset.left;\n    var touch1StartY = touchDown[1].pageY - elementOffset.top;\n    var touch1EndX = touchMove[1].pageX - elementOffset.left;\n    var touch1EndY = touchMove[1].pageY - elementOffset.top;\n    var scaleX = Math.abs(touch0EndX - touch1EndX) / Math.abs(touch0StartX - touch1StartX);\n    var scaleY = Math.abs(touch0EndY - touch1EndY) / Math.abs(touch0StartY - touch1StartY);\n    var clipX = (this.offset.x - touch0EndX) / scaleX + touch0StartX;\n    var clipY = (this.offset.y - touch0EndY) / scaleY + touch0StartY;\n    var pinchRect = new Rect(clipX, clipY, this.offset.width / scaleX, this.offset.height / scaleY);\n    var translateXValue = touch0EndX - scaleX * touch0StartX;\n    var translateYValue = touch0EndY - scaleY * touch0StartY;\n    if (!isNaN(scaleX - scaleX) && !isNaN(scaleY - scaleY)) {\n      switch (this.zooming.mode) {\n        case 'XY':\n          this.setTransform(translateXValue, translateYValue, scaleX, scaleY, chart, true);\n          break;\n        case 'X':\n          this.setTransform(translateXValue, 0, scaleX, 1, chart, true);\n          break;\n        case 'Y':\n          this.setTransform(0, translateYValue, 1, scaleY, chart, true);\n          break;\n      }\n    }\n    this.calculatePinchZoomFactor(chart, pinchRect);\n    this.refreshAxis(chart.chartAxisLayoutPanel, chart, chart.axisCollections);\n    this.redrawOnZooming(chart, false);\n    return true;\n  };\n  Zoom.prototype.calculatePinchZoomFactor = function (chart, pinchRect) {\n    var mode = this.zooming.mode;\n    var selectionMin;\n    var selectionMax;\n    var rangeMin;\n    var rangeMax;\n    var value;\n    var axisTrans;\n    var argsData;\n    var currentZF;\n    var currentZP;\n    var zoomedAxisCollection = [];\n    this.zoomCompleteEvtCollection = [];\n    for (var index = 0; index < chart.axisCollections.length; index++) {\n      var axis = chart.axisCollections[index];\n      if (axis.orientation === 'Horizontal' && mode !== 'Y' || axis.orientation === 'Vertical' && mode !== 'X') {\n        currentZF = axis.zoomFactor;\n        currentZP = axis.zoomPosition;\n        argsData = {\n          cancel: false,\n          name: zoomComplete,\n          axis: axis,\n          previousZoomFactor: axis.zoomFactor,\n          previousZoomPosition: axis.zoomPosition,\n          currentZoomFactor: currentZF,\n          currentZoomPosition: currentZP,\n          previousVisibleRange: axis.visibleRange,\n          currentVisibleRange: null\n        };\n        if (axis.orientation === 'Horizontal') {\n          value = pinchRect.x - this.offset.x;\n          axisTrans = axis.rect.width / this.zoomAxes[index].delta;\n          rangeMin = value / axisTrans + this.zoomAxes[index].min;\n          value = pinchRect.x + pinchRect.width - this.offset.x;\n          rangeMax = value / axisTrans + this.zoomAxes[index].min;\n        } else {\n          value = pinchRect.y - this.offset.y;\n          axisTrans = axis.rect.height / this.zoomAxes[index].delta;\n          rangeMin = (value * -1 + axis.rect.height) / axisTrans + this.zoomAxes[index].min;\n          value = pinchRect.y + pinchRect.height - this.offset.y;\n          rangeMax = (value * -1 + axis.rect.height) / axisTrans + this.zoomAxes[index].min;\n        }\n        selectionMin = Math.min(rangeMin, rangeMax);\n        selectionMax = Math.max(rangeMin, rangeMax);\n        currentZP = (selectionMin - this.zoomAxes[index].actualMin) / this.zoomAxes[index].actualDelta;\n        currentZF = (selectionMax - selectionMin) / this.zoomAxes[index].actualDelta;\n        argsData.currentZoomPosition = currentZP < 0 ? 0 : currentZP;\n        argsData.currentZoomFactor = currentZF > 1 ? 1 : currentZF < 0.03 ? 0.03 : currentZF;\n        if (!argsData.cancel) {\n          axis.zoomFactor = argsData.currentZoomFactor;\n          axis.zoomPosition = argsData.currentZoomPosition;\n          this.zoomCompleteEvtCollection.push(argsData);\n        }\n        zoomedAxisCollection.push({\n          zoomFactor: axis.zoomFactor,\n          zoomPosition: axis.zoomFactor,\n          axisName: axis.name,\n          axisRange: axis.visibleRange\n        });\n      }\n    }\n    var onZoomingEventArgs = {\n      cancel: false,\n      axisCollection: zoomedAxisCollection,\n      name: onZooming\n    };\n    if (!onZoomingEventArgs.cancel) {\n      this.chart.trigger(onZooming, onZoomingEventArgs);\n    }\n  };\n  // Series transformation style applied here.\n  Zoom.prototype.setTransform = function (transX, transY, scaleX, scaleY, chart, isPinch) {\n    if (!chart.enableCanvas) {\n      chart.seriesElements.setAttribute('clip-path', 'url(#' + this.elementId + '_ChartAreaClipRect_)');\n    }\n    if (chart.indicatorElements) {\n      chart.indicatorElements.setAttribute('clip-path', 'url(#' + this.elementId + '_ChartAreaClipRect_)');\n    }\n    var translate;\n    var xAxisLoc;\n    var yAxisLoc;\n    var element;\n    if (transX !== null && transY !== null) {\n      for (var _i = 0, _a = chart.visibleSeries; _i < _a.length; _i++) {\n        var value = _a[_i];\n        xAxisLoc = chart.requireInvertedAxis ? value.yAxis.rect.x : value.xAxis.rect.x;\n        yAxisLoc = chart.requireInvertedAxis ? value.xAxis.rect.y : value.yAxis.rect.y;\n        translate = 'translate(' + (transX + (isPinch ? scaleX * xAxisLoc : xAxisLoc)) + ',' + (transY + (isPinch ? scaleY * yAxisLoc : yAxisLoc)) + ')';\n        translate = scaleX || scaleY ? translate + ' scale(' + scaleX + ' ' + scaleY + ')' : translate;\n        if (value.visible) {\n          if (value.category === 'Indicator') {\n            value.seriesElement.parentNode.setAttribute('transform', translate);\n          } else {\n            if (!chart.enableCanvas) {\n              value.seriesElement.setAttribute('transform', translate);\n            }\n          }\n          element = getElement(chart.element.id + '_Series_' + value.index + '_DataLabelCollections');\n          if (value.errorBarElement) {\n            value.errorBarElement.setAttribute('transform', translate);\n          }\n          if (value.symbolElement) {\n            value.symbolElement.setAttribute('transform', translate);\n          }\n          if (value.textElement) {\n            value.textElement.setAttribute('visibility', 'hidden');\n            value.shapeElement.setAttribute('visibility', 'hidden');\n          }\n          if (element) {\n            element.style.visibility = 'hidden';\n          }\n        }\n      }\n    }\n  };\n  Zoom.prototype.calculateZoomAxesRange = function (chart) {\n    var range;\n    var axisRange;\n    for (var index = 0; index < chart.axisCollections.length; index++) {\n      var axis = chart.axisCollections[index];\n      axisRange = axis.visibleRange;\n      if (this.zoomAxes[index]) {\n        if (!chart.delayRedraw) {\n          this.zoomAxes[index].min = axisRange.min;\n          this.zoomAxes[index].delta = axisRange.delta;\n        }\n      } else {\n        range = {\n          actualMin: axis.actualRange.min,\n          actualDelta: axis.actualRange.delta,\n          min: axisRange.min,\n          delta: axisRange.delta\n        };\n        this.zoomAxes[index] = range;\n      }\n    }\n  };\n  // Zooming Toolkit created here\n  Zoom.prototype.showZoomingToolkit = function (chart) {\n    var toolboxItems = this.zooming.toolbarItems;\n    var areaBounds = chart.chartAxisLayoutPanel.seriesClipRect;\n    var spacing = 5;\n    var render = chart.svgRenderer;\n    var length = this.isDevice ? 1 : toolboxItems.length;\n    var iconSize = this.isDevice ? measureText('Reset Zoom', {\n      size: '12px'\n    }).width : 16;\n    var height = this.isDevice ? measureText('Reset Zoom', {\n      size: '12px'\n    }).height : 22;\n    var width = length * iconSize + (length + 1) * spacing + (length - 1) * spacing;\n    var transX = areaBounds.x + areaBounds.width - width - spacing;\n    var transY = areaBounds.y + spacing;\n    var xPosition = spacing;\n    var toolkit = this.toolkit;\n    var element;\n    var shadowElement = '<filter id=\"chart_shadow\" height=\"130%\"><feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"5\"/>';\n    shadowElement += '<feOffset dx=\"-3\" dy=\"4\" result=\"offsetblur\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"1\"/>';\n    shadowElement += '</feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge></filter>';\n    if (length === 0 || getElement(this.elementId + '_Zooming_KitCollection')) {\n      return false;\n    }\n    var defElement = render.createDefs();\n    toolboxItems = this.isDevice ? ['Reset'] : toolboxItems;\n    defElement.innerHTML = shadowElement;\n    this.toolkitElements = render.createGroup({\n      id: this.elementId + '_Zooming_KitCollection',\n      transform: 'translate(' + transX + ',' + transY + ')'\n    });\n    this.toolkitElements.appendChild(defElement);\n    var zoomFillColor = this.chart.theme === 'Tailwind' ? '#F3F4F6' : this.chart.theme === 'Fluent' ? '#F3F2F1' : this.chart.theme === \"FluentDark\" ? \"#252423\" : '#fafafa';\n    this.toolkitElements.appendChild(render.drawRectangle(new RectOption(this.elementId + '_Zooming_Rect', zoomFillColor, {\n      color: 'transparent',\n      width: 1\n    }, 1, new Rect(0, 0, width, height + spacing * 2), 0, 0)));\n    var outerElement = render.drawRectangle(new RectOption(this.elementId + '_Zooming_Rect', zoomFillColor, {\n      color: 'transparent',\n      width: 1\n    }, 0.1, new Rect(0, 0, width, height + spacing * 2), 0, 0));\n    if (this.chart.theme === 'Tailwind' || this.chart.theme === 'TailwindDark') {\n      outerElement.setAttribute('box-shadow', '0px 1px 2px rgba(0, 0, 0, 0.06), 0px 1px 3px rgba(0, 0, 0, 0.1)');\n    } else {\n      outerElement.setAttribute('filter', 'url(#chart_shadow)');\n    }\n    this.toolkitElements.appendChild(outerElement);\n    var currentItem;\n    var panIcon = false;\n    for (var i = 1; i <= length; i++) {\n      currentItem = toolboxItems[i - 1];\n      element = render.createGroup({\n        transform: 'translate(' + xPosition + ',' + (this.isDevice ? spacing : spacing + 3) + ')'\n      });\n      // for desktop toolkit hight is 32 and top padding is 8 icon size 16\n      switch (currentItem) {\n        case 'Pan':\n          toolkit.createPanButton(element, this.toolkitElements);\n          panIcon = true;\n          break;\n        case 'Zoom':\n          toolkit.createZoomButton(element, this.toolkitElements);\n          break;\n        case 'ZoomIn':\n          toolkit.createZoomInButton(element, this.toolkitElements, chart);\n          break;\n        case 'ZoomOut':\n          toolkit.createZoomOutButton(element, this.toolkitElements, chart);\n          break;\n        case 'Reset':\n          toolkit.createResetButton(element, this.toolkitElements, chart, this.isDevice);\n          break;\n      }\n      xPosition += iconSize + spacing * 2;\n    }\n    this.toolkitElements.setAttribute('opacity', this.isDevice ? '1' : '' + this.zoomkitOpacity);\n    this.toolkitElements.setAttribute('cursor', 'auto');\n    if (chart.enableCanvas) {\n      var zoomDiv = document.createElement('div');\n      zoomDiv.id = chart.element.id + '_zoom';\n      zoomDiv.style.cssText = 'position:absolute; z-index:1';\n      var zoomheight = chart.availableSize.height / 2;\n      var svg = chart.svgRenderer.createSvg({\n        id: chart.element.id + '_zoomkit_svg',\n        width: chart.availableSize.width,\n        height: zoomheight\n      });\n      svg.style.position = 'absolute';\n      svg.appendChild(this.toolkitElements);\n      zoomDiv.appendChild(svg);\n      document.getElementById(this.elementId + '_Secondary_Element').appendChild(zoomDiv);\n    } else {\n      chart.svgObject.appendChild(this.toolkitElements);\n    }\n    if (!this.isDevice) {\n      EventHandler.add(this.toolkitElements, 'mousemove touchstart', this.zoomToolkitMove, this);\n      EventHandler.add(this.toolkitElements, 'mouseleave touchend', this.zoomToolkitLeave, this);\n      if (this.isPanning && panIcon) {\n        toolkit.pan();\n      }\n    }\n    return true;\n  };\n  /**\n   * To the show the zooming toolkit.\n   *\n   * @returns {void}\n   * @private\n   */\n  Zoom.prototype.applyZoomToolkit = function (chart, axes) {\n    var showToolkit = this.isAxisZoomed(axes);\n    if (showToolkit) {\n      this.showZoomingToolkit(chart);\n      this.isZoomed = true;\n    } else if (chart.zoomSettings.showToolbar) {\n      this.isZoomed = showToolkit;\n      this.showZoomingToolkit(chart);\n    } else {\n      this.toolkit.removeTooltip();\n      this.isPanning = false;\n      this.isZoomed = false;\n      chart.isZoomed = false;\n      chart.svgObject.setAttribute('cursor', 'auto');\n    }\n  };\n  /**\n   * Return boolean property to show zooming toolkit.\n   *\n   * @returns {void}\n   * @private\n   */\n  Zoom.prototype.isAxisZoomed = function (axes) {\n    var showToolkit = false;\n    for (var _i = 0, _a = axes; _i < _a.length; _i++) {\n      var axis = _a[_i];\n      showToolkit = showToolkit || axis.zoomFactor !== 1 || axis.zoomPosition !== 0;\n    }\n    return showToolkit;\n  };\n  Zoom.prototype.zoomToolkitMove = function () {\n    var element = this.toolkitElements;\n    this.zoomkitOpacity = 1;\n    element.setAttribute('opacity', '' + this.zoomkitOpacity);\n    return false;\n  };\n  Zoom.prototype.zoomToolkitLeave = function () {\n    var element = this.toolkitElements;\n    this.zoomkitOpacity = 0.3;\n    element.setAttribute('opacity', '' + this.zoomkitOpacity);\n    return false;\n  };\n  /**\n   * @hidden\n   */\n  Zoom.prototype.addEventListener = function () {\n    if (this.chart.isDestroyed) {\n      return;\n    }\n    EventHandler.add(this.chart.element, this.wheelEvent, this.chartMouseWheel, this);\n    this.chart.on(Browser.touchMoveEvent, this.mouseMoveHandler, this);\n    this.chart.on(Browser.touchStartEvent, this.mouseDownHandler, this);\n    this.chart.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    this.chart.on(this.cancelEvent, this.mouseCancelHandler, this);\n  };\n  /**\n   * @hidden\n   */\n  Zoom.prototype.removeEventListener = function () {\n    if (this.chart.isDestroyed) {\n      return;\n    }\n    EventHandler.remove(this.chart.element, this.wheelEvent, this.chartMouseWheel);\n    this.chart.off(Browser.touchMoveEvent, this.mouseMoveHandler);\n    this.chart.off(Browser.touchStartEvent, this.mouseDownHandler);\n    this.chart.off(Browser.touchEndEvent, this.mouseUpHandler);\n    this.chart.off(this.cancelEvent, this.mouseCancelHandler);\n  };\n  /**\n   * Handles the mouse wheel on chart.\n   *\n   * @returns {boolean} false\n   * @private\n   */\n  Zoom.prototype.chartMouseWheel = function (e) {\n    var chart = this.chart;\n    var offset = chart.element.getBoundingClientRect();\n    var svgRect = getElement(chart.svgId).getBoundingClientRect();\n    var mouseX = e.clientX - offset.left - Math.max(svgRect.left - offset.left, 0);\n    var mouseY = e.clientY - offset.top - Math.max(svgRect.top - offset.top, 0);\n    if (this.zooming.enableMouseWheelZooming && withInBounds(mouseX, mouseY, chart.chartAxisLayoutPanel.seriesClipRect)) {\n      e.preventDefault();\n      this.performMouseWheelZooming(e, mouseX, mouseY, chart, chart.axisCollections);\n    }\n    return false;\n  };\n  /**\n   * @hidden\n   */\n  Zoom.prototype.mouseMoveHandler = function (e) {\n    //Zooming for chart\n    var chart = this.chart;\n    var touches = null;\n    if (e.type === 'touchmove') {\n      if (e.preventDefault && this.isIOS && (this.isPanning || chart.isDoubleTap || this.zooming.enablePinchZooming && this.touchStartList.length > 1)) {\n        e.preventDefault();\n      }\n      touches = e.touches;\n    }\n    if (chart.isChartDrag) {\n      if (chart.isTouch) {\n        this.touchMoveList = this.addTouchPointer(this.touchMoveList, e, touches);\n        if (this.zooming.enablePinchZooming && this.touchMoveList.length > 1 && this.touchStartList.length > 1) {\n          this.performPinchZooming(e, chart);\n        }\n      }\n      this.renderZooming(e, chart, chart.isTouch);\n    }\n  };\n  /**\n   * @hidden\n   */\n  Zoom.prototype.mouseDownHandler = function (e) {\n    //Zooming for chart\n    var chart = this.chart;\n    var touches = null;\n    var target;\n    if (e.type === 'touchstart') {\n      touches = e.touches;\n      target = e.target;\n    } else {\n      target = e.target;\n    }\n    if (target.id.indexOf(chart.element.id + '_Zooming_') === -1 && withInBounds(chart.previousMouseMoveX, chart.previousMouseMoveY, chart.chartAxisLayoutPanel.seriesClipRect)) {\n      chart.isChartDrag = true;\n    }\n    if (chart.isTouch) {\n      this.touchStartList = this.addTouchPointer(this.touchStartList, e, touches);\n    }\n  };\n  /**\n   * @hidden\n   */\n  Zoom.prototype.mouseUpHandler = function (e) {\n    var chart = this.chart;\n    var performZoomRedraw = e.target.id.indexOf(chart.element.id + '_ZoomOut_') === -1 || e.target.id.indexOf(chart.element.id + '_ZoomIn_') === -1;\n    if (chart.isChartDrag || performZoomRedraw) {\n      this.redrawOnZooming(chart, true, true);\n    }\n    if (chart.isTouch) {\n      if (chart.isDoubleTap && withInBounds(chart.mouseX, chart.mouseY, chart.chartAxisLayoutPanel.seriesClipRect) && this.touchStartList.length === 1 && this.isZoomed) {\n        this.toolkit.reset(e);\n      }\n      this.touchStartList = [];\n      chart.isDoubleTap = false;\n    }\n  };\n  /**\n   * @hidden\n   */\n  Zoom.prototype.mouseCancelHandler = function () {\n    if (this.isZoomed) {\n      this.performZoomRedraw(this.chart);\n    }\n    this.pinchTarget = null;\n    this.touchStartList = [];\n    this.touchMoveList = [];\n  };\n  /**\n   * Handles the touch pointer.\n   *\n   * @returns {ITouches[]} touchList collection\n   * @private\n   */\n  Zoom.prototype.addTouchPointer = function (touchList, e, touches) {\n    if (touches) {\n      touchList = [];\n      for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({\n          pageX: touches[i].clientX,\n          pageY: touches[i].clientY,\n          pointerId: null\n        });\n      }\n    } else {\n      touchList = touchList ? touchList : [];\n      if (touchList.length === 0) {\n        touchList.push({\n          pageX: e.clientX,\n          pageY: e.clientY,\n          pointerId: e.pointerId\n        });\n      } else {\n        for (var i = 0, length_2 = touchList.length; i < length_2; i++) {\n          if (touchList[i].pointerId === e.pointerId) {\n            touchList[i] = {\n              pageX: e.clientX,\n              pageY: e.clientY,\n              pointerId: e.pointerId\n            };\n          } else {\n            touchList.push({\n              pageX: e.clientX,\n              pageY: e.clientY,\n              pointerId: e.pointerId\n            });\n          }\n        }\n      }\n    }\n    return touchList;\n  };\n  /**\n   * Get module name.\n   */\n  Zoom.prototype.getModuleName = function () {\n    // Returns te module name\n    return 'Zoom';\n  };\n  /**\n   * To destroy the zooming.\n   *\n   * @returns {void}\n   * @private\n   */\n  Zoom.prototype.destroy = function () {\n    // Destroy method performed here\n    this.removeEventListener();\n  };\n  return Zoom;\n}();\nexport { Zoom };","map":{"version":3,"names":["EventHandler","Browser","createElement","getRectLocation","minMax","getElement","ChartLocation","RectOption","Rect","measureText","Toolkit","zoomComplete","onZooming","withInBounds","Zoom","chart","zoomCompleteEvtCollection","isPointer","browserName","info","name","wheelEvent","cancelEvent","addEventListener","isDevice","zooming","zoomSettings","toolkit","elementId","element","id","zoomingRect","zoomAxes","zoomkitOpacity","isIOS","isIos","isIos7","isZoomed","performedUI","enablePan","enableSelectionZooming","enableScrollbar","scrollElement","prototype","renderZooming","e","isTouch","calculateZoomAxesRange","isDoubleTap","touchStartList","length","isPanning","drawZoomingRectangle","isChartDrag","pinchTarget","target","doPan","axisCollections","areaBounds","chartAxisLayoutPanel","seriesClipRect","startLocation","previousMouseMoveX","previousMouseMoveY","endLocation","mouseX","mouseY","rect","width","height","disableTrackTooltip","svgObject","setAttribute","mode","y","x","svg","enableCanvas","document","getElementById","appendChild","svgRenderer","drawRectangle","themeStyle","selectionRectFill","color","selectionRectStroke","axes","xDifference","yDifference","_this","startMove","crosshair","enable","currentScale","offset","delayRedraw","argsData","zoomedAxisCollection","_i","_a","axis","cancel","previousZoomFactor","zoomFactor","previousZoomPosition","zoomPosition","currentZoomFactor","currentZoomPosition","previousVisibleRange","visibleRange","currentVisibleRange","Math","max","orientation","push","axisName","axisRange","zoomingEventArgs","axisCollection","isBlazor","trigger","performDefferedZoom","redrawOnZooming","translateX","translateY","enableDeferredZooming","mouseDownX","mouseDownY","setTransform","refreshAxis","performZoomRedraw","animateSeries","doZoom","createChartSvg","removeSvg","refreshBound","layout","measureAxis","initialClipRect","map","index","drawXAxisLabels","placeNextToAxisLine","updatedRect","drawYAxisLabels","bounds","zoomRect","zoomedAxisCollections","abs","parseFloat","toFixed","onZoomingEventArg","isRedraw","isMouseUp","zoomCompleteCollection","i","performMouseWheelZooming","direction","detail","origin","cumulative","onZoomingEventArgs","performPinchZooming","elementOffset","getBoundingClientRect","touchDown","touchMove","touchMoveList","touch0StartX","pageX","left","touch0StartY","pageY","top","touch0EndX","touch0EndY","touch1StartX","touch1StartY","touch1EndX","touch1EndY","scaleX","scaleY","clipX","clipY","pinchRect","translateXValue","translateYValue","isNaN","calculatePinchZoomFactor","selectionMin","selectionMax","rangeMin","rangeMax","value","axisTrans","currentZF","currentZP","delta","min","actualMin","actualDelta","transX","transY","isPinch","seriesElements","indicatorElements","translate","xAxisLoc","yAxisLoc","visibleSeries","requireInvertedAxis","yAxis","xAxis","visible","category","seriesElement","parentNode","errorBarElement","symbolElement","textElement","shapeElement","style","visibility","range","actualRange","showZoomingToolkit","toolboxItems","toolbarItems","spacing","render","iconSize","size","xPosition","shadowElement","defElement","createDefs","innerHTML","toolkitElements","createGroup","transform","zoomFillColor","theme","outerElement","currentItem","panIcon","createPanButton","createZoomButton","createZoomInButton","createZoomOutButton","createResetButton","zoomDiv","cssText","zoomheight","availableSize","createSvg","position","add","zoomToolkitMove","zoomToolkitLeave","pan","applyZoomToolkit","showToolkit","isAxisZoomed","showToolbar","removeTooltip","isDestroyed","chartMouseWheel","on","touchMoveEvent","mouseMoveHandler","touchStartEvent","mouseDownHandler","touchEndEvent","mouseUpHandler","mouseCancelHandler","removeEventListener","remove","off","svgRect","svgId","clientX","clientY","enableMouseWheelZooming","preventDefault","touches","type","enablePinchZooming","addTouchPointer","indexOf","reset","touchList","length_1","pointerId","length_2","getModuleName","destroy"],"sources":["/Users/thonghoangdanh/FullStack/birdnest/node_modules/@syncfusion/ej2-charts/src/chart/user-interaction/zooming.js"],"sourcesContent":["import { EventHandler, Browser, createElement } from '@syncfusion/ej2-base';\nimport { getRectLocation, minMax, getElement, ChartLocation, RectOption } from '../../common/utils/helper';\nimport { Rect, measureText } from '@syncfusion/ej2-svg-base';\nimport { Toolkit } from './zooming-toolkit';\nimport { zoomComplete, onZooming } from '../../common/model/constants';\nimport { withInBounds } from '../../common/utils/helper';\n/**\n * `Zooming` module handles the zooming for chart.\n */\nvar Zoom = /** @class */ (function () {\n    /**\n     * Constructor for Zooming module.\n     *\n     * @private\n     */\n    function Zoom(chart) {\n        this.zoomCompleteEvtCollection = [];\n        this.chart = chart;\n        this.isPointer = Browser.isPointer;\n        this.browserName = Browser.info.name;\n        this.wheelEvent = this.browserName === 'mozilla' ? (this.isPointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        this.cancelEvent = this.isPointer ? 'pointerleave' : 'mouseleave';\n        this.addEventListener();\n        this.isDevice = Browser.isDevice;\n        var zooming = chart.zoomSettings;\n        this.toolkit = new Toolkit(chart);\n        this.zooming = zooming;\n        this.elementId = chart.element.id;\n        this.zoomingRect = new Rect(0, 0, 0, 0);\n        this.zoomAxes = [];\n        this.zoomkitOpacity = 0.3;\n        this.isIOS = Browser.isIos || Browser.isIos7;\n        this.isZoomed = this.performedUI = this.zooming.enablePan && this.zooming.enableSelectionZooming;\n        if (zooming.enableScrollbar) {\n            chart.scrollElement = createElement('div', { id: chart.element.id + '_scrollElement' });\n        }\n    }\n    /**\n     * Function that handles the Rectangular zooming.\n     *\n     * @returns {void}\n     */\n    Zoom.prototype.renderZooming = function (e, chart, isTouch) {\n        this.calculateZoomAxesRange(chart);\n        if (this.zooming.enableSelectionZooming && (!isTouch\n            || (chart.isDoubleTap && this.touchStartList.length === 1)) && (!this.isPanning || chart.isDoubleTap)) {\n            this.isPanning = this.isDevice ? true : this.isPanning;\n            this.performedUI = true;\n            this.drawZoomingRectangle(chart);\n        }\n        else if (this.isPanning && chart.isChartDrag) {\n            if (!isTouch || (isTouch && this.touchStartList.length === 1)) {\n                this.pinchTarget = isTouch ? e.target : null;\n                this.doPan(chart, chart.axisCollections);\n            }\n        }\n    };\n    // Zooming rectangle drawn here\n    Zoom.prototype.drawZoomingRectangle = function (chart) {\n        var areaBounds = chart.chartAxisLayoutPanel.seriesClipRect;\n        var startLocation = new ChartLocation(chart.previousMouseMoveX, chart.previousMouseMoveY);\n        var endLocation = new ChartLocation(chart.mouseX, chart.mouseY);\n        var rect = this.zoomingRect = getRectLocation(startLocation, endLocation, areaBounds);\n        if (rect.width > 0 && rect.height > 0) {\n            this.isZoomed = true;\n            chart.disableTrackTooltip = true;\n            chart.svgObject.setAttribute('cursor', 'crosshair');\n            if (this.zooming.mode === 'X') {\n                rect.height = areaBounds.height;\n                rect.y = areaBounds.y;\n            }\n            else if (this.zooming.mode === 'Y') {\n                rect.width = areaBounds.width;\n                rect.x = areaBounds.x;\n            }\n            var svg = chart.enableCanvas ? document.getElementById(this.elementId + '_tooltip_svg') : chart.svgObject;\n            svg.appendChild(chart.svgRenderer.drawRectangle(new RectOption(this.elementId + '_ZoomArea', chart.themeStyle.selectionRectFill, { color: chart.themeStyle.selectionRectStroke, width: 1 }, 1, rect, 0, 0, '', '3')));\n        }\n    };\n    // Panning performed here\n    Zoom.prototype.doPan = function (chart, axes, xDifference, yDifference) {\n        var _this = this;\n        if (xDifference === void 0) { xDifference = 0; }\n        if (yDifference === void 0) { yDifference = 0; }\n        if (chart.startMove && chart.crosshair.enable) {\n            return null;\n        }\n        var currentScale;\n        var offset;\n        this.isZoomed = true;\n        this.offset = !chart.delayRedraw ? chart.chartAxisLayoutPanel.seriesClipRect : this.offset;\n        chart.delayRedraw = true;\n        this.zoomCompleteEvtCollection = [];\n        chart.disableTrackTooltip = true;\n        var argsData;\n        var zoomedAxisCollection = [];\n        for (var _i = 0, _a = axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            argsData = {\n                cancel: false, name: zoomComplete, axis: axis, previousZoomFactor: axis.zoomFactor,\n                previousZoomPosition: axis.zoomPosition, currentZoomFactor: axis.zoomFactor,\n                currentZoomPosition: axis.zoomPosition, previousVisibleRange: axis.visibleRange,\n                currentVisibleRange: null\n            };\n            currentScale = Math.max(1 / minMax(axis.zoomFactor, 0, 1), 1);\n            if (axis.orientation === 'Horizontal') {\n                offset = (xDifference != 0 ? xDifference : (chart.previousMouseMoveX - chart.mouseX)) / axis.rect.width / currentScale;\n                argsData.currentZoomPosition = minMax(axis.zoomPosition + offset, 0, (1 - axis.zoomFactor));\n            }\n            else {\n                offset = (yDifference != 0 ? yDifference : (chart.previousMouseMoveY - chart.mouseY)) / axis.rect.height / currentScale;\n                argsData.currentZoomPosition = minMax(axis.zoomPosition - offset, 0, (1 - axis.zoomFactor));\n            }\n            if (!argsData.cancel) {\n                axis.zoomFactor = argsData.currentZoomFactor;\n                axis.zoomPosition = argsData.currentZoomPosition;\n                this.zoomCompleteEvtCollection.push(argsData);\n            }\n            zoomedAxisCollection.push({\n                zoomFactor: axis.zoomFactor, zoomPosition: axis.zoomFactor, axisName: axis.name,\n                axisRange: axis.visibleRange\n            });\n        }\n        var zoomingEventArgs = { cancel: false, axisCollection: zoomedAxisCollection, name: onZooming };\n        if (!zoomingEventArgs.cancel && this.chart.isBlazor) {\n            this.chart.trigger(onZooming, zoomingEventArgs, function () {\n                _this.performDefferedZoom(chart);\n            });\n        }\n        else {\n            this.chart.trigger(onZooming, zoomingEventArgs, function () {\n                _this.performDefferedZoom(chart);\n                _this.redrawOnZooming(chart, false);\n            });\n        }\n    };\n    Zoom.prototype.performDefferedZoom = function (chart) {\n        var translateX;\n        var translateY;\n        if (this.zooming.enableDeferredZooming) {\n            translateX = chart.mouseX - chart.mouseDownX;\n            translateY = chart.mouseY - chart.mouseDownY;\n            switch (this.zooming.mode) {\n                case 'X':\n                    translateY = 0;\n                    break;\n                case 'Y':\n                    translateX = 0;\n                    break;\n            }\n            this.setTransform(translateX, translateY, null, null, chart, false);\n            this.refreshAxis(chart.chartAxisLayoutPanel, chart, chart.axisCollections);\n            if (chart.enableCanvas) {\n                this.performZoomRedraw(chart);\n            }\n        }\n        else {\n            this.performZoomRedraw(chart);\n        }\n        chart.previousMouseMoveX = chart.mouseX;\n        chart.previousMouseMoveY = chart.mouseY;\n    };\n    /**\n     * Redraw the chart on zooming.\n     *\n     * @returns {void}\n     * @private\n     */\n    Zoom.prototype.performZoomRedraw = function (chart) {\n        var rect = this.zoomingRect;\n        chart.animateSeries = false;\n        if (this.isZoomed) {\n            if (rect.width > 0 && rect.height > 0) {\n                this.performedUI = true;\n                chart.svgObject.setAttribute('cursor', 'auto');\n                this.doZoom(chart, chart.axisCollections, chart.chartAxisLayoutPanel.seriesClipRect);\n                chart.isDoubleTap = false;\n            }\n            else if (chart.disableTrackTooltip) {\n                chart.disableTrackTooltip = false;\n                chart.delayRedraw = false;\n                chart.enableCanvas ? chart.createChartSvg() : chart.removeSvg();\n                chart.refreshAxis();\n                chart.refreshBound();\n            }\n        }\n    };\n    Zoom.prototype.refreshAxis = function (layout, chart, axes) {\n        var mode = chart.zoomSettings.mode;\n        layout.measureAxis(new Rect(chart.initialClipRect.x, chart.initialClipRect.y, chart.initialClipRect.width, chart.initialClipRect.height));\n        axes.map(function (axis, index) {\n            if (axis.orientation === 'Horizontal' && mode !== 'Y') {\n                layout.drawXAxisLabels(axis, index, null, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n            }\n            if (axis.orientation === 'Vertical' && mode !== 'X') {\n                layout.drawYAxisLabels(axis, index, null, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n            }\n        });\n    };\n    // Rectangular zoom calculated here performed here\n    Zoom.prototype.doZoom = function (chart, axes, bounds) {\n        var _this = this;\n        var zoomRect = this.zoomingRect;\n        var mode = this.zooming.mode;\n        var argsData;\n        this.isPanning = chart.zoomSettings.enablePan || this.isPanning;\n        var zoomedAxisCollections = [];\n        this.zoomCompleteEvtCollection = [];\n        for (var _i = 0, _a = axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            argsData = {\n                cancel: false, name: zoomComplete, axis: axis,\n                previousZoomFactor: axis.zoomFactor,\n                previousZoomPosition: axis.zoomPosition,\n                currentZoomFactor: axis.zoomFactor,\n                currentZoomPosition: axis.zoomPosition,\n                previousVisibleRange: axis.visibleRange, currentVisibleRange: null\n            };\n            if (axis.orientation === 'Horizontal') {\n                if (mode !== 'Y') {\n                    argsData.currentZoomPosition += Math.abs((zoomRect.x - bounds.x) / (bounds.width)) * axis.zoomFactor;\n                    argsData.currentZoomFactor *= (zoomRect.width / bounds.width);\n                }\n            }\n            else {\n                if (mode !== 'X') {\n                    argsData.currentZoomPosition += (1 - Math.abs((zoomRect.height + (zoomRect.y - bounds.y)) / (bounds.height)))\n                        * axis.zoomFactor;\n                    argsData.currentZoomFactor *= (zoomRect.height / bounds.height);\n                }\n            }\n            if (parseFloat(argsData.currentZoomFactor.toFixed(3)) <= 0.001) {\n                argsData.currentZoomFactor = argsData.previousZoomFactor;\n                argsData.currentZoomPosition = argsData.previousZoomPosition;\n            }\n            if (!argsData.cancel) {\n                axis.zoomFactor = argsData.currentZoomFactor;\n                axis.zoomPosition = argsData.currentZoomPosition;\n                this.zoomCompleteEvtCollection.push(argsData);\n            }\n            zoomedAxisCollections.push({\n                zoomFactor: axis.zoomFactor, zoomPosition: axis.zoomFactor, axisName: axis.name,\n                axisRange: axis.visibleRange\n            });\n        }\n        var onZoomingEventArg = { cancel: false, axisCollection: zoomedAxisCollections, name: onZooming };\n        if (!onZoomingEventArg.cancel && this.chart.isBlazor) {\n            this.chart.trigger(onZooming, onZoomingEventArg, function () {\n                _this.zoomingRect = new Rect(0, 0, 0, 0);\n                _this.performZoomRedraw(chart);\n            });\n        }\n        else {\n            this.chart.trigger(onZooming, onZoomingEventArg, function () {\n                _this.zoomingRect = new Rect(0, 0, 0, 0);\n                _this.redrawOnZooming(chart);\n            });\n        }\n    };\n    /** It is used to redraw the chart and trigger zoomComplete event */\n    Zoom.prototype.redrawOnZooming = function (chart, isRedraw, isMouseUp) {\n        if (isRedraw === void 0) { isRedraw = true; }\n        if (isMouseUp === void 0) { isMouseUp = false; }\n        var zoomCompleteCollection = isMouseUp ? this.toolkit.zoomCompleteEvtCollection :\n            this.zoomCompleteEvtCollection;\n        if (isRedraw) {\n            this.performZoomRedraw(chart);\n        }\n        var argsData;\n        for (var i = 0; i < zoomCompleteCollection.length; i++) {\n            if (!zoomCompleteCollection[i].cancel) {\n                argsData = {\n                    cancel: false, name: zoomComplete,\n                    axis: chart.axisCollections[i],\n                    previousZoomFactor: zoomCompleteCollection[i].previousZoomFactor,\n                    previousZoomPosition: zoomCompleteCollection[i].previousZoomPosition,\n                    currentZoomFactor: chart.axisCollections[i].zoomFactor,\n                    currentZoomPosition: chart.axisCollections[i].zoomPosition,\n                    currentVisibleRange: chart.axisCollections[i].visibleRange,\n                    previousVisibleRange: zoomCompleteCollection[i].previousVisibleRange\n                };\n                chart.trigger(zoomComplete, argsData);\n            }\n        }\n    };\n    /**\n     * Function that handles the Mouse wheel zooming.\n     *\n     * @returns {void}\n     * @private\n     */\n    Zoom.prototype.performMouseWheelZooming = function (e, mouseX, mouseY, chart, axes) {\n        var _this = this;\n        var direction = (this.browserName === 'mozilla' && !this.isPointer) ?\n            -(e.detail) / 3 > 0 ? 1 : -1 : (e['wheelDelta'] > 0 ? 1 : -1);\n        var mode = this.zooming.mode;\n        var origin = 0.5;\n        var cumulative;\n        var zoomFactor;\n        var zoomPosition;\n        this.isZoomed = true;\n        this.calculateZoomAxesRange(chart);\n        chart.disableTrackTooltip = true;\n        this.performedUI = true;\n        this.isPanning = chart.zoomSettings.enablePan || this.isPanning;\n        this.zoomCompleteEvtCollection = [];\n        var argsData;\n        var zoomedAxisCollection = [];\n        for (var _i = 0, _a = axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            argsData = {\n                cancel: false, name: zoomComplete, axis: axis, previousZoomFactor: axis.zoomFactor,\n                previousZoomPosition: axis.zoomPosition,\n                currentZoomFactor: axis.zoomFactor,\n                currentZoomPosition: axis.zoomPosition, currentVisibleRange: null,\n                previousVisibleRange: axis.visibleRange\n            };\n            if ((axis.orientation === 'Vertical' && mode !== 'X') ||\n                (axis.orientation === 'Horizontal' && mode !== 'Y')) {\n                cumulative = Math.max(Math.max(1 / minMax(axis.zoomFactor, 0, 1), 1) + (0.25 * direction), 1);\n                cumulative = (cumulative > 50000000000) ? 50000000000 : cumulative;\n                if (cumulative >= 1) {\n                    origin = axis.orientation === 'Horizontal' ? mouseX / axis.rect.width : 1 - (mouseY / axis.rect.height);\n                    origin = origin > 1 ? 1 : origin < 0 ? 0 : origin;\n                    zoomFactor = (cumulative === 1) ? 1 : minMax((direction > 0 ? 0.9 : 1.1) / cumulative, 0, 1);\n                    zoomPosition = (cumulative === 1) ? 0 : axis.zoomPosition + ((axis.zoomFactor - zoomFactor) * origin);\n                    if (axis.zoomPosition !== zoomPosition || axis.zoomFactor !== zoomFactor) {\n                        zoomFactor = (zoomPosition + zoomFactor) > 1 ? (1 - zoomPosition) : zoomFactor;\n                    }\n                    argsData.currentZoomFactor = zoomFactor;\n                    argsData.currentZoomPosition = zoomPosition;\n                }\n                if (!argsData.cancel) {\n                    axis.zoomFactor = argsData.currentZoomFactor;\n                    axis.zoomPosition = argsData.currentZoomPosition;\n                    this.zoomCompleteEvtCollection.push(argsData);\n                }\n            }\n            zoomedAxisCollection.push({\n                zoomFactor: axis.zoomFactor, zoomPosition: axis.zoomFactor, axisName: axis.name,\n                axisRange: axis.visibleRange\n            });\n        }\n        var onZoomingEventArgs = { cancel: false, axisCollection: zoomedAxisCollection, name: onZooming };\n        if (!onZoomingEventArgs.cancel && this.chart.isBlazor) {\n            this.chart.trigger(onZooming, onZoomingEventArgs, function () { _this.performZoomRedraw(chart); });\n        }\n        else {\n            this.chart.trigger(onZooming, onZoomingEventArgs, function () { _this.redrawOnZooming(chart); });\n        }\n    };\n    /**\n     * Function that handles the Pinch zooming.\n     *\n     * @returns {void}\n     * @private\n     */\n    Zoom.prototype.performPinchZooming = function (e, chart) {\n        if ((this.zoomingRect.width > 0 && this.zoomingRect.height > 0) || (chart.startMove && chart.crosshair.enable)) {\n            return false;\n        }\n        this.calculateZoomAxesRange(chart);\n        this.isZoomed = true;\n        this.isPanning = true;\n        this.performedUI = true;\n        this.offset = !chart.delayRedraw ? chart.chartAxisLayoutPanel.seriesClipRect : this.offset;\n        chart.delayRedraw = true;\n        chart.disableTrackTooltip = true;\n        var elementOffset = chart.element.getBoundingClientRect();\n        var touchDown = this.touchStartList;\n        var touchMove = this.touchMoveList;\n        var touch0StartX = touchDown[0].pageX - elementOffset.left;\n        var touch0StartY = touchDown[0].pageY - elementOffset.top;\n        var touch0EndX = touchMove[0].pageX - elementOffset.left;\n        var touch0EndY = touchMove[0].pageY - elementOffset.top;\n        var touch1StartX = touchDown[1].pageX - elementOffset.left;\n        var touch1StartY = touchDown[1].pageY - elementOffset.top;\n        var touch1EndX = touchMove[1].pageX - elementOffset.left;\n        var touch1EndY = touchMove[1].pageY - elementOffset.top;\n        var scaleX = Math.abs(touch0EndX - touch1EndX) / Math.abs(touch0StartX - touch1StartX);\n        var scaleY = Math.abs(touch0EndY - touch1EndY) / Math.abs(touch0StartY - touch1StartY);\n        var clipX = ((this.offset.x - touch0EndX) / scaleX) + touch0StartX;\n        var clipY = ((this.offset.y - touch0EndY) / scaleY) + touch0StartY;\n        var pinchRect = new Rect(clipX, clipY, this.offset.width / scaleX, this.offset.height / scaleY);\n        var translateXValue = (touch0EndX - (scaleX * touch0StartX));\n        var translateYValue = (touch0EndY - (scaleY * touch0StartY));\n        if (!isNaN(scaleX - scaleX) && !isNaN(scaleY - scaleY)) {\n            switch (this.zooming.mode) {\n                case 'XY':\n                    this.setTransform(translateXValue, translateYValue, scaleX, scaleY, chart, true);\n                    break;\n                case 'X':\n                    this.setTransform(translateXValue, 0, scaleX, 1, chart, true);\n                    break;\n                case 'Y':\n                    this.setTransform(0, translateYValue, 1, scaleY, chart, true);\n                    break;\n            }\n        }\n        this.calculatePinchZoomFactor(chart, pinchRect);\n        this.refreshAxis(chart.chartAxisLayoutPanel, chart, chart.axisCollections);\n        this.redrawOnZooming(chart, false);\n        return true;\n    };\n    Zoom.prototype.calculatePinchZoomFactor = function (chart, pinchRect) {\n        var mode = this.zooming.mode;\n        var selectionMin;\n        var selectionMax;\n        var rangeMin;\n        var rangeMax;\n        var value;\n        var axisTrans;\n        var argsData;\n        var currentZF;\n        var currentZP;\n        var zoomedAxisCollection = [];\n        this.zoomCompleteEvtCollection = [];\n        for (var index = 0; index < chart.axisCollections.length; index++) {\n            var axis = chart.axisCollections[index];\n            if ((axis.orientation === 'Horizontal' && mode !== 'Y') ||\n                (axis.orientation === 'Vertical' && mode !== 'X')) {\n                currentZF = axis.zoomFactor;\n                currentZP = axis.zoomPosition;\n                argsData = {\n                    cancel: false, name: zoomComplete, axis: axis, previousZoomFactor: axis.zoomFactor,\n                    previousZoomPosition: axis.zoomPosition, currentZoomFactor: currentZF,\n                    currentZoomPosition: currentZP, previousVisibleRange: axis.visibleRange,\n                    currentVisibleRange: null\n                };\n                if (axis.orientation === 'Horizontal') {\n                    value = pinchRect.x - this.offset.x;\n                    axisTrans = axis.rect.width / this.zoomAxes[index].delta;\n                    rangeMin = value / axisTrans + this.zoomAxes[index].min;\n                    value = pinchRect.x + pinchRect.width - this.offset.x;\n                    rangeMax = value / axisTrans + this.zoomAxes[index].min;\n                }\n                else {\n                    value = pinchRect.y - this.offset.y;\n                    axisTrans = axis.rect.height / this.zoomAxes[index].delta;\n                    rangeMin = (value * -1 + axis.rect.height) / axisTrans + this.zoomAxes[index].min;\n                    value = pinchRect.y + pinchRect.height - this.offset.y;\n                    rangeMax = (value * -1 + axis.rect.height) / axisTrans + this.zoomAxes[index].min;\n                }\n                selectionMin = Math.min(rangeMin, rangeMax);\n                selectionMax = Math.max(rangeMin, rangeMax);\n                currentZP = (selectionMin - this.zoomAxes[index].actualMin) / this.zoomAxes[index].actualDelta;\n                currentZF = (selectionMax - selectionMin) / this.zoomAxes[index].actualDelta;\n                argsData.currentZoomPosition = currentZP < 0 ? 0 : currentZP;\n                argsData.currentZoomFactor = currentZF > 1 ? 1 : (currentZF < 0.03) ? 0.03 : currentZF;\n                if (!argsData.cancel) {\n                    axis.zoomFactor = argsData.currentZoomFactor;\n                    axis.zoomPosition = argsData.currentZoomPosition;\n                    this.zoomCompleteEvtCollection.push(argsData);\n                }\n                zoomedAxisCollection.push({\n                    zoomFactor: axis.zoomFactor, zoomPosition: axis.zoomFactor, axisName: axis.name,\n                    axisRange: axis.visibleRange\n                });\n            }\n        }\n        var onZoomingEventArgs = { cancel: false, axisCollection: zoomedAxisCollection, name: onZooming };\n        if (!onZoomingEventArgs.cancel) {\n            this.chart.trigger(onZooming, onZoomingEventArgs);\n        }\n    };\n    // Series transformation style applied here.\n    Zoom.prototype.setTransform = function (transX, transY, scaleX, scaleY, chart, isPinch) {\n        if (!chart.enableCanvas) {\n            chart.seriesElements.setAttribute('clip-path', 'url(#' + this.elementId + '_ChartAreaClipRect_)');\n        }\n        if (chart.indicatorElements) {\n            chart.indicatorElements.setAttribute('clip-path', 'url(#' + this.elementId + '_ChartAreaClipRect_)');\n        }\n        var translate;\n        var xAxisLoc;\n        var yAxisLoc;\n        var element;\n        if (transX !== null && transY !== null) {\n            for (var _i = 0, _a = chart.visibleSeries; _i < _a.length; _i++) {\n                var value = _a[_i];\n                xAxisLoc = chart.requireInvertedAxis ? value.yAxis.rect.x : value.xAxis.rect.x;\n                yAxisLoc = chart.requireInvertedAxis ? value.xAxis.rect.y : value.yAxis.rect.y;\n                translate = 'translate(' + (transX + (isPinch ? (scaleX * xAxisLoc) : xAxisLoc)) +\n                    ',' + (transY + (isPinch ? (scaleY * yAxisLoc) : yAxisLoc)) + ')';\n                translate = (scaleX || scaleY) ? translate + ' scale(' + scaleX + ' ' + scaleY + ')' : translate;\n                if (value.visible) {\n                    if (value.category === 'Indicator') {\n                        value.seriesElement.parentNode.setAttribute('transform', translate);\n                    }\n                    else {\n                        if (!chart.enableCanvas) {\n                            value.seriesElement.setAttribute('transform', translate);\n                        }\n                    }\n                    element = getElement(chart.element.id + '_Series_' + value.index + '_DataLabelCollections');\n                    if (value.errorBarElement) {\n                        value.errorBarElement.setAttribute('transform', translate);\n                    }\n                    if (value.symbolElement) {\n                        value.symbolElement.setAttribute('transform', translate);\n                    }\n                    if (value.textElement) {\n                        value.textElement.setAttribute('visibility', 'hidden');\n                        value.shapeElement.setAttribute('visibility', 'hidden');\n                    }\n                    if (element) {\n                        element.style.visibility = 'hidden';\n                    }\n                }\n            }\n        }\n    };\n    Zoom.prototype.calculateZoomAxesRange = function (chart) {\n        var range;\n        var axisRange;\n        for (var index = 0; index < chart.axisCollections.length; index++) {\n            var axis = chart.axisCollections[index];\n            axisRange = axis.visibleRange;\n            if (this.zoomAxes[index]) {\n                if (!chart.delayRedraw) {\n                    this.zoomAxes[index].min = axisRange.min;\n                    this.zoomAxes[index].delta = axisRange.delta;\n                }\n            }\n            else {\n                range = {\n                    actualMin: axis.actualRange.min,\n                    actualDelta: axis.actualRange.delta,\n                    min: axisRange.min,\n                    delta: axisRange.delta\n                };\n                this.zoomAxes[index] = range;\n            }\n        }\n    };\n    // Zooming Toolkit created here\n    Zoom.prototype.showZoomingToolkit = function (chart) {\n        var toolboxItems = this.zooming.toolbarItems;\n        var areaBounds = chart.chartAxisLayoutPanel.seriesClipRect;\n        var spacing = 5;\n        var render = chart.svgRenderer;\n        var length = this.isDevice ? 1 : toolboxItems.length;\n        var iconSize = this.isDevice ? measureText('Reset Zoom', { size: '12px' }).width : 16;\n        var height = this.isDevice ? measureText('Reset Zoom', { size: '12px' }).height : 22;\n        var width = (length * iconSize) + ((length + 1) * spacing) + ((length - 1) * spacing);\n        var transX = areaBounds.x + areaBounds.width - width - spacing;\n        var transY = (areaBounds.y + spacing);\n        var xPosition = spacing;\n        var toolkit = this.toolkit;\n        var element;\n        var shadowElement = '<filter id=\"chart_shadow\" height=\"130%\"><feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"5\"/>';\n        shadowElement += '<feOffset dx=\"-3\" dy=\"4\" result=\"offsetblur\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"1\"/>';\n        shadowElement += '</feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge></filter>';\n        if (length === 0 || getElement(this.elementId + '_Zooming_KitCollection')) {\n            return false;\n        }\n        var defElement = render.createDefs();\n        toolboxItems = this.isDevice ? ['Reset'] : toolboxItems;\n        defElement.innerHTML = shadowElement;\n        this.toolkitElements = render.createGroup({\n            id: this.elementId + '_Zooming_KitCollection',\n            transform: 'translate(' + transX + ',' + transY + ')'\n        });\n        this.toolkitElements.appendChild(defElement);\n        var zoomFillColor = this.chart.theme === 'Tailwind' ? '#F3F4F6' : this.chart.theme === 'Fluent' ? '#F3F2F1' :\n            (this.chart.theme === \"FluentDark\" ? \"#252423\" : '#fafafa');\n        this.toolkitElements.appendChild(render.drawRectangle(new RectOption(this.elementId + '_Zooming_Rect', zoomFillColor, { color: 'transparent', width: 1 }, 1, new Rect(0, 0, width, (height + (spacing * 2))), 0, 0)));\n        var outerElement = render.drawRectangle(new RectOption(this.elementId + '_Zooming_Rect', zoomFillColor, { color: 'transparent', width: 1 }, 0.1, new Rect(0, 0, width, (height + (spacing * 2))), 0, 0));\n        if (this.chart.theme === 'Tailwind' || this.chart.theme === 'TailwindDark') {\n            outerElement.setAttribute('box-shadow', '0px 1px 2px rgba(0, 0, 0, 0.06), 0px 1px 3px rgba(0, 0, 0, 0.1)');\n        }\n        else {\n            outerElement.setAttribute('filter', 'url(#chart_shadow)');\n        }\n        this.toolkitElements.appendChild(outerElement);\n        var currentItem;\n        var panIcon = false;\n        for (var i = 1; i <= length; i++) {\n            currentItem = toolboxItems[i - 1];\n            element = render.createGroup({\n                transform: 'translate(' + xPosition + ',' + (this.isDevice ? spacing : (spacing + 3)) + ')'\n            });\n            // for desktop toolkit hight is 32 and top padding is 8 icon size 16\n            switch (currentItem) {\n                case 'Pan':\n                    toolkit.createPanButton(element, this.toolkitElements);\n                    panIcon = true;\n                    break;\n                case 'Zoom':\n                    toolkit.createZoomButton(element, this.toolkitElements);\n                    break;\n                case 'ZoomIn':\n                    toolkit.createZoomInButton(element, this.toolkitElements, chart);\n                    break;\n                case 'ZoomOut':\n                    toolkit.createZoomOutButton(element, this.toolkitElements, chart);\n                    break;\n                case 'Reset':\n                    toolkit.createResetButton(element, this.toolkitElements, chart, this.isDevice);\n                    break;\n            }\n            xPosition += iconSize + (spacing * 2);\n        }\n        this.toolkitElements.setAttribute('opacity', this.isDevice ? '1' : '' + this.zoomkitOpacity);\n        this.toolkitElements.setAttribute('cursor', 'auto');\n        if (chart.enableCanvas) {\n            var zoomDiv = document.createElement('div');\n            zoomDiv.id = chart.element.id + '_zoom';\n            zoomDiv.style.cssText = 'position:absolute; z-index:1';\n            var zoomheight = chart.availableSize.height / 2;\n            var svg = chart.svgRenderer.createSvg({\n                id: chart.element.id + '_zoomkit_svg',\n                width: chart.availableSize.width,\n                height: zoomheight\n            });\n            svg.style.position = 'absolute';\n            svg.appendChild(this.toolkitElements);\n            zoomDiv.appendChild(svg);\n            document.getElementById(this.elementId + '_Secondary_Element').appendChild(zoomDiv);\n        }\n        else {\n            chart.svgObject.appendChild(this.toolkitElements);\n        }\n        if (!this.isDevice) {\n            EventHandler.add(this.toolkitElements, 'mousemove touchstart', this.zoomToolkitMove, this);\n            EventHandler.add(this.toolkitElements, 'mouseleave touchend', this.zoomToolkitLeave, this);\n            if (this.isPanning && panIcon) {\n                toolkit.pan();\n            }\n        }\n        return true;\n    };\n    /**\n     * To the show the zooming toolkit.\n     *\n     * @returns {void}\n     * @private\n     */\n    Zoom.prototype.applyZoomToolkit = function (chart, axes) {\n        var showToolkit = this.isAxisZoomed(axes);\n        if (showToolkit) {\n            this.showZoomingToolkit(chart);\n            this.isZoomed = true;\n        }\n        else if (chart.zoomSettings.showToolbar) {\n            this.isZoomed = showToolkit;\n            this.showZoomingToolkit(chart);\n        }\n        else {\n            this.toolkit.removeTooltip();\n            this.isPanning = false;\n            this.isZoomed = false;\n            chart.isZoomed = false;\n            chart.svgObject.setAttribute('cursor', 'auto');\n        }\n    };\n    /**\n     * Return boolean property to show zooming toolkit.\n     *\n     * @returns {void}\n     * @private\n     */\n    Zoom.prototype.isAxisZoomed = function (axes) {\n        var showToolkit = false;\n        for (var _i = 0, _a = axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            showToolkit = (showToolkit || (axis.zoomFactor !== 1 || axis.zoomPosition !== 0));\n        }\n        return showToolkit;\n    };\n    Zoom.prototype.zoomToolkitMove = function () {\n        var element = this.toolkitElements;\n        this.zoomkitOpacity = 1;\n        element.setAttribute('opacity', '' + this.zoomkitOpacity);\n        return false;\n    };\n    Zoom.prototype.zoomToolkitLeave = function () {\n        var element = this.toolkitElements;\n        this.zoomkitOpacity = 0.3;\n        element.setAttribute('opacity', '' + this.zoomkitOpacity);\n        return false;\n    };\n    /**\n     * @hidden\n     */\n    Zoom.prototype.addEventListener = function () {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        EventHandler.add(this.chart.element, this.wheelEvent, this.chartMouseWheel, this);\n        this.chart.on(Browser.touchMoveEvent, this.mouseMoveHandler, this);\n        this.chart.on(Browser.touchStartEvent, this.mouseDownHandler, this);\n        this.chart.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n        this.chart.on(this.cancelEvent, this.mouseCancelHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Zoom.prototype.removeEventListener = function () {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        EventHandler.remove(this.chart.element, this.wheelEvent, this.chartMouseWheel);\n        this.chart.off(Browser.touchMoveEvent, this.mouseMoveHandler);\n        this.chart.off(Browser.touchStartEvent, this.mouseDownHandler);\n        this.chart.off(Browser.touchEndEvent, this.mouseUpHandler);\n        this.chart.off(this.cancelEvent, this.mouseCancelHandler);\n    };\n    /**\n     * Handles the mouse wheel on chart.\n     *\n     * @returns {boolean} false\n     * @private\n     */\n    Zoom.prototype.chartMouseWheel = function (e) {\n        var chart = this.chart;\n        var offset = chart.element.getBoundingClientRect();\n        var svgRect = getElement(chart.svgId).getBoundingClientRect();\n        var mouseX = (e.clientX - offset.left) - Math.max(svgRect.left - offset.left, 0);\n        var mouseY = (e.clientY - offset.top) - Math.max(svgRect.top - offset.top, 0);\n        if (this.zooming.enableMouseWheelZooming &&\n            withInBounds(mouseX, mouseY, chart.chartAxisLayoutPanel.seriesClipRect)) {\n            e.preventDefault();\n            this.performMouseWheelZooming(e, mouseX, mouseY, chart, chart.axisCollections);\n        }\n        return false;\n    };\n    /**\n     * @hidden\n     */\n    Zoom.prototype.mouseMoveHandler = function (e) {\n        //Zooming for chart\n        var chart = this.chart;\n        var touches = null;\n        if (e.type === 'touchmove') {\n            if (e.preventDefault && this.isIOS &&\n                (this.isPanning || (chart.isDoubleTap)\n                    || (this.zooming.enablePinchZooming && this.touchStartList.length > 1))) {\n                e.preventDefault();\n            }\n            touches = e.touches;\n        }\n        if (chart.isChartDrag) {\n            if (chart.isTouch) {\n                this.touchMoveList = this.addTouchPointer(this.touchMoveList, e, touches);\n                if (this.zooming.enablePinchZooming && this.touchMoveList.length > 1\n                    && this.touchStartList.length > 1) {\n                    this.performPinchZooming(e, chart);\n                }\n            }\n            this.renderZooming(e, chart, chart.isTouch);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Zoom.prototype.mouseDownHandler = function (e) {\n        //Zooming for chart\n        var chart = this.chart;\n        var touches = null;\n        var target;\n        if (e.type === 'touchstart') {\n            touches = e.touches;\n            target = e.target;\n        }\n        else {\n            target = e.target;\n        }\n        if (target.id.indexOf(chart.element.id + '_Zooming_') === -1 &&\n            withInBounds(chart.previousMouseMoveX, chart.previousMouseMoveY, chart.chartAxisLayoutPanel.seriesClipRect)) {\n            chart.isChartDrag = true;\n        }\n        if (chart.isTouch) {\n            this.touchStartList = this.addTouchPointer(this.touchStartList, e, touches);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Zoom.prototype.mouseUpHandler = function (e) {\n        var chart = this.chart;\n        var performZoomRedraw = e.target.id.indexOf(chart.element.id + '_ZoomOut_') === -1 ||\n            e.target.id.indexOf(chart.element.id + '_ZoomIn_') === -1;\n        if (chart.isChartDrag || performZoomRedraw) {\n            this.redrawOnZooming(chart, true, true);\n        }\n        if (chart.isTouch) {\n            if (chart.isDoubleTap && withInBounds(chart.mouseX, chart.mouseY, chart.chartAxisLayoutPanel.seriesClipRect)\n                && this.touchStartList.length === 1 && this.isZoomed) {\n                this.toolkit.reset(e);\n            }\n            this.touchStartList = [];\n            chart.isDoubleTap = false;\n        }\n    };\n    /**\n     * @hidden\n     */\n    Zoom.prototype.mouseCancelHandler = function () {\n        if (this.isZoomed) {\n            this.performZoomRedraw(this.chart);\n        }\n        this.pinchTarget = null;\n        this.touchStartList = [];\n        this.touchMoveList = [];\n    };\n    /**\n     * Handles the touch pointer.\n     *\n     * @returns {ITouches[]} touchList collection\n     * @private\n     */\n    Zoom.prototype.addTouchPointer = function (touchList, e, touches) {\n        if (touches) {\n            touchList = [];\n            for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n                touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n            }\n        }\n        else {\n            touchList = touchList ? touchList : [];\n            if (touchList.length === 0) {\n                touchList.push({ pageX: e.clientX, pageY: e.clientY, pointerId: e.pointerId });\n            }\n            else {\n                for (var i = 0, length_2 = touchList.length; i < length_2; i++) {\n                    if (touchList[i].pointerId === e.pointerId) {\n                        touchList[i] = { pageX: e.clientX, pageY: e.clientY, pointerId: e.pointerId };\n                    }\n                    else {\n                        touchList.push({ pageX: e.clientX, pageY: e.clientY, pointerId: e.pointerId });\n                    }\n                }\n            }\n        }\n        return touchList;\n    };\n    /**\n     * Get module name.\n     */\n    Zoom.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Zoom';\n    };\n    /**\n     * To destroy the zooming.\n     *\n     * @returns {void}\n     * @private\n     */\n    Zoom.prototype.destroy = function () {\n        // Destroy method performed here\n        this.removeEventListener();\n    };\n    return Zoom;\n}());\nexport { Zoom };\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,OAAO,EAAEC,aAAa,QAAQ,sBAAsB;AAC3E,SAASC,eAAe,EAAEC,MAAM,EAAEC,UAAU,EAAEC,aAAa,EAAEC,UAAU,QAAQ,2BAA2B;AAC1G,SAASC,IAAI,EAAEC,WAAW,QAAQ,0BAA0B;AAC5D,SAASC,OAAO,QAAQ,mBAAmB;AAC3C,SAASC,YAAY,EAAEC,SAAS,QAAQ,8BAA8B;AACtE,SAASC,YAAY,QAAQ,2BAA2B;AACxD;AACA;AACA;AACA,IAAIC,IAAI,GAAG,aAAe,YAAY;EAClC;AACJ;AACA;AACA;AACA;EACI,SAASA,IAAI,CAACC,KAAK,EAAE;IACjB,IAAI,CAACC,yBAAyB,GAAG,EAAE;IACnC,IAAI,CAACD,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACE,SAAS,GAAGhB,OAAO,CAACgB,SAAS;IAClC,IAAI,CAACC,WAAW,GAAGjB,OAAO,CAACkB,IAAI,CAACC,IAAI;IACpC,IAAI,CAACC,UAAU,GAAG,IAAI,CAACH,WAAW,KAAK,SAAS,GAAI,IAAI,CAACD,SAAS,GAAG,YAAY,GAAG,gBAAgB,GAAI,YAAY;IACpH,IAAI,CAACK,WAAW,GAAG,IAAI,CAACL,SAAS,GAAG,cAAc,GAAG,YAAY;IACjE,IAAI,CAACM,gBAAgB,EAAE;IACvB,IAAI,CAACC,QAAQ,GAAGvB,OAAO,CAACuB,QAAQ;IAChC,IAAIC,OAAO,GAAGV,KAAK,CAACW,YAAY;IAChC,IAAI,CAACC,OAAO,GAAG,IAAIjB,OAAO,CAACK,KAAK,CAAC;IACjC,IAAI,CAACU,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACG,SAAS,GAAGb,KAAK,CAACc,OAAO,CAACC,EAAE;IACjC,IAAI,CAACC,WAAW,GAAG,IAAIvB,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvC,IAAI,CAACwB,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACC,cAAc,GAAG,GAAG;IACzB,IAAI,CAACC,KAAK,GAAGjC,OAAO,CAACkC,KAAK,IAAIlC,OAAO,CAACmC,MAAM;IAC5C,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACC,WAAW,GAAG,IAAI,CAACb,OAAO,CAACc,SAAS,IAAI,IAAI,CAACd,OAAO,CAACe,sBAAsB;IAChG,IAAIf,OAAO,CAACgB,eAAe,EAAE;MACzB1B,KAAK,CAAC2B,aAAa,GAAGxC,aAAa,CAAC,KAAK,EAAE;QAAE4B,EAAE,EAAEf,KAAK,CAACc,OAAO,CAACC,EAAE,GAAG;MAAiB,CAAC,CAAC;IAC3F;EACJ;EACA;AACJ;AACA;AACA;AACA;EACIhB,IAAI,CAAC6B,SAAS,CAACC,aAAa,GAAG,UAAUC,CAAC,EAAE9B,KAAK,EAAE+B,OAAO,EAAE;IACxD,IAAI,CAACC,sBAAsB,CAAChC,KAAK,CAAC;IAClC,IAAI,IAAI,CAACU,OAAO,CAACe,sBAAsB,KAAK,CAACM,OAAO,IAC5C/B,KAAK,CAACiC,WAAW,IAAI,IAAI,CAACC,cAAc,CAACC,MAAM,KAAK,CAAE,CAAC,KAAK,CAAC,IAAI,CAACC,SAAS,IAAIpC,KAAK,CAACiC,WAAW,CAAC,EAAE;MACvG,IAAI,CAACG,SAAS,GAAG,IAAI,CAAC3B,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAC2B,SAAS;MACtD,IAAI,CAACb,WAAW,GAAG,IAAI;MACvB,IAAI,CAACc,oBAAoB,CAACrC,KAAK,CAAC;IACpC,CAAC,MACI,IAAI,IAAI,CAACoC,SAAS,IAAIpC,KAAK,CAACsC,WAAW,EAAE;MAC1C,IAAI,CAACP,OAAO,IAAKA,OAAO,IAAI,IAAI,CAACG,cAAc,CAACC,MAAM,KAAK,CAAE,EAAE;QAC3D,IAAI,CAACI,WAAW,GAAGR,OAAO,GAAGD,CAAC,CAACU,MAAM,GAAG,IAAI;QAC5C,IAAI,CAACC,KAAK,CAACzC,KAAK,EAAEA,KAAK,CAAC0C,eAAe,CAAC;MAC5C;IACJ;EACJ,CAAC;EACD;EACA3C,IAAI,CAAC6B,SAAS,CAACS,oBAAoB,GAAG,UAAUrC,KAAK,EAAE;IACnD,IAAI2C,UAAU,GAAG3C,KAAK,CAAC4C,oBAAoB,CAACC,cAAc;IAC1D,IAAIC,aAAa,GAAG,IAAIvD,aAAa,CAACS,KAAK,CAAC+C,kBAAkB,EAAE/C,KAAK,CAACgD,kBAAkB,CAAC;IACzF,IAAIC,WAAW,GAAG,IAAI1D,aAAa,CAACS,KAAK,CAACkD,MAAM,EAAElD,KAAK,CAACmD,MAAM,CAAC;IAC/D,IAAIC,IAAI,GAAG,IAAI,CAACpC,WAAW,GAAG5B,eAAe,CAAC0D,aAAa,EAAEG,WAAW,EAAEN,UAAU,CAAC;IACrF,IAAIS,IAAI,CAACC,KAAK,GAAG,CAAC,IAAID,IAAI,CAACE,MAAM,GAAG,CAAC,EAAE;MACnC,IAAI,CAAChC,QAAQ,GAAG,IAAI;MACpBtB,KAAK,CAACuD,mBAAmB,GAAG,IAAI;MAChCvD,KAAK,CAACwD,SAAS,CAACC,YAAY,CAAC,QAAQ,EAAE,WAAW,CAAC;MACnD,IAAI,IAAI,CAAC/C,OAAO,CAACgD,IAAI,KAAK,GAAG,EAAE;QAC3BN,IAAI,CAACE,MAAM,GAAGX,UAAU,CAACW,MAAM;QAC/BF,IAAI,CAACO,CAAC,GAAGhB,UAAU,CAACgB,CAAC;MACzB,CAAC,MACI,IAAI,IAAI,CAACjD,OAAO,CAACgD,IAAI,KAAK,GAAG,EAAE;QAChCN,IAAI,CAACC,KAAK,GAAGV,UAAU,CAACU,KAAK;QAC7BD,IAAI,CAACQ,CAAC,GAAGjB,UAAU,CAACiB,CAAC;MACzB;MACA,IAAIC,GAAG,GAAG7D,KAAK,CAAC8D,YAAY,GAAGC,QAAQ,CAACC,cAAc,CAAC,IAAI,CAACnD,SAAS,GAAG,cAAc,CAAC,GAAGb,KAAK,CAACwD,SAAS;MACzGK,GAAG,CAACI,WAAW,CAACjE,KAAK,CAACkE,WAAW,CAACC,aAAa,CAAC,IAAI3E,UAAU,CAAC,IAAI,CAACqB,SAAS,GAAG,WAAW,EAAEb,KAAK,CAACoE,UAAU,CAACC,iBAAiB,EAAE;QAAEC,KAAK,EAAEtE,KAAK,CAACoE,UAAU,CAACG,mBAAmB;QAAElB,KAAK,EAAE;MAAE,CAAC,EAAE,CAAC,EAAED,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;IACzN;EACJ,CAAC;EACD;EACArD,IAAI,CAAC6B,SAAS,CAACa,KAAK,GAAG,UAAUzC,KAAK,EAAEwE,IAAI,EAAEC,WAAW,EAAEC,WAAW,EAAE;IACpE,IAAIC,KAAK,GAAG,IAAI;IAChB,IAAIF,WAAW,KAAK,KAAK,CAAC,EAAE;MAAEA,WAAW,GAAG,CAAC;IAAE;IAC/C,IAAIC,WAAW,KAAK,KAAK,CAAC,EAAE;MAAEA,WAAW,GAAG,CAAC;IAAE;IAC/C,IAAI1E,KAAK,CAAC4E,SAAS,IAAI5E,KAAK,CAAC6E,SAAS,CAACC,MAAM,EAAE;MAC3C,OAAO,IAAI;IACf;IACA,IAAIC,YAAY;IAChB,IAAIC,MAAM;IACV,IAAI,CAAC1D,QAAQ,GAAG,IAAI;IACpB,IAAI,CAAC0D,MAAM,GAAG,CAAChF,KAAK,CAACiF,WAAW,GAAGjF,KAAK,CAAC4C,oBAAoB,CAACC,cAAc,GAAG,IAAI,CAACmC,MAAM;IAC1FhF,KAAK,CAACiF,WAAW,GAAG,IAAI;IACxB,IAAI,CAAChF,yBAAyB,GAAG,EAAE;IACnCD,KAAK,CAACuD,mBAAmB,GAAG,IAAI;IAChC,IAAI2B,QAAQ;IACZ,IAAIC,oBAAoB,GAAG,EAAE;IAC7B,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEC,EAAE,GAAGb,IAAI,EAAEY,EAAE,GAAGC,EAAE,CAAClD,MAAM,EAAEiD,EAAE,EAAE,EAAE;MAC9C,IAAIE,IAAI,GAAGD,EAAE,CAACD,EAAE,CAAC;MACjBF,QAAQ,GAAG;QACPK,MAAM,EAAE,KAAK;QAAElF,IAAI,EAAET,YAAY;QAAE0F,IAAI,EAAEA,IAAI;QAAEE,kBAAkB,EAAEF,IAAI,CAACG,UAAU;QAClFC,oBAAoB,EAAEJ,IAAI,CAACK,YAAY;QAAEC,iBAAiB,EAAEN,IAAI,CAACG,UAAU;QAC3EI,mBAAmB,EAAEP,IAAI,CAACK,YAAY;QAAEG,oBAAoB,EAAER,IAAI,CAACS,YAAY;QAC/EC,mBAAmB,EAAE;MACzB,CAAC;MACDjB,YAAY,GAAGkB,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG7G,MAAM,CAACiG,IAAI,CAACG,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAC7D,IAAIH,IAAI,CAACa,WAAW,KAAK,YAAY,EAAE;QACnCnB,MAAM,GAAG,CAACP,WAAW,IAAI,CAAC,GAAGA,WAAW,GAAIzE,KAAK,CAAC+C,kBAAkB,GAAG/C,KAAK,CAACkD,MAAO,IAAIoC,IAAI,CAAClC,IAAI,CAACC,KAAK,GAAG0B,YAAY;QACtHG,QAAQ,CAACW,mBAAmB,GAAGxG,MAAM,CAACiG,IAAI,CAACK,YAAY,GAAGX,MAAM,EAAE,CAAC,EAAG,CAAC,GAAGM,IAAI,CAACG,UAAU,CAAE;MAC/F,CAAC,MACI;QACDT,MAAM,GAAG,CAACN,WAAW,IAAI,CAAC,GAAGA,WAAW,GAAI1E,KAAK,CAACgD,kBAAkB,GAAGhD,KAAK,CAACmD,MAAO,IAAImC,IAAI,CAAClC,IAAI,CAACE,MAAM,GAAGyB,YAAY;QACvHG,QAAQ,CAACW,mBAAmB,GAAGxG,MAAM,CAACiG,IAAI,CAACK,YAAY,GAAGX,MAAM,EAAE,CAAC,EAAG,CAAC,GAAGM,IAAI,CAACG,UAAU,CAAE;MAC/F;MACA,IAAI,CAACP,QAAQ,CAACK,MAAM,EAAE;QAClBD,IAAI,CAACG,UAAU,GAAGP,QAAQ,CAACU,iBAAiB;QAC5CN,IAAI,CAACK,YAAY,GAAGT,QAAQ,CAACW,mBAAmB;QAChD,IAAI,CAAC5F,yBAAyB,CAACmG,IAAI,CAAClB,QAAQ,CAAC;MACjD;MACAC,oBAAoB,CAACiB,IAAI,CAAC;QACtBX,UAAU,EAAEH,IAAI,CAACG,UAAU;QAAEE,YAAY,EAAEL,IAAI,CAACG,UAAU;QAAEY,QAAQ,EAAEf,IAAI,CAACjF,IAAI;QAC/EiG,SAAS,EAAEhB,IAAI,CAACS;MACpB,CAAC,CAAC;IACN;IACA,IAAIQ,gBAAgB,GAAG;MAAEhB,MAAM,EAAE,KAAK;MAAEiB,cAAc,EAAErB,oBAAoB;MAAE9E,IAAI,EAAER;IAAU,CAAC;IAC/F,IAAI,CAAC0G,gBAAgB,CAAChB,MAAM,IAAI,IAAI,CAACvF,KAAK,CAACyG,QAAQ,EAAE;MACjD,IAAI,CAACzG,KAAK,CAAC0G,OAAO,CAAC7G,SAAS,EAAE0G,gBAAgB,EAAE,YAAY;QACxD5B,KAAK,CAACgC,mBAAmB,CAAC3G,KAAK,CAAC;MACpC,CAAC,CAAC;IACN,CAAC,MACI;MACD,IAAI,CAACA,KAAK,CAAC0G,OAAO,CAAC7G,SAAS,EAAE0G,gBAAgB,EAAE,YAAY;QACxD5B,KAAK,CAACgC,mBAAmB,CAAC3G,KAAK,CAAC;QAChC2E,KAAK,CAACiC,eAAe,CAAC5G,KAAK,EAAE,KAAK,CAAC;MACvC,CAAC,CAAC;IACN;EACJ,CAAC;EACDD,IAAI,CAAC6B,SAAS,CAAC+E,mBAAmB,GAAG,UAAU3G,KAAK,EAAE;IAClD,IAAI6G,UAAU;IACd,IAAIC,UAAU;IACd,IAAI,IAAI,CAACpG,OAAO,CAACqG,qBAAqB,EAAE;MACpCF,UAAU,GAAG7G,KAAK,CAACkD,MAAM,GAAGlD,KAAK,CAACgH,UAAU;MAC5CF,UAAU,GAAG9G,KAAK,CAACmD,MAAM,GAAGnD,KAAK,CAACiH,UAAU;MAC5C,QAAQ,IAAI,CAACvG,OAAO,CAACgD,IAAI;QACrB,KAAK,GAAG;UACJoD,UAAU,GAAG,CAAC;UACd;QACJ,KAAK,GAAG;UACJD,UAAU,GAAG,CAAC;UACd;MAAM;MAEd,IAAI,CAACK,YAAY,CAACL,UAAU,EAAEC,UAAU,EAAE,IAAI,EAAE,IAAI,EAAE9G,KAAK,EAAE,KAAK,CAAC;MACnE,IAAI,CAACmH,WAAW,CAACnH,KAAK,CAAC4C,oBAAoB,EAAE5C,KAAK,EAAEA,KAAK,CAAC0C,eAAe,CAAC;MAC1E,IAAI1C,KAAK,CAAC8D,YAAY,EAAE;QACpB,IAAI,CAACsD,iBAAiB,CAACpH,KAAK,CAAC;MACjC;IACJ,CAAC,MACI;MACD,IAAI,CAACoH,iBAAiB,CAACpH,KAAK,CAAC;IACjC;IACAA,KAAK,CAAC+C,kBAAkB,GAAG/C,KAAK,CAACkD,MAAM;IACvClD,KAAK,CAACgD,kBAAkB,GAAGhD,KAAK,CAACmD,MAAM;EAC3C,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIpD,IAAI,CAAC6B,SAAS,CAACwF,iBAAiB,GAAG,UAAUpH,KAAK,EAAE;IAChD,IAAIoD,IAAI,GAAG,IAAI,CAACpC,WAAW;IAC3BhB,KAAK,CAACqH,aAAa,GAAG,KAAK;IAC3B,IAAI,IAAI,CAAC/F,QAAQ,EAAE;MACf,IAAI8B,IAAI,CAACC,KAAK,GAAG,CAAC,IAAID,IAAI,CAACE,MAAM,GAAG,CAAC,EAAE;QACnC,IAAI,CAAC/B,WAAW,GAAG,IAAI;QACvBvB,KAAK,CAACwD,SAAS,CAACC,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC;QAC9C,IAAI,CAAC6D,MAAM,CAACtH,KAAK,EAAEA,KAAK,CAAC0C,eAAe,EAAE1C,KAAK,CAAC4C,oBAAoB,CAACC,cAAc,CAAC;QACpF7C,KAAK,CAACiC,WAAW,GAAG,KAAK;MAC7B,CAAC,MACI,IAAIjC,KAAK,CAACuD,mBAAmB,EAAE;QAChCvD,KAAK,CAACuD,mBAAmB,GAAG,KAAK;QACjCvD,KAAK,CAACiF,WAAW,GAAG,KAAK;QACzBjF,KAAK,CAAC8D,YAAY,GAAG9D,KAAK,CAACuH,cAAc,EAAE,GAAGvH,KAAK,CAACwH,SAAS,EAAE;QAC/DxH,KAAK,CAACmH,WAAW,EAAE;QACnBnH,KAAK,CAACyH,YAAY,EAAE;MACxB;IACJ;EACJ,CAAC;EACD1H,IAAI,CAAC6B,SAAS,CAACuF,WAAW,GAAG,UAAUO,MAAM,EAAE1H,KAAK,EAAEwE,IAAI,EAAE;IACxD,IAAId,IAAI,GAAG1D,KAAK,CAACW,YAAY,CAAC+C,IAAI;IAClCgE,MAAM,CAACC,WAAW,CAAC,IAAIlI,IAAI,CAACO,KAAK,CAAC4H,eAAe,CAAChE,CAAC,EAAE5D,KAAK,CAAC4H,eAAe,CAACjE,CAAC,EAAE3D,KAAK,CAAC4H,eAAe,CAACvE,KAAK,EAAErD,KAAK,CAAC4H,eAAe,CAACtE,MAAM,CAAC,CAAC;IACzIkB,IAAI,CAACqD,GAAG,CAAC,UAAUvC,IAAI,EAAEwC,KAAK,EAAE;MAC5B,IAAIxC,IAAI,CAACa,WAAW,KAAK,YAAY,IAAIzC,IAAI,KAAK,GAAG,EAAE;QACnDgE,MAAM,CAACK,eAAe,CAACzC,IAAI,EAAEwC,KAAK,EAAE,IAAI,EAAGxC,IAAI,CAAC0C,mBAAmB,GAAG1C,IAAI,CAAC2C,WAAW,GAAG3C,IAAI,CAAClC,IAAI,CAAE;MACxG;MACA,IAAIkC,IAAI,CAACa,WAAW,KAAK,UAAU,IAAIzC,IAAI,KAAK,GAAG,EAAE;QACjDgE,MAAM,CAACQ,eAAe,CAAC5C,IAAI,EAAEwC,KAAK,EAAE,IAAI,EAAGxC,IAAI,CAAC0C,mBAAmB,GAAG1C,IAAI,CAAC2C,WAAW,GAAG3C,IAAI,CAAClC,IAAI,CAAE;MACxG;IACJ,CAAC,CAAC;EACN,CAAC;EACD;EACArD,IAAI,CAAC6B,SAAS,CAAC0F,MAAM,GAAG,UAAUtH,KAAK,EAAEwE,IAAI,EAAE2D,MAAM,EAAE;IACnD,IAAIxD,KAAK,GAAG,IAAI;IAChB,IAAIyD,QAAQ,GAAG,IAAI,CAACpH,WAAW;IAC/B,IAAI0C,IAAI,GAAG,IAAI,CAAChD,OAAO,CAACgD,IAAI;IAC5B,IAAIwB,QAAQ;IACZ,IAAI,CAAC9C,SAAS,GAAGpC,KAAK,CAACW,YAAY,CAACa,SAAS,IAAI,IAAI,CAACY,SAAS;IAC/D,IAAIiG,qBAAqB,GAAG,EAAE;IAC9B,IAAI,CAACpI,yBAAyB,GAAG,EAAE;IACnC,KAAK,IAAImF,EAAE,GAAG,CAAC,EAAEC,EAAE,GAAGb,IAAI,EAAEY,EAAE,GAAGC,EAAE,CAAClD,MAAM,EAAEiD,EAAE,EAAE,EAAE;MAC9C,IAAIE,IAAI,GAAGD,EAAE,CAACD,EAAE,CAAC;MACjBF,QAAQ,GAAG;QACPK,MAAM,EAAE,KAAK;QAAElF,IAAI,EAAET,YAAY;QAAE0F,IAAI,EAAEA,IAAI;QAC7CE,kBAAkB,EAAEF,IAAI,CAACG,UAAU;QACnCC,oBAAoB,EAAEJ,IAAI,CAACK,YAAY;QACvCC,iBAAiB,EAAEN,IAAI,CAACG,UAAU;QAClCI,mBAAmB,EAAEP,IAAI,CAACK,YAAY;QACtCG,oBAAoB,EAAER,IAAI,CAACS,YAAY;QAAEC,mBAAmB,EAAE;MAClE,CAAC;MACD,IAAIV,IAAI,CAACa,WAAW,KAAK,YAAY,EAAE;QACnC,IAAIzC,IAAI,KAAK,GAAG,EAAE;UACdwB,QAAQ,CAACW,mBAAmB,IAAII,IAAI,CAACqC,GAAG,CAAC,CAACF,QAAQ,CAACxE,CAAC,GAAGuE,MAAM,CAACvE,CAAC,IAAKuE,MAAM,CAAC9E,KAAM,CAAC,GAAGiC,IAAI,CAACG,UAAU;UACpGP,QAAQ,CAACU,iBAAiB,IAAKwC,QAAQ,CAAC/E,KAAK,GAAG8E,MAAM,CAAC9E,KAAM;QACjE;MACJ,CAAC,MACI;QACD,IAAIK,IAAI,KAAK,GAAG,EAAE;UACdwB,QAAQ,CAACW,mBAAmB,IAAI,CAAC,CAAC,GAAGI,IAAI,CAACqC,GAAG,CAAC,CAACF,QAAQ,CAAC9E,MAAM,IAAI8E,QAAQ,CAACzE,CAAC,GAAGwE,MAAM,CAACxE,CAAC,CAAC,IAAKwE,MAAM,CAAC7E,MAAO,CAAC,IACtGgC,IAAI,CAACG,UAAU;UACrBP,QAAQ,CAACU,iBAAiB,IAAKwC,QAAQ,CAAC9E,MAAM,GAAG6E,MAAM,CAAC7E,MAAO;QACnE;MACJ;MACA,IAAIiF,UAAU,CAACrD,QAAQ,CAACU,iBAAiB,CAAC4C,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,EAAE;QAC5DtD,QAAQ,CAACU,iBAAiB,GAAGV,QAAQ,CAACM,kBAAkB;QACxDN,QAAQ,CAACW,mBAAmB,GAAGX,QAAQ,CAACQ,oBAAoB;MAChE;MACA,IAAI,CAACR,QAAQ,CAACK,MAAM,EAAE;QAClBD,IAAI,CAACG,UAAU,GAAGP,QAAQ,CAACU,iBAAiB;QAC5CN,IAAI,CAACK,YAAY,GAAGT,QAAQ,CAACW,mBAAmB;QAChD,IAAI,CAAC5F,yBAAyB,CAACmG,IAAI,CAAClB,QAAQ,CAAC;MACjD;MACAmD,qBAAqB,CAACjC,IAAI,CAAC;QACvBX,UAAU,EAAEH,IAAI,CAACG,UAAU;QAAEE,YAAY,EAAEL,IAAI,CAACG,UAAU;QAAEY,QAAQ,EAAEf,IAAI,CAACjF,IAAI;QAC/EiG,SAAS,EAAEhB,IAAI,CAACS;MACpB,CAAC,CAAC;IACN;IACA,IAAI0C,iBAAiB,GAAG;MAAElD,MAAM,EAAE,KAAK;MAAEiB,cAAc,EAAE6B,qBAAqB;MAAEhI,IAAI,EAAER;IAAU,CAAC;IACjG,IAAI,CAAC4I,iBAAiB,CAAClD,MAAM,IAAI,IAAI,CAACvF,KAAK,CAACyG,QAAQ,EAAE;MAClD,IAAI,CAACzG,KAAK,CAAC0G,OAAO,CAAC7G,SAAS,EAAE4I,iBAAiB,EAAE,YAAY;QACzD9D,KAAK,CAAC3D,WAAW,GAAG,IAAIvB,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACxCkF,KAAK,CAACyC,iBAAiB,CAACpH,KAAK,CAAC;MAClC,CAAC,CAAC;IACN,CAAC,MACI;MACD,IAAI,CAACA,KAAK,CAAC0G,OAAO,CAAC7G,SAAS,EAAE4I,iBAAiB,EAAE,YAAY;QACzD9D,KAAK,CAAC3D,WAAW,GAAG,IAAIvB,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACxCkF,KAAK,CAACiC,eAAe,CAAC5G,KAAK,CAAC;MAChC,CAAC,CAAC;IACN;EACJ,CAAC;EACD;EACAD,IAAI,CAAC6B,SAAS,CAACgF,eAAe,GAAG,UAAU5G,KAAK,EAAE0I,QAAQ,EAAEC,SAAS,EAAE;IACnE,IAAID,QAAQ,KAAK,KAAK,CAAC,EAAE;MAAEA,QAAQ,GAAG,IAAI;IAAE;IAC5C,IAAIC,SAAS,KAAK,KAAK,CAAC,EAAE;MAAEA,SAAS,GAAG,KAAK;IAAE;IAC/C,IAAIC,sBAAsB,GAAGD,SAAS,GAAG,IAAI,CAAC/H,OAAO,CAACX,yBAAyB,GAC3E,IAAI,CAACA,yBAAyB;IAClC,IAAIyI,QAAQ,EAAE;MACV,IAAI,CAACtB,iBAAiB,CAACpH,KAAK,CAAC;IACjC;IACA,IAAIkF,QAAQ;IACZ,KAAK,IAAI2D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,sBAAsB,CAACzG,MAAM,EAAE0G,CAAC,EAAE,EAAE;MACpD,IAAI,CAACD,sBAAsB,CAACC,CAAC,CAAC,CAACtD,MAAM,EAAE;QACnCL,QAAQ,GAAG;UACPK,MAAM,EAAE,KAAK;UAAElF,IAAI,EAAET,YAAY;UACjC0F,IAAI,EAAEtF,KAAK,CAAC0C,eAAe,CAACmG,CAAC,CAAC;UAC9BrD,kBAAkB,EAAEoD,sBAAsB,CAACC,CAAC,CAAC,CAACrD,kBAAkB;UAChEE,oBAAoB,EAAEkD,sBAAsB,CAACC,CAAC,CAAC,CAACnD,oBAAoB;UACpEE,iBAAiB,EAAE5F,KAAK,CAAC0C,eAAe,CAACmG,CAAC,CAAC,CAACpD,UAAU;UACtDI,mBAAmB,EAAE7F,KAAK,CAAC0C,eAAe,CAACmG,CAAC,CAAC,CAAClD,YAAY;UAC1DK,mBAAmB,EAAEhG,KAAK,CAAC0C,eAAe,CAACmG,CAAC,CAAC,CAAC9C,YAAY;UAC1DD,oBAAoB,EAAE8C,sBAAsB,CAACC,CAAC,CAAC,CAAC/C;QACpD,CAAC;QACD9F,KAAK,CAAC0G,OAAO,CAAC9G,YAAY,EAAEsF,QAAQ,CAAC;MACzC;IACJ;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACInF,IAAI,CAAC6B,SAAS,CAACkH,wBAAwB,GAAG,UAAUhH,CAAC,EAAEoB,MAAM,EAAEC,MAAM,EAAEnD,KAAK,EAAEwE,IAAI,EAAE;IAChF,IAAIG,KAAK,GAAG,IAAI;IAChB,IAAIoE,SAAS,GAAI,IAAI,CAAC5I,WAAW,KAAK,SAAS,IAAI,CAAC,IAAI,CAACD,SAAS,GAC9D,CAAE4B,CAAC,CAACkH,MAAO,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAIlH,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE;IACjE,IAAI4B,IAAI,GAAG,IAAI,CAAChD,OAAO,CAACgD,IAAI;IAC5B,IAAIuF,MAAM,GAAG,GAAG;IAChB,IAAIC,UAAU;IACd,IAAIzD,UAAU;IACd,IAAIE,YAAY;IAChB,IAAI,CAACrE,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACU,sBAAsB,CAAChC,KAAK,CAAC;IAClCA,KAAK,CAACuD,mBAAmB,GAAG,IAAI;IAChC,IAAI,CAAChC,WAAW,GAAG,IAAI;IACvB,IAAI,CAACa,SAAS,GAAGpC,KAAK,CAACW,YAAY,CAACa,SAAS,IAAI,IAAI,CAACY,SAAS;IAC/D,IAAI,CAACnC,yBAAyB,GAAG,EAAE;IACnC,IAAIiF,QAAQ;IACZ,IAAIC,oBAAoB,GAAG,EAAE;IAC7B,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEC,EAAE,GAAGb,IAAI,EAAEY,EAAE,GAAGC,EAAE,CAAClD,MAAM,EAAEiD,EAAE,EAAE,EAAE;MAC9C,IAAIE,IAAI,GAAGD,EAAE,CAACD,EAAE,CAAC;MACjBF,QAAQ,GAAG;QACPK,MAAM,EAAE,KAAK;QAAElF,IAAI,EAAET,YAAY;QAAE0F,IAAI,EAAEA,IAAI;QAAEE,kBAAkB,EAAEF,IAAI,CAACG,UAAU;QAClFC,oBAAoB,EAAEJ,IAAI,CAACK,YAAY;QACvCC,iBAAiB,EAAEN,IAAI,CAACG,UAAU;QAClCI,mBAAmB,EAAEP,IAAI,CAACK,YAAY;QAAEK,mBAAmB,EAAE,IAAI;QACjEF,oBAAoB,EAAER,IAAI,CAACS;MAC/B,CAAC;MACD,IAAKT,IAAI,CAACa,WAAW,KAAK,UAAU,IAAIzC,IAAI,KAAK,GAAG,IAC/C4B,IAAI,CAACa,WAAW,KAAK,YAAY,IAAIzC,IAAI,KAAK,GAAI,EAAE;QACrDwF,UAAU,GAAGjD,IAAI,CAACC,GAAG,CAACD,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG7G,MAAM,CAACiG,IAAI,CAACG,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAI,IAAI,GAAGsD,SAAU,EAAE,CAAC,CAAC;QAC7FG,UAAU,GAAIA,UAAU,GAAG,WAAW,GAAI,WAAW,GAAGA,UAAU;QAClE,IAAIA,UAAU,IAAI,CAAC,EAAE;UACjBD,MAAM,GAAG3D,IAAI,CAACa,WAAW,KAAK,YAAY,GAAGjD,MAAM,GAAGoC,IAAI,CAAClC,IAAI,CAACC,KAAK,GAAG,CAAC,GAAIF,MAAM,GAAGmC,IAAI,CAAClC,IAAI,CAACE,MAAO;UACvG2F,MAAM,GAAGA,MAAM,GAAG,CAAC,GAAG,CAAC,GAAGA,MAAM,GAAG,CAAC,GAAG,CAAC,GAAGA,MAAM;UACjDxD,UAAU,GAAIyD,UAAU,KAAK,CAAC,GAAI,CAAC,GAAG7J,MAAM,CAAC,CAAC0J,SAAS,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,IAAIG,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC;UAC5FvD,YAAY,GAAIuD,UAAU,KAAK,CAAC,GAAI,CAAC,GAAG5D,IAAI,CAACK,YAAY,GAAI,CAACL,IAAI,CAACG,UAAU,GAAGA,UAAU,IAAIwD,MAAO;UACrG,IAAI3D,IAAI,CAACK,YAAY,KAAKA,YAAY,IAAIL,IAAI,CAACG,UAAU,KAAKA,UAAU,EAAE;YACtEA,UAAU,GAAIE,YAAY,GAAGF,UAAU,GAAI,CAAC,GAAI,CAAC,GAAGE,YAAY,GAAIF,UAAU;UAClF;UACAP,QAAQ,CAACU,iBAAiB,GAAGH,UAAU;UACvCP,QAAQ,CAACW,mBAAmB,GAAGF,YAAY;QAC/C;QACA,IAAI,CAACT,QAAQ,CAACK,MAAM,EAAE;UAClBD,IAAI,CAACG,UAAU,GAAGP,QAAQ,CAACU,iBAAiB;UAC5CN,IAAI,CAACK,YAAY,GAAGT,QAAQ,CAACW,mBAAmB;UAChD,IAAI,CAAC5F,yBAAyB,CAACmG,IAAI,CAAClB,QAAQ,CAAC;QACjD;MACJ;MACAC,oBAAoB,CAACiB,IAAI,CAAC;QACtBX,UAAU,EAAEH,IAAI,CAACG,UAAU;QAAEE,YAAY,EAAEL,IAAI,CAACG,UAAU;QAAEY,QAAQ,EAAEf,IAAI,CAACjF,IAAI;QAC/EiG,SAAS,EAAEhB,IAAI,CAACS;MACpB,CAAC,CAAC;IACN;IACA,IAAIoD,kBAAkB,GAAG;MAAE5D,MAAM,EAAE,KAAK;MAAEiB,cAAc,EAAErB,oBAAoB;MAAE9E,IAAI,EAAER;IAAU,CAAC;IACjG,IAAI,CAACsJ,kBAAkB,CAAC5D,MAAM,IAAI,IAAI,CAACvF,KAAK,CAACyG,QAAQ,EAAE;MACnD,IAAI,CAACzG,KAAK,CAAC0G,OAAO,CAAC7G,SAAS,EAAEsJ,kBAAkB,EAAE,YAAY;QAAExE,KAAK,CAACyC,iBAAiB,CAACpH,KAAK,CAAC;MAAE,CAAC,CAAC;IACtG,CAAC,MACI;MACD,IAAI,CAACA,KAAK,CAAC0G,OAAO,CAAC7G,SAAS,EAAEsJ,kBAAkB,EAAE,YAAY;QAAExE,KAAK,CAACiC,eAAe,CAAC5G,KAAK,CAAC;MAAE,CAAC,CAAC;IACpG;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACID,IAAI,CAAC6B,SAAS,CAACwH,mBAAmB,GAAG,UAAUtH,CAAC,EAAE9B,KAAK,EAAE;IACrD,IAAK,IAAI,CAACgB,WAAW,CAACqC,KAAK,GAAG,CAAC,IAAI,IAAI,CAACrC,WAAW,CAACsC,MAAM,GAAG,CAAC,IAAMtD,KAAK,CAAC4E,SAAS,IAAI5E,KAAK,CAAC6E,SAAS,CAACC,MAAO,EAAE;MAC5G,OAAO,KAAK;IAChB;IACA,IAAI,CAAC9C,sBAAsB,CAAChC,KAAK,CAAC;IAClC,IAAI,CAACsB,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACc,SAAS,GAAG,IAAI;IACrB,IAAI,CAACb,WAAW,GAAG,IAAI;IACvB,IAAI,CAACyD,MAAM,GAAG,CAAChF,KAAK,CAACiF,WAAW,GAAGjF,KAAK,CAAC4C,oBAAoB,CAACC,cAAc,GAAG,IAAI,CAACmC,MAAM;IAC1FhF,KAAK,CAACiF,WAAW,GAAG,IAAI;IACxBjF,KAAK,CAACuD,mBAAmB,GAAG,IAAI;IAChC,IAAI8F,aAAa,GAAGrJ,KAAK,CAACc,OAAO,CAACwI,qBAAqB,EAAE;IACzD,IAAIC,SAAS,GAAG,IAAI,CAACrH,cAAc;IACnC,IAAIsH,SAAS,GAAG,IAAI,CAACC,aAAa;IAClC,IAAIC,YAAY,GAAGH,SAAS,CAAC,CAAC,CAAC,CAACI,KAAK,GAAGN,aAAa,CAACO,IAAI;IAC1D,IAAIC,YAAY,GAAGN,SAAS,CAAC,CAAC,CAAC,CAACO,KAAK,GAAGT,aAAa,CAACU,GAAG;IACzD,IAAIC,UAAU,GAAGR,SAAS,CAAC,CAAC,CAAC,CAACG,KAAK,GAAGN,aAAa,CAACO,IAAI;IACxD,IAAIK,UAAU,GAAGT,SAAS,CAAC,CAAC,CAAC,CAACM,KAAK,GAAGT,aAAa,CAACU,GAAG;IACvD,IAAIG,YAAY,GAAGX,SAAS,CAAC,CAAC,CAAC,CAACI,KAAK,GAAGN,aAAa,CAACO,IAAI;IAC1D,IAAIO,YAAY,GAAGZ,SAAS,CAAC,CAAC,CAAC,CAACO,KAAK,GAAGT,aAAa,CAACU,GAAG;IACzD,IAAIK,UAAU,GAAGZ,SAAS,CAAC,CAAC,CAAC,CAACG,KAAK,GAAGN,aAAa,CAACO,IAAI;IACxD,IAAIS,UAAU,GAAGb,SAAS,CAAC,CAAC,CAAC,CAACM,KAAK,GAAGT,aAAa,CAACU,GAAG;IACvD,IAAIO,MAAM,GAAGrE,IAAI,CAACqC,GAAG,CAAC0B,UAAU,GAAGI,UAAU,CAAC,GAAGnE,IAAI,CAACqC,GAAG,CAACoB,YAAY,GAAGQ,YAAY,CAAC;IACtF,IAAIK,MAAM,GAAGtE,IAAI,CAACqC,GAAG,CAAC2B,UAAU,GAAGI,UAAU,CAAC,GAAGpE,IAAI,CAACqC,GAAG,CAACuB,YAAY,GAAGM,YAAY,CAAC;IACtF,IAAIK,KAAK,GAAI,CAAC,IAAI,CAACxF,MAAM,CAACpB,CAAC,GAAGoG,UAAU,IAAIM,MAAM,GAAIZ,YAAY;IAClE,IAAIe,KAAK,GAAI,CAAC,IAAI,CAACzF,MAAM,CAACrB,CAAC,GAAGsG,UAAU,IAAIM,MAAM,GAAIV,YAAY;IAClE,IAAIa,SAAS,GAAG,IAAIjL,IAAI,CAAC+K,KAAK,EAAEC,KAAK,EAAE,IAAI,CAACzF,MAAM,CAAC3B,KAAK,GAAGiH,MAAM,EAAE,IAAI,CAACtF,MAAM,CAAC1B,MAAM,GAAGiH,MAAM,CAAC;IAC/F,IAAII,eAAe,GAAIX,UAAU,GAAIM,MAAM,GAAGZ,YAAc;IAC5D,IAAIkB,eAAe,GAAIX,UAAU,GAAIM,MAAM,GAAGV,YAAc;IAC5D,IAAI,CAACgB,KAAK,CAACP,MAAM,GAAGA,MAAM,CAAC,IAAI,CAACO,KAAK,CAACN,MAAM,GAAGA,MAAM,CAAC,EAAE;MACpD,QAAQ,IAAI,CAAC7J,OAAO,CAACgD,IAAI;QACrB,KAAK,IAAI;UACL,IAAI,CAACwD,YAAY,CAACyD,eAAe,EAAEC,eAAe,EAAEN,MAAM,EAAEC,MAAM,EAAEvK,KAAK,EAAE,IAAI,CAAC;UAChF;QACJ,KAAK,GAAG;UACJ,IAAI,CAACkH,YAAY,CAACyD,eAAe,EAAE,CAAC,EAAEL,MAAM,EAAE,CAAC,EAAEtK,KAAK,EAAE,IAAI,CAAC;UAC7D;QACJ,KAAK,GAAG;UACJ,IAAI,CAACkH,YAAY,CAAC,CAAC,EAAE0D,eAAe,EAAE,CAAC,EAAEL,MAAM,EAAEvK,KAAK,EAAE,IAAI,CAAC;UAC7D;MAAM;IAElB;IACA,IAAI,CAAC8K,wBAAwB,CAAC9K,KAAK,EAAE0K,SAAS,CAAC;IAC/C,IAAI,CAACvD,WAAW,CAACnH,KAAK,CAAC4C,oBAAoB,EAAE5C,KAAK,EAAEA,KAAK,CAAC0C,eAAe,CAAC;IAC1E,IAAI,CAACkE,eAAe,CAAC5G,KAAK,EAAE,KAAK,CAAC;IAClC,OAAO,IAAI;EACf,CAAC;EACDD,IAAI,CAAC6B,SAAS,CAACkJ,wBAAwB,GAAG,UAAU9K,KAAK,EAAE0K,SAAS,EAAE;IAClE,IAAIhH,IAAI,GAAG,IAAI,CAAChD,OAAO,CAACgD,IAAI;IAC5B,IAAIqH,YAAY;IAChB,IAAIC,YAAY;IAChB,IAAIC,QAAQ;IACZ,IAAIC,QAAQ;IACZ,IAAIC,KAAK;IACT,IAAIC,SAAS;IACb,IAAIlG,QAAQ;IACZ,IAAImG,SAAS;IACb,IAAIC,SAAS;IACb,IAAInG,oBAAoB,GAAG,EAAE;IAC7B,IAAI,CAAClF,yBAAyB,GAAG,EAAE;IACnC,KAAK,IAAI6H,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG9H,KAAK,CAAC0C,eAAe,CAACP,MAAM,EAAE2F,KAAK,EAAE,EAAE;MAC/D,IAAIxC,IAAI,GAAGtF,KAAK,CAAC0C,eAAe,CAACoF,KAAK,CAAC;MACvC,IAAKxC,IAAI,CAACa,WAAW,KAAK,YAAY,IAAIzC,IAAI,KAAK,GAAG,IACjD4B,IAAI,CAACa,WAAW,KAAK,UAAU,IAAIzC,IAAI,KAAK,GAAI,EAAE;QACnD2H,SAAS,GAAG/F,IAAI,CAACG,UAAU;QAC3B6F,SAAS,GAAGhG,IAAI,CAACK,YAAY;QAC7BT,QAAQ,GAAG;UACPK,MAAM,EAAE,KAAK;UAAElF,IAAI,EAAET,YAAY;UAAE0F,IAAI,EAAEA,IAAI;UAAEE,kBAAkB,EAAEF,IAAI,CAACG,UAAU;UAClFC,oBAAoB,EAAEJ,IAAI,CAACK,YAAY;UAAEC,iBAAiB,EAAEyF,SAAS;UACrExF,mBAAmB,EAAEyF,SAAS;UAAExF,oBAAoB,EAAER,IAAI,CAACS,YAAY;UACvEC,mBAAmB,EAAE;QACzB,CAAC;QACD,IAAIV,IAAI,CAACa,WAAW,KAAK,YAAY,EAAE;UACnCgF,KAAK,GAAGT,SAAS,CAAC9G,CAAC,GAAG,IAAI,CAACoB,MAAM,CAACpB,CAAC;UACnCwH,SAAS,GAAG9F,IAAI,CAAClC,IAAI,CAACC,KAAK,GAAG,IAAI,CAACpC,QAAQ,CAAC6G,KAAK,CAAC,CAACyD,KAAK;UACxDN,QAAQ,GAAGE,KAAK,GAAGC,SAAS,GAAG,IAAI,CAACnK,QAAQ,CAAC6G,KAAK,CAAC,CAAC0D,GAAG;UACvDL,KAAK,GAAGT,SAAS,CAAC9G,CAAC,GAAG8G,SAAS,CAACrH,KAAK,GAAG,IAAI,CAAC2B,MAAM,CAACpB,CAAC;UACrDsH,QAAQ,GAAGC,KAAK,GAAGC,SAAS,GAAG,IAAI,CAACnK,QAAQ,CAAC6G,KAAK,CAAC,CAAC0D,GAAG;QAC3D,CAAC,MACI;UACDL,KAAK,GAAGT,SAAS,CAAC/G,CAAC,GAAG,IAAI,CAACqB,MAAM,CAACrB,CAAC;UACnCyH,SAAS,GAAG9F,IAAI,CAAClC,IAAI,CAACE,MAAM,GAAG,IAAI,CAACrC,QAAQ,CAAC6G,KAAK,CAAC,CAACyD,KAAK;UACzDN,QAAQ,GAAG,CAACE,KAAK,GAAG,CAAC,CAAC,GAAG7F,IAAI,CAAClC,IAAI,CAACE,MAAM,IAAI8H,SAAS,GAAG,IAAI,CAACnK,QAAQ,CAAC6G,KAAK,CAAC,CAAC0D,GAAG;UACjFL,KAAK,GAAGT,SAAS,CAAC/G,CAAC,GAAG+G,SAAS,CAACpH,MAAM,GAAG,IAAI,CAAC0B,MAAM,CAACrB,CAAC;UACtDuH,QAAQ,GAAG,CAACC,KAAK,GAAG,CAAC,CAAC,GAAG7F,IAAI,CAAClC,IAAI,CAACE,MAAM,IAAI8H,SAAS,GAAG,IAAI,CAACnK,QAAQ,CAAC6G,KAAK,CAAC,CAAC0D,GAAG;QACrF;QACAT,YAAY,GAAG9E,IAAI,CAACuF,GAAG,CAACP,QAAQ,EAAEC,QAAQ,CAAC;QAC3CF,YAAY,GAAG/E,IAAI,CAACC,GAAG,CAAC+E,QAAQ,EAAEC,QAAQ,CAAC;QAC3CI,SAAS,GAAG,CAACP,YAAY,GAAG,IAAI,CAAC9J,QAAQ,CAAC6G,KAAK,CAAC,CAAC2D,SAAS,IAAI,IAAI,CAACxK,QAAQ,CAAC6G,KAAK,CAAC,CAAC4D,WAAW;QAC9FL,SAAS,GAAG,CAACL,YAAY,GAAGD,YAAY,IAAI,IAAI,CAAC9J,QAAQ,CAAC6G,KAAK,CAAC,CAAC4D,WAAW;QAC5ExG,QAAQ,CAACW,mBAAmB,GAAGyF,SAAS,GAAG,CAAC,GAAG,CAAC,GAAGA,SAAS;QAC5DpG,QAAQ,CAACU,iBAAiB,GAAGyF,SAAS,GAAG,CAAC,GAAG,CAAC,GAAIA,SAAS,GAAG,IAAI,GAAI,IAAI,GAAGA,SAAS;QACtF,IAAI,CAACnG,QAAQ,CAACK,MAAM,EAAE;UAClBD,IAAI,CAACG,UAAU,GAAGP,QAAQ,CAACU,iBAAiB;UAC5CN,IAAI,CAACK,YAAY,GAAGT,QAAQ,CAACW,mBAAmB;UAChD,IAAI,CAAC5F,yBAAyB,CAACmG,IAAI,CAAClB,QAAQ,CAAC;QACjD;QACAC,oBAAoB,CAACiB,IAAI,CAAC;UACtBX,UAAU,EAAEH,IAAI,CAACG,UAAU;UAAEE,YAAY,EAAEL,IAAI,CAACG,UAAU;UAAEY,QAAQ,EAAEf,IAAI,CAACjF,IAAI;UAC/EiG,SAAS,EAAEhB,IAAI,CAACS;QACpB,CAAC,CAAC;MACN;IACJ;IACA,IAAIoD,kBAAkB,GAAG;MAAE5D,MAAM,EAAE,KAAK;MAAEiB,cAAc,EAAErB,oBAAoB;MAAE9E,IAAI,EAAER;IAAU,CAAC;IACjG,IAAI,CAACsJ,kBAAkB,CAAC5D,MAAM,EAAE;MAC5B,IAAI,CAACvF,KAAK,CAAC0G,OAAO,CAAC7G,SAAS,EAAEsJ,kBAAkB,CAAC;IACrD;EACJ,CAAC;EACD;EACApJ,IAAI,CAAC6B,SAAS,CAACsF,YAAY,GAAG,UAAUyE,MAAM,EAAEC,MAAM,EAAEtB,MAAM,EAAEC,MAAM,EAAEvK,KAAK,EAAE6L,OAAO,EAAE;IACpF,IAAI,CAAC7L,KAAK,CAAC8D,YAAY,EAAE;MACrB9D,KAAK,CAAC8L,cAAc,CAACrI,YAAY,CAAC,WAAW,EAAE,OAAO,GAAG,IAAI,CAAC5C,SAAS,GAAG,sBAAsB,CAAC;IACrG;IACA,IAAIb,KAAK,CAAC+L,iBAAiB,EAAE;MACzB/L,KAAK,CAAC+L,iBAAiB,CAACtI,YAAY,CAAC,WAAW,EAAE,OAAO,GAAG,IAAI,CAAC5C,SAAS,GAAG,sBAAsB,CAAC;IACxG;IACA,IAAImL,SAAS;IACb,IAAIC,QAAQ;IACZ,IAAIC,QAAQ;IACZ,IAAIpL,OAAO;IACX,IAAI6K,MAAM,KAAK,IAAI,IAAIC,MAAM,KAAK,IAAI,EAAE;MACpC,KAAK,IAAIxG,EAAE,GAAG,CAAC,EAAEC,EAAE,GAAGrF,KAAK,CAACmM,aAAa,EAAE/G,EAAE,GAAGC,EAAE,CAAClD,MAAM,EAAEiD,EAAE,EAAE,EAAE;QAC7D,IAAI+F,KAAK,GAAG9F,EAAE,CAACD,EAAE,CAAC;QAClB6G,QAAQ,GAAGjM,KAAK,CAACoM,mBAAmB,GAAGjB,KAAK,CAACkB,KAAK,CAACjJ,IAAI,CAACQ,CAAC,GAAGuH,KAAK,CAACmB,KAAK,CAAClJ,IAAI,CAACQ,CAAC;QAC9EsI,QAAQ,GAAGlM,KAAK,CAACoM,mBAAmB,GAAGjB,KAAK,CAACmB,KAAK,CAAClJ,IAAI,CAACO,CAAC,GAAGwH,KAAK,CAACkB,KAAK,CAACjJ,IAAI,CAACO,CAAC;QAC9EqI,SAAS,GAAG,YAAY,IAAIL,MAAM,IAAIE,OAAO,GAAIvB,MAAM,GAAG2B,QAAQ,GAAIA,QAAQ,CAAC,CAAC,GAC5E,GAAG,IAAIL,MAAM,IAAIC,OAAO,GAAItB,MAAM,GAAG2B,QAAQ,GAAIA,QAAQ,CAAC,CAAC,GAAG,GAAG;QACrEF,SAAS,GAAI1B,MAAM,IAAIC,MAAM,GAAIyB,SAAS,GAAG,SAAS,GAAG1B,MAAM,GAAG,GAAG,GAAGC,MAAM,GAAG,GAAG,GAAGyB,SAAS;QAChG,IAAIb,KAAK,CAACoB,OAAO,EAAE;UACf,IAAIpB,KAAK,CAACqB,QAAQ,KAAK,WAAW,EAAE;YAChCrB,KAAK,CAACsB,aAAa,CAACC,UAAU,CAACjJ,YAAY,CAAC,WAAW,EAAEuI,SAAS,CAAC;UACvE,CAAC,MACI;YACD,IAAI,CAAChM,KAAK,CAAC8D,YAAY,EAAE;cACrBqH,KAAK,CAACsB,aAAa,CAAChJ,YAAY,CAAC,WAAW,EAAEuI,SAAS,CAAC;YAC5D;UACJ;UACAlL,OAAO,GAAGxB,UAAU,CAACU,KAAK,CAACc,OAAO,CAACC,EAAE,GAAG,UAAU,GAAGoK,KAAK,CAACrD,KAAK,GAAG,uBAAuB,CAAC;UAC3F,IAAIqD,KAAK,CAACwB,eAAe,EAAE;YACvBxB,KAAK,CAACwB,eAAe,CAAClJ,YAAY,CAAC,WAAW,EAAEuI,SAAS,CAAC;UAC9D;UACA,IAAIb,KAAK,CAACyB,aAAa,EAAE;YACrBzB,KAAK,CAACyB,aAAa,CAACnJ,YAAY,CAAC,WAAW,EAAEuI,SAAS,CAAC;UAC5D;UACA,IAAIb,KAAK,CAAC0B,WAAW,EAAE;YACnB1B,KAAK,CAAC0B,WAAW,CAACpJ,YAAY,CAAC,YAAY,EAAE,QAAQ,CAAC;YACtD0H,KAAK,CAAC2B,YAAY,CAACrJ,YAAY,CAAC,YAAY,EAAE,QAAQ,CAAC;UAC3D;UACA,IAAI3C,OAAO,EAAE;YACTA,OAAO,CAACiM,KAAK,CAACC,UAAU,GAAG,QAAQ;UACvC;QACJ;MACJ;IACJ;EACJ,CAAC;EACDjN,IAAI,CAAC6B,SAAS,CAACI,sBAAsB,GAAG,UAAUhC,KAAK,EAAE;IACrD,IAAIiN,KAAK;IACT,IAAI3G,SAAS;IACb,KAAK,IAAIwB,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG9H,KAAK,CAAC0C,eAAe,CAACP,MAAM,EAAE2F,KAAK,EAAE,EAAE;MAC/D,IAAIxC,IAAI,GAAGtF,KAAK,CAAC0C,eAAe,CAACoF,KAAK,CAAC;MACvCxB,SAAS,GAAGhB,IAAI,CAACS,YAAY;MAC7B,IAAI,IAAI,CAAC9E,QAAQ,CAAC6G,KAAK,CAAC,EAAE;QACtB,IAAI,CAAC9H,KAAK,CAACiF,WAAW,EAAE;UACpB,IAAI,CAAChE,QAAQ,CAAC6G,KAAK,CAAC,CAAC0D,GAAG,GAAGlF,SAAS,CAACkF,GAAG;UACxC,IAAI,CAACvK,QAAQ,CAAC6G,KAAK,CAAC,CAACyD,KAAK,GAAGjF,SAAS,CAACiF,KAAK;QAChD;MACJ,CAAC,MACI;QACD0B,KAAK,GAAG;UACJxB,SAAS,EAAEnG,IAAI,CAAC4H,WAAW,CAAC1B,GAAG;UAC/BE,WAAW,EAAEpG,IAAI,CAAC4H,WAAW,CAAC3B,KAAK;UACnCC,GAAG,EAAElF,SAAS,CAACkF,GAAG;UAClBD,KAAK,EAAEjF,SAAS,CAACiF;QACrB,CAAC;QACD,IAAI,CAACtK,QAAQ,CAAC6G,KAAK,CAAC,GAAGmF,KAAK;MAChC;IACJ;EACJ,CAAC;EACD;EACAlN,IAAI,CAAC6B,SAAS,CAACuL,kBAAkB,GAAG,UAAUnN,KAAK,EAAE;IACjD,IAAIoN,YAAY,GAAG,IAAI,CAAC1M,OAAO,CAAC2M,YAAY;IAC5C,IAAI1K,UAAU,GAAG3C,KAAK,CAAC4C,oBAAoB,CAACC,cAAc;IAC1D,IAAIyK,OAAO,GAAG,CAAC;IACf,IAAIC,MAAM,GAAGvN,KAAK,CAACkE,WAAW;IAC9B,IAAI/B,MAAM,GAAG,IAAI,CAAC1B,QAAQ,GAAG,CAAC,GAAG2M,YAAY,CAACjL,MAAM;IACpD,IAAIqL,QAAQ,GAAG,IAAI,CAAC/M,QAAQ,GAAGf,WAAW,CAAC,YAAY,EAAE;MAAE+N,IAAI,EAAE;IAAO,CAAC,CAAC,CAACpK,KAAK,GAAG,EAAE;IACrF,IAAIC,MAAM,GAAG,IAAI,CAAC7C,QAAQ,GAAGf,WAAW,CAAC,YAAY,EAAE;MAAE+N,IAAI,EAAE;IAAO,CAAC,CAAC,CAACnK,MAAM,GAAG,EAAE;IACpF,IAAID,KAAK,GAAIlB,MAAM,GAAGqL,QAAQ,GAAK,CAACrL,MAAM,GAAG,CAAC,IAAImL,OAAQ,GAAI,CAACnL,MAAM,GAAG,CAAC,IAAImL,OAAQ;IACrF,IAAI3B,MAAM,GAAGhJ,UAAU,CAACiB,CAAC,GAAGjB,UAAU,CAACU,KAAK,GAAGA,KAAK,GAAGiK,OAAO;IAC9D,IAAI1B,MAAM,GAAIjJ,UAAU,CAACgB,CAAC,GAAG2J,OAAQ;IACrC,IAAII,SAAS,GAAGJ,OAAO;IACvB,IAAI1M,OAAO,GAAG,IAAI,CAACA,OAAO;IAC1B,IAAIE,OAAO;IACX,IAAI6M,aAAa,GAAG,6FAA6F;IACjHA,aAAa,IAAI,uGAAuG;IACxHA,aAAa,IAAI,mGAAmG;IACpH,IAAIxL,MAAM,KAAK,CAAC,IAAI7C,UAAU,CAAC,IAAI,CAACuB,SAAS,GAAG,wBAAwB,CAAC,EAAE;MACvE,OAAO,KAAK;IAChB;IACA,IAAI+M,UAAU,GAAGL,MAAM,CAACM,UAAU,EAAE;IACpCT,YAAY,GAAG,IAAI,CAAC3M,QAAQ,GAAG,CAAC,OAAO,CAAC,GAAG2M,YAAY;IACvDQ,UAAU,CAACE,SAAS,GAAGH,aAAa;IACpC,IAAI,CAACI,eAAe,GAAGR,MAAM,CAACS,WAAW,CAAC;MACtCjN,EAAE,EAAE,IAAI,CAACF,SAAS,GAAG,wBAAwB;MAC7CoN,SAAS,EAAE,YAAY,GAAGtC,MAAM,GAAG,GAAG,GAAGC,MAAM,GAAG;IACtD,CAAC,CAAC;IACF,IAAI,CAACmC,eAAe,CAAC9J,WAAW,CAAC2J,UAAU,CAAC;IAC5C,IAAIM,aAAa,GAAG,IAAI,CAAClO,KAAK,CAACmO,KAAK,KAAK,UAAU,GAAG,SAAS,GAAG,IAAI,CAACnO,KAAK,CAACmO,KAAK,KAAK,QAAQ,GAAG,SAAS,GACtG,IAAI,CAACnO,KAAK,CAACmO,KAAK,KAAK,YAAY,GAAG,SAAS,GAAG,SAAU;IAC/D,IAAI,CAACJ,eAAe,CAAC9J,WAAW,CAACsJ,MAAM,CAACpJ,aAAa,CAAC,IAAI3E,UAAU,CAAC,IAAI,CAACqB,SAAS,GAAG,eAAe,EAAEqN,aAAa,EAAE;MAAE5J,KAAK,EAAE,aAAa;MAAEjB,KAAK,EAAE;IAAE,CAAC,EAAE,CAAC,EAAE,IAAI5D,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE4D,KAAK,EAAGC,MAAM,GAAIgK,OAAO,GAAG,CAAE,CAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACrN,IAAIc,YAAY,GAAGb,MAAM,CAACpJ,aAAa,CAAC,IAAI3E,UAAU,CAAC,IAAI,CAACqB,SAAS,GAAG,eAAe,EAAEqN,aAAa,EAAE;MAAE5J,KAAK,EAAE,aAAa;MAAEjB,KAAK,EAAE;IAAE,CAAC,EAAE,GAAG,EAAE,IAAI5D,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE4D,KAAK,EAAGC,MAAM,GAAIgK,OAAO,GAAG,CAAE,CAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACxM,IAAI,IAAI,CAACtN,KAAK,CAACmO,KAAK,KAAK,UAAU,IAAI,IAAI,CAACnO,KAAK,CAACmO,KAAK,KAAK,cAAc,EAAE;MACxEC,YAAY,CAAC3K,YAAY,CAAC,YAAY,EAAE,iEAAiE,CAAC;IAC9G,CAAC,MACI;MACD2K,YAAY,CAAC3K,YAAY,CAAC,QAAQ,EAAE,oBAAoB,CAAC;IAC7D;IACA,IAAI,CAACsK,eAAe,CAAC9J,WAAW,CAACmK,YAAY,CAAC;IAC9C,IAAIC,WAAW;IACf,IAAIC,OAAO,GAAG,KAAK;IACnB,KAAK,IAAIzF,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI1G,MAAM,EAAE0G,CAAC,EAAE,EAAE;MAC9BwF,WAAW,GAAGjB,YAAY,CAACvE,CAAC,GAAG,CAAC,CAAC;MACjC/H,OAAO,GAAGyM,MAAM,CAACS,WAAW,CAAC;QACzBC,SAAS,EAAE,YAAY,GAAGP,SAAS,GAAG,GAAG,IAAI,IAAI,CAACjN,QAAQ,GAAG6M,OAAO,GAAIA,OAAO,GAAG,CAAE,CAAC,GAAG;MAC5F,CAAC,CAAC;MACF;MACA,QAAQe,WAAW;QACf,KAAK,KAAK;UACNzN,OAAO,CAAC2N,eAAe,CAACzN,OAAO,EAAE,IAAI,CAACiN,eAAe,CAAC;UACtDO,OAAO,GAAG,IAAI;UACd;QACJ,KAAK,MAAM;UACP1N,OAAO,CAAC4N,gBAAgB,CAAC1N,OAAO,EAAE,IAAI,CAACiN,eAAe,CAAC;UACvD;QACJ,KAAK,QAAQ;UACTnN,OAAO,CAAC6N,kBAAkB,CAAC3N,OAAO,EAAE,IAAI,CAACiN,eAAe,EAAE/N,KAAK,CAAC;UAChE;QACJ,KAAK,SAAS;UACVY,OAAO,CAAC8N,mBAAmB,CAAC5N,OAAO,EAAE,IAAI,CAACiN,eAAe,EAAE/N,KAAK,CAAC;UACjE;QACJ,KAAK,OAAO;UACRY,OAAO,CAAC+N,iBAAiB,CAAC7N,OAAO,EAAE,IAAI,CAACiN,eAAe,EAAE/N,KAAK,EAAE,IAAI,CAACS,QAAQ,CAAC;UAC9E;MAAM;MAEdiN,SAAS,IAAIF,QAAQ,GAAIF,OAAO,GAAG,CAAE;IACzC;IACA,IAAI,CAACS,eAAe,CAACtK,YAAY,CAAC,SAAS,EAAE,IAAI,CAAChD,QAAQ,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,CAACS,cAAc,CAAC;IAC5F,IAAI,CAAC6M,eAAe,CAACtK,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC;IACnD,IAAIzD,KAAK,CAAC8D,YAAY,EAAE;MACpB,IAAI8K,OAAO,GAAG7K,QAAQ,CAAC5E,aAAa,CAAC,KAAK,CAAC;MAC3CyP,OAAO,CAAC7N,EAAE,GAAGf,KAAK,CAACc,OAAO,CAACC,EAAE,GAAG,OAAO;MACvC6N,OAAO,CAAC7B,KAAK,CAAC8B,OAAO,GAAG,8BAA8B;MACtD,IAAIC,UAAU,GAAG9O,KAAK,CAAC+O,aAAa,CAACzL,MAAM,GAAG,CAAC;MAC/C,IAAIO,GAAG,GAAG7D,KAAK,CAACkE,WAAW,CAAC8K,SAAS,CAAC;QAClCjO,EAAE,EAAEf,KAAK,CAACc,OAAO,CAACC,EAAE,GAAG,cAAc;QACrCsC,KAAK,EAAErD,KAAK,CAAC+O,aAAa,CAAC1L,KAAK;QAChCC,MAAM,EAAEwL;MACZ,CAAC,CAAC;MACFjL,GAAG,CAACkJ,KAAK,CAACkC,QAAQ,GAAG,UAAU;MAC/BpL,GAAG,CAACI,WAAW,CAAC,IAAI,CAAC8J,eAAe,CAAC;MACrCa,OAAO,CAAC3K,WAAW,CAACJ,GAAG,CAAC;MACxBE,QAAQ,CAACC,cAAc,CAAC,IAAI,CAACnD,SAAS,GAAG,oBAAoB,CAAC,CAACoD,WAAW,CAAC2K,OAAO,CAAC;IACvF,CAAC,MACI;MACD5O,KAAK,CAACwD,SAAS,CAACS,WAAW,CAAC,IAAI,CAAC8J,eAAe,CAAC;IACrD;IACA,IAAI,CAAC,IAAI,CAACtN,QAAQ,EAAE;MAChBxB,YAAY,CAACiQ,GAAG,CAAC,IAAI,CAACnB,eAAe,EAAE,sBAAsB,EAAE,IAAI,CAACoB,eAAe,EAAE,IAAI,CAAC;MAC1FlQ,YAAY,CAACiQ,GAAG,CAAC,IAAI,CAACnB,eAAe,EAAE,qBAAqB,EAAE,IAAI,CAACqB,gBAAgB,EAAE,IAAI,CAAC;MAC1F,IAAI,IAAI,CAAChN,SAAS,IAAIkM,OAAO,EAAE;QAC3B1N,OAAO,CAACyO,GAAG,EAAE;MACjB;IACJ;IACA,OAAO,IAAI;EACf,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACItP,IAAI,CAAC6B,SAAS,CAAC0N,gBAAgB,GAAG,UAAUtP,KAAK,EAAEwE,IAAI,EAAE;IACrD,IAAI+K,WAAW,GAAG,IAAI,CAACC,YAAY,CAAChL,IAAI,CAAC;IACzC,IAAI+K,WAAW,EAAE;MACb,IAAI,CAACpC,kBAAkB,CAACnN,KAAK,CAAC;MAC9B,IAAI,CAACsB,QAAQ,GAAG,IAAI;IACxB,CAAC,MACI,IAAItB,KAAK,CAACW,YAAY,CAAC8O,WAAW,EAAE;MACrC,IAAI,CAACnO,QAAQ,GAAGiO,WAAW;MAC3B,IAAI,CAACpC,kBAAkB,CAACnN,KAAK,CAAC;IAClC,CAAC,MACI;MACD,IAAI,CAACY,OAAO,CAAC8O,aAAa,EAAE;MAC5B,IAAI,CAACtN,SAAS,GAAG,KAAK;MACtB,IAAI,CAACd,QAAQ,GAAG,KAAK;MACrBtB,KAAK,CAACsB,QAAQ,GAAG,KAAK;MACtBtB,KAAK,CAACwD,SAAS,CAACC,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC;IAClD;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACI1D,IAAI,CAAC6B,SAAS,CAAC4N,YAAY,GAAG,UAAUhL,IAAI,EAAE;IAC1C,IAAI+K,WAAW,GAAG,KAAK;IACvB,KAAK,IAAInK,EAAE,GAAG,CAAC,EAAEC,EAAE,GAAGb,IAAI,EAAEY,EAAE,GAAGC,EAAE,CAAClD,MAAM,EAAEiD,EAAE,EAAE,EAAE;MAC9C,IAAIE,IAAI,GAAGD,EAAE,CAACD,EAAE,CAAC;MACjBmK,WAAW,GAAIA,WAAW,IAAKjK,IAAI,CAACG,UAAU,KAAK,CAAC,IAAIH,IAAI,CAACK,YAAY,KAAK,CAAG;IACrF;IACA,OAAO4J,WAAW;EACtB,CAAC;EACDxP,IAAI,CAAC6B,SAAS,CAACuN,eAAe,GAAG,YAAY;IACzC,IAAIrO,OAAO,GAAG,IAAI,CAACiN,eAAe;IAClC,IAAI,CAAC7M,cAAc,GAAG,CAAC;IACvBJ,OAAO,CAAC2C,YAAY,CAAC,SAAS,EAAE,EAAE,GAAG,IAAI,CAACvC,cAAc,CAAC;IACzD,OAAO,KAAK;EAChB,CAAC;EACDnB,IAAI,CAAC6B,SAAS,CAACwN,gBAAgB,GAAG,YAAY;IAC1C,IAAItO,OAAO,GAAG,IAAI,CAACiN,eAAe;IAClC,IAAI,CAAC7M,cAAc,GAAG,GAAG;IACzBJ,OAAO,CAAC2C,YAAY,CAAC,SAAS,EAAE,EAAE,GAAG,IAAI,CAACvC,cAAc,CAAC;IACzD,OAAO,KAAK;EAChB,CAAC;EACD;AACJ;AACA;EACInB,IAAI,CAAC6B,SAAS,CAACpB,gBAAgB,GAAG,YAAY;IAC1C,IAAI,IAAI,CAACR,KAAK,CAAC2P,WAAW,EAAE;MACxB;IACJ;IACA1Q,YAAY,CAACiQ,GAAG,CAAC,IAAI,CAAClP,KAAK,CAACc,OAAO,EAAE,IAAI,CAACR,UAAU,EAAE,IAAI,CAACsP,eAAe,EAAE,IAAI,CAAC;IACjF,IAAI,CAAC5P,KAAK,CAAC6P,EAAE,CAAC3Q,OAAO,CAAC4Q,cAAc,EAAE,IAAI,CAACC,gBAAgB,EAAE,IAAI,CAAC;IAClE,IAAI,CAAC/P,KAAK,CAAC6P,EAAE,CAAC3Q,OAAO,CAAC8Q,eAAe,EAAE,IAAI,CAACC,gBAAgB,EAAE,IAAI,CAAC;IACnE,IAAI,CAACjQ,KAAK,CAAC6P,EAAE,CAAC3Q,OAAO,CAACgR,aAAa,EAAE,IAAI,CAACC,cAAc,EAAE,IAAI,CAAC;IAC/D,IAAI,CAACnQ,KAAK,CAAC6P,EAAE,CAAC,IAAI,CAACtP,WAAW,EAAE,IAAI,CAAC6P,kBAAkB,EAAE,IAAI,CAAC;EAClE,CAAC;EACD;AACJ;AACA;EACIrQ,IAAI,CAAC6B,SAAS,CAACyO,mBAAmB,GAAG,YAAY;IAC7C,IAAI,IAAI,CAACrQ,KAAK,CAAC2P,WAAW,EAAE;MACxB;IACJ;IACA1Q,YAAY,CAACqR,MAAM,CAAC,IAAI,CAACtQ,KAAK,CAACc,OAAO,EAAE,IAAI,CAACR,UAAU,EAAE,IAAI,CAACsP,eAAe,CAAC;IAC9E,IAAI,CAAC5P,KAAK,CAACuQ,GAAG,CAACrR,OAAO,CAAC4Q,cAAc,EAAE,IAAI,CAACC,gBAAgB,CAAC;IAC7D,IAAI,CAAC/P,KAAK,CAACuQ,GAAG,CAACrR,OAAO,CAAC8Q,eAAe,EAAE,IAAI,CAACC,gBAAgB,CAAC;IAC9D,IAAI,CAACjQ,KAAK,CAACuQ,GAAG,CAACrR,OAAO,CAACgR,aAAa,EAAE,IAAI,CAACC,cAAc,CAAC;IAC1D,IAAI,CAACnQ,KAAK,CAACuQ,GAAG,CAAC,IAAI,CAAChQ,WAAW,EAAE,IAAI,CAAC6P,kBAAkB,CAAC;EAC7D,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIrQ,IAAI,CAAC6B,SAAS,CAACgO,eAAe,GAAG,UAAU9N,CAAC,EAAE;IAC1C,IAAI9B,KAAK,GAAG,IAAI,CAACA,KAAK;IACtB,IAAIgF,MAAM,GAAGhF,KAAK,CAACc,OAAO,CAACwI,qBAAqB,EAAE;IAClD,IAAIkH,OAAO,GAAGlR,UAAU,CAACU,KAAK,CAACyQ,KAAK,CAAC,CAACnH,qBAAqB,EAAE;IAC7D,IAAIpG,MAAM,GAAIpB,CAAC,CAAC4O,OAAO,GAAG1L,MAAM,CAAC4E,IAAI,GAAI3D,IAAI,CAACC,GAAG,CAACsK,OAAO,CAAC5G,IAAI,GAAG5E,MAAM,CAAC4E,IAAI,EAAE,CAAC,CAAC;IAChF,IAAIzG,MAAM,GAAIrB,CAAC,CAAC6O,OAAO,GAAG3L,MAAM,CAAC+E,GAAG,GAAI9D,IAAI,CAACC,GAAG,CAACsK,OAAO,CAACzG,GAAG,GAAG/E,MAAM,CAAC+E,GAAG,EAAE,CAAC,CAAC;IAC7E,IAAI,IAAI,CAACrJ,OAAO,CAACkQ,uBAAuB,IACpC9Q,YAAY,CAACoD,MAAM,EAAEC,MAAM,EAAEnD,KAAK,CAAC4C,oBAAoB,CAACC,cAAc,CAAC,EAAE;MACzEf,CAAC,CAAC+O,cAAc,EAAE;MAClB,IAAI,CAAC/H,wBAAwB,CAAChH,CAAC,EAAEoB,MAAM,EAAEC,MAAM,EAAEnD,KAAK,EAAEA,KAAK,CAAC0C,eAAe,CAAC;IAClF;IACA,OAAO,KAAK;EAChB,CAAC;EACD;AACJ;AACA;EACI3C,IAAI,CAAC6B,SAAS,CAACmO,gBAAgB,GAAG,UAAUjO,CAAC,EAAE;IAC3C;IACA,IAAI9B,KAAK,GAAG,IAAI,CAACA,KAAK;IACtB,IAAI8Q,OAAO,GAAG,IAAI;IAClB,IAAIhP,CAAC,CAACiP,IAAI,KAAK,WAAW,EAAE;MACxB,IAAIjP,CAAC,CAAC+O,cAAc,IAAI,IAAI,CAAC1P,KAAK,KAC7B,IAAI,CAACiB,SAAS,IAAKpC,KAAK,CAACiC,WAAY,IAC9B,IAAI,CAACvB,OAAO,CAACsQ,kBAAkB,IAAI,IAAI,CAAC9O,cAAc,CAACC,MAAM,GAAG,CAAE,CAAC,EAAE;QAC7EL,CAAC,CAAC+O,cAAc,EAAE;MACtB;MACAC,OAAO,GAAGhP,CAAC,CAACgP,OAAO;IACvB;IACA,IAAI9Q,KAAK,CAACsC,WAAW,EAAE;MACnB,IAAItC,KAAK,CAAC+B,OAAO,EAAE;QACf,IAAI,CAAC0H,aAAa,GAAG,IAAI,CAACwH,eAAe,CAAC,IAAI,CAACxH,aAAa,EAAE3H,CAAC,EAAEgP,OAAO,CAAC;QACzE,IAAI,IAAI,CAACpQ,OAAO,CAACsQ,kBAAkB,IAAI,IAAI,CAACvH,aAAa,CAACtH,MAAM,GAAG,CAAC,IAC7D,IAAI,CAACD,cAAc,CAACC,MAAM,GAAG,CAAC,EAAE;UACnC,IAAI,CAACiH,mBAAmB,CAACtH,CAAC,EAAE9B,KAAK,CAAC;QACtC;MACJ;MACA,IAAI,CAAC6B,aAAa,CAACC,CAAC,EAAE9B,KAAK,EAAEA,KAAK,CAAC+B,OAAO,CAAC;IAC/C;EACJ,CAAC;EACD;AACJ;AACA;EACIhC,IAAI,CAAC6B,SAAS,CAACqO,gBAAgB,GAAG,UAAUnO,CAAC,EAAE;IAC3C;IACA,IAAI9B,KAAK,GAAG,IAAI,CAACA,KAAK;IACtB,IAAI8Q,OAAO,GAAG,IAAI;IAClB,IAAItO,MAAM;IACV,IAAIV,CAAC,CAACiP,IAAI,KAAK,YAAY,EAAE;MACzBD,OAAO,GAAGhP,CAAC,CAACgP,OAAO;MACnBtO,MAAM,GAAGV,CAAC,CAACU,MAAM;IACrB,CAAC,MACI;MACDA,MAAM,GAAGV,CAAC,CAACU,MAAM;IACrB;IACA,IAAIA,MAAM,CAACzB,EAAE,CAACmQ,OAAO,CAAClR,KAAK,CAACc,OAAO,CAACC,EAAE,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,IACxDjB,YAAY,CAACE,KAAK,CAAC+C,kBAAkB,EAAE/C,KAAK,CAACgD,kBAAkB,EAAEhD,KAAK,CAAC4C,oBAAoB,CAACC,cAAc,CAAC,EAAE;MAC7G7C,KAAK,CAACsC,WAAW,GAAG,IAAI;IAC5B;IACA,IAAItC,KAAK,CAAC+B,OAAO,EAAE;MACf,IAAI,CAACG,cAAc,GAAG,IAAI,CAAC+O,eAAe,CAAC,IAAI,CAAC/O,cAAc,EAAEJ,CAAC,EAAEgP,OAAO,CAAC;IAC/E;EACJ,CAAC;EACD;AACJ;AACA;EACI/Q,IAAI,CAAC6B,SAAS,CAACuO,cAAc,GAAG,UAAUrO,CAAC,EAAE;IACzC,IAAI9B,KAAK,GAAG,IAAI,CAACA,KAAK;IACtB,IAAIoH,iBAAiB,GAAGtF,CAAC,CAACU,MAAM,CAACzB,EAAE,CAACmQ,OAAO,CAAClR,KAAK,CAACc,OAAO,CAACC,EAAE,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,IAC9Ee,CAAC,CAACU,MAAM,CAACzB,EAAE,CAACmQ,OAAO,CAAClR,KAAK,CAACc,OAAO,CAACC,EAAE,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;IAC7D,IAAIf,KAAK,CAACsC,WAAW,IAAI8E,iBAAiB,EAAE;MACxC,IAAI,CAACR,eAAe,CAAC5G,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC;IAC3C;IACA,IAAIA,KAAK,CAAC+B,OAAO,EAAE;MACf,IAAI/B,KAAK,CAACiC,WAAW,IAAInC,YAAY,CAACE,KAAK,CAACkD,MAAM,EAAElD,KAAK,CAACmD,MAAM,EAAEnD,KAAK,CAAC4C,oBAAoB,CAACC,cAAc,CAAC,IACrG,IAAI,CAACX,cAAc,CAACC,MAAM,KAAK,CAAC,IAAI,IAAI,CAACb,QAAQ,EAAE;QACtD,IAAI,CAACV,OAAO,CAACuQ,KAAK,CAACrP,CAAC,CAAC;MACzB;MACA,IAAI,CAACI,cAAc,GAAG,EAAE;MACxBlC,KAAK,CAACiC,WAAW,GAAG,KAAK;IAC7B;EACJ,CAAC;EACD;AACJ;AACA;EACIlC,IAAI,CAAC6B,SAAS,CAACwO,kBAAkB,GAAG,YAAY;IAC5C,IAAI,IAAI,CAAC9O,QAAQ,EAAE;MACf,IAAI,CAAC8F,iBAAiB,CAAC,IAAI,CAACpH,KAAK,CAAC;IACtC;IACA,IAAI,CAACuC,WAAW,GAAG,IAAI;IACvB,IAAI,CAACL,cAAc,GAAG,EAAE;IACxB,IAAI,CAACuH,aAAa,GAAG,EAAE;EAC3B,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACI1J,IAAI,CAAC6B,SAAS,CAACqP,eAAe,GAAG,UAAUG,SAAS,EAAEtP,CAAC,EAAEgP,OAAO,EAAE;IAC9D,IAAIA,OAAO,EAAE;MACTM,SAAS,GAAG,EAAE;MACd,KAAK,IAAIvI,CAAC,GAAG,CAAC,EAAEwI,QAAQ,GAAGP,OAAO,CAAC3O,MAAM,EAAE0G,CAAC,GAAGwI,QAAQ,EAAExI,CAAC,EAAE,EAAE;QAC1DuI,SAAS,CAAChL,IAAI,CAAC;UAAEuD,KAAK,EAAEmH,OAAO,CAACjI,CAAC,CAAC,CAAC6H,OAAO;UAAE5G,KAAK,EAAEgH,OAAO,CAACjI,CAAC,CAAC,CAAC8H,OAAO;UAAEW,SAAS,EAAE;QAAK,CAAC,CAAC;MAC7F;IACJ,CAAC,MACI;MACDF,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAG,EAAE;MACtC,IAAIA,SAAS,CAACjP,MAAM,KAAK,CAAC,EAAE;QACxBiP,SAAS,CAAChL,IAAI,CAAC;UAAEuD,KAAK,EAAE7H,CAAC,CAAC4O,OAAO;UAAE5G,KAAK,EAAEhI,CAAC,CAAC6O,OAAO;UAAEW,SAAS,EAAExP,CAAC,CAACwP;QAAU,CAAC,CAAC;MAClF,CAAC,MACI;QACD,KAAK,IAAIzI,CAAC,GAAG,CAAC,EAAE0I,QAAQ,GAAGH,SAAS,CAACjP,MAAM,EAAE0G,CAAC,GAAG0I,QAAQ,EAAE1I,CAAC,EAAE,EAAE;UAC5D,IAAIuI,SAAS,CAACvI,CAAC,CAAC,CAACyI,SAAS,KAAKxP,CAAC,CAACwP,SAAS,EAAE;YACxCF,SAAS,CAACvI,CAAC,CAAC,GAAG;cAAEc,KAAK,EAAE7H,CAAC,CAAC4O,OAAO;cAAE5G,KAAK,EAAEhI,CAAC,CAAC6O,OAAO;cAAEW,SAAS,EAAExP,CAAC,CAACwP;YAAU,CAAC;UACjF,CAAC,MACI;YACDF,SAAS,CAAChL,IAAI,CAAC;cAAEuD,KAAK,EAAE7H,CAAC,CAAC4O,OAAO;cAAE5G,KAAK,EAAEhI,CAAC,CAAC6O,OAAO;cAAEW,SAAS,EAAExP,CAAC,CAACwP;YAAU,CAAC,CAAC;UAClF;QACJ;MACJ;IACJ;IACA,OAAOF,SAAS;EACpB,CAAC;EACD;AACJ;AACA;EACIrR,IAAI,CAAC6B,SAAS,CAAC4P,aAAa,GAAG,YAAY;IACvC;IACA,OAAO,MAAM;EACjB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIzR,IAAI,CAAC6B,SAAS,CAAC6P,OAAO,GAAG,YAAY;IACjC;IACA,IAAI,CAACpB,mBAAmB,EAAE;EAC9B,CAAC;EACD,OAAOtQ,IAAI;AACf,CAAC,EAAG;AACJ,SAASA,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}