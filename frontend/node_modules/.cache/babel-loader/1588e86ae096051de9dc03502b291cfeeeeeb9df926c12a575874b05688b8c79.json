{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n/* eslint-disable jsdoc/require-returns */\n/* eslint-disable valid-jsdoc */\n/* eslint-disable jsdoc/require-param */\nimport { Series } from '../series/chart-series';\nimport { TechnicalAnalysis } from './indicator-base';\n/**\n * `MacdIndicator` module is used to render MACD indicator.\n */\nvar MacdIndicator = /** @class */function (_super) {\n  __extends(MacdIndicator, _super);\n  function MacdIndicator() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Defines the collection of series to represent the MACD indicator\n   *\n   * @private\n   */\n  MacdIndicator.prototype.initSeriesCollection = function (indicator, chart) {\n    _super.prototype.initSeriesCollection.call(this, indicator, chart);\n    if (indicator.macdType === 'Line' || indicator.macdType === 'Both') {\n      var macdSeries = new Series(indicator, 'targetSeries', {}, true);\n      this.setSeriesProperties(macdSeries, indicator, 'MacdLine', indicator.macdLine.color, indicator.macdLine.width, chart);\n    }\n    if (indicator.macdType === 'Histogram' || indicator.macdType === 'Both') {\n      var histogramSeries = new Series(indicator, 'targetSeries', {}, true);\n      histogramSeries.type = 'Column';\n      this.setSeriesProperties(histogramSeries, indicator, 'Histogram', indicator.macdPositiveColor, indicator.width, chart);\n    }\n  };\n  /**\n   * Defines the predictions using MACD approach\n   *\n   * @private\n   */\n  MacdIndicator.prototype.initDataSource = function (indicator, chart) {\n    var signalCollection = [];\n    var fastPeriod = indicator.fastPeriod;\n    var slowPeriod = indicator.slowPeriod;\n    var trigger = indicator.period;\n    var length = fastPeriod + trigger;\n    var macdCollection = [];\n    var histogramCollection = [];\n    var validData = indicator.points;\n    var signalSeries = indicator.targetSeries[0];\n    var histogramSeries;\n    var macdLineSeries;\n    if (indicator.macdType === 'Histogram') {\n      histogramSeries = indicator.targetSeries[1];\n    } else {\n      macdLineSeries = indicator.targetSeries[1];\n      if (indicator.macdType === 'Both') {\n        histogramSeries = indicator.targetSeries[2];\n      }\n    }\n    if (validData && length < validData.length && slowPeriod <= fastPeriod && slowPeriod > 0 && length - 2 >= 0) {\n      var shortEMA = this.calculateEMAValues(slowPeriod, validData, 'close');\n      var longEMA = this.calculateEMAValues(fastPeriod, validData, 'close');\n      var macdValues = this.getMACDVales(indicator, shortEMA, longEMA);\n      macdCollection = this.getMACDPoints(indicator, macdValues, validData, macdLineSeries || signalSeries);\n      var signalEMA = this.calculateEMAValues(trigger, macdCollection, 'y');\n      signalCollection = this.getSignalPoints(indicator, signalEMA, validData, signalSeries);\n      if (histogramSeries) {\n        histogramCollection = this.getHistogramPoints(indicator, macdValues, signalEMA, validData, histogramSeries);\n      }\n    }\n    this.setSeriesRange(signalCollection, indicator, indicator.targetSeries[0]);\n    if (histogramSeries) {\n      this.setSeriesRange(histogramCollection, indicator, histogramSeries);\n    }\n    if (macdLineSeries) {\n      this.setSeriesRange(macdCollection, indicator, macdLineSeries);\n    }\n  };\n  /**\n   * Calculates the EMA values for the given period\n   */\n  MacdIndicator.prototype.calculateEMAValues = function (period, validData, field) {\n    var sum = 0;\n    var initialEMA = 0;\n    var emaValues = [];\n    var emaPercent = 2 / (period + 1);\n    for (var i = 0; i < period; i++) {\n      sum += Number(validData[i][field]);\n    }\n    initialEMA = sum / period;\n    emaValues.push(initialEMA);\n    var emaAvg = initialEMA;\n    for (var j = period; j < validData.length; j++) {\n      emaAvg = (Number(validData[j][field]) - emaAvg) * emaPercent + emaAvg;\n      emaValues.push(emaAvg);\n    }\n    return emaValues;\n  };\n  /**\n   * Defines the MACD Points\n   */\n  MacdIndicator.prototype.getMACDPoints = function (indicator, macdPoints, validData, series) {\n    var macdCollection = [];\n    var dataMACDIndex = indicator.fastPeriod - 1;\n    var macdIndex = 0;\n    while (dataMACDIndex < validData.length) {\n      macdCollection.push(this.getDataPoint(validData[dataMACDIndex].x, macdPoints[macdIndex], validData[dataMACDIndex], series, macdCollection.length));\n      dataMACDIndex++;\n      macdIndex++;\n    }\n    return macdCollection;\n  };\n  /**\n   * Calculates the signal points\n   */\n  MacdIndicator.prototype.getSignalPoints = function (indicator, signalEma, validData, series) {\n    var dataSignalIndex = indicator.fastPeriod + indicator.period - 2;\n    var signalIndex = 0;\n    var signalCollection = [];\n    while (dataSignalIndex < validData.length) {\n      signalCollection.push(this.getDataPoint(validData[dataSignalIndex].x, signalEma[signalIndex], validData[dataSignalIndex], series, signalCollection.length));\n      dataSignalIndex++;\n      signalIndex++;\n    }\n    return signalCollection;\n  };\n  /**\n   * Calculates the MACD values\n   */\n  MacdIndicator.prototype.getMACDVales = function (indicator, shortEma, longEma) {\n    var macdPoints = [];\n    var diff = indicator.fastPeriod - indicator.slowPeriod;\n    for (var i = 0; i < longEma.length; i++) {\n      macdPoints.push(shortEma[i + diff] - longEma[i]);\n    }\n    return macdPoints;\n  };\n  /**\n   * Calculates the Histogram Points\n   */\n  MacdIndicator.prototype.getHistogramPoints = function (indicator, macdPoints, signalEma, validData, series) {\n    var dataHistogramIndex = indicator.fastPeriod + indicator.period - 2;\n    var histogramIndex = 0;\n    var histogramCollection = [];\n    while (dataHistogramIndex < validData.length) {\n      histogramCollection.push(this.getDataPoint(validData[dataHistogramIndex].x, macdPoints[histogramIndex + (indicator.period - 1)] - signalEma[histogramIndex], validData[dataHistogramIndex], series, histogramCollection.length, indicator));\n      dataHistogramIndex++;\n      histogramIndex++;\n    }\n    return histogramCollection;\n  };\n  /**\n   * To destroy the MACD Indicator.\n   *\n   * @returns {void}\n   * @private\n   */\n  MacdIndicator.prototype.destroy = function () {\n    /**\n     * Destroys the MACD indicator\n     */\n  };\n  /**\n   * Get module name.\n   */\n  MacdIndicator.prototype.getModuleName = function () {\n    /**\n     * Returns the module name of the series\n     */\n    return 'MacdIndicator';\n  };\n  return MacdIndicator;\n}(TechnicalAnalysis);\nexport { MacdIndicator };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Series","TechnicalAnalysis","MacdIndicator","_super","apply","arguments","initSeriesCollection","indicator","chart","call","macdType","macdSeries","setSeriesProperties","macdLine","color","width","histogramSeries","type","macdPositiveColor","initDataSource","signalCollection","fastPeriod","slowPeriod","trigger","period","length","macdCollection","histogramCollection","validData","points","signalSeries","targetSeries","macdLineSeries","shortEMA","calculateEMAValues","longEMA","macdValues","getMACDVales","getMACDPoints","signalEMA","getSignalPoints","getHistogramPoints","setSeriesRange","field","sum","initialEMA","emaValues","emaPercent","i","Number","push","emaAvg","j","macdPoints","series","dataMACDIndex","macdIndex","getDataPoint","x","signalEma","dataSignalIndex","signalIndex","shortEma","longEma","diff","dataHistogramIndex","histogramIndex","destroy","getModuleName"],"sources":["/Users/thonghoangdanh/FullStack/birdnest/node_modules/@syncfusion/ej2-charts/src/chart/technical-indicators/macd-indicator.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n/* eslint-disable jsdoc/require-returns */\n/* eslint-disable valid-jsdoc */\n/* eslint-disable jsdoc/require-param */\nimport { Series } from '../series/chart-series';\nimport { TechnicalAnalysis } from './indicator-base';\n/**\n * `MacdIndicator` module is used to render MACD indicator.\n */\nvar MacdIndicator = /** @class */ (function (_super) {\n    __extends(MacdIndicator, _super);\n    function MacdIndicator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Defines the collection of series to represent the MACD indicator\n     *\n     * @private\n     */\n    MacdIndicator.prototype.initSeriesCollection = function (indicator, chart) {\n        _super.prototype.initSeriesCollection.call(this, indicator, chart);\n        if (indicator.macdType === 'Line' || indicator.macdType === 'Both') {\n            var macdSeries = new Series(indicator, 'targetSeries', {}, true);\n            this.setSeriesProperties(macdSeries, indicator, 'MacdLine', indicator.macdLine.color, indicator.macdLine.width, chart);\n        }\n        if (indicator.macdType === 'Histogram' || indicator.macdType === 'Both') {\n            var histogramSeries = new Series(indicator, 'targetSeries', {}, true);\n            histogramSeries.type = 'Column';\n            this.setSeriesProperties(histogramSeries, indicator, 'Histogram', indicator.macdPositiveColor, indicator.width, chart);\n        }\n    };\n    /**\n     * Defines the predictions using MACD approach\n     *\n     * @private\n     */\n    MacdIndicator.prototype.initDataSource = function (indicator, chart) {\n        var signalCollection = [];\n        var fastPeriod = indicator.fastPeriod;\n        var slowPeriod = indicator.slowPeriod;\n        var trigger = indicator.period;\n        var length = fastPeriod + trigger;\n        var macdCollection = [];\n        var histogramCollection = [];\n        var validData = indicator.points;\n        var signalSeries = indicator.targetSeries[0];\n        var histogramSeries;\n        var macdLineSeries;\n        if (indicator.macdType === 'Histogram') {\n            histogramSeries = indicator.targetSeries[1];\n        }\n        else {\n            macdLineSeries = indicator.targetSeries[1];\n            if (indicator.macdType === 'Both') {\n                histogramSeries = indicator.targetSeries[2];\n            }\n        }\n        if (validData && length < validData.length && slowPeriod <= fastPeriod &&\n            slowPeriod > 0 && (length - 2) >= 0) {\n            var shortEMA = this.calculateEMAValues(slowPeriod, validData, 'close');\n            var longEMA = this.calculateEMAValues(fastPeriod, validData, 'close');\n            var macdValues = this.getMACDVales(indicator, shortEMA, longEMA);\n            macdCollection = this.getMACDPoints(indicator, macdValues, validData, macdLineSeries || signalSeries);\n            var signalEMA = this.calculateEMAValues(trigger, macdCollection, 'y');\n            signalCollection = this.getSignalPoints(indicator, signalEMA, validData, signalSeries);\n            if (histogramSeries) {\n                histogramCollection = this.getHistogramPoints(indicator, macdValues, signalEMA, validData, histogramSeries);\n            }\n        }\n        this.setSeriesRange(signalCollection, indicator, indicator.targetSeries[0]);\n        if (histogramSeries) {\n            this.setSeriesRange(histogramCollection, indicator, histogramSeries);\n        }\n        if (macdLineSeries) {\n            this.setSeriesRange(macdCollection, indicator, macdLineSeries);\n        }\n    };\n    /**\n     * Calculates the EMA values for the given period\n     */\n    MacdIndicator.prototype.calculateEMAValues = function (period, validData, field) {\n        var sum = 0;\n        var initialEMA = 0;\n        var emaValues = [];\n        var emaPercent = (2 / (period + 1));\n        for (var i = 0; i < period; i++) {\n            sum += Number(validData[i][field]);\n        }\n        initialEMA = (sum / period);\n        emaValues.push(initialEMA);\n        var emaAvg = initialEMA;\n        for (var j = period; j < validData.length; j++) {\n            emaAvg = (Number(validData[j][field]) - emaAvg) * emaPercent + emaAvg;\n            emaValues.push(emaAvg);\n        }\n        return emaValues;\n    };\n    /**\n     * Defines the MACD Points\n     */\n    MacdIndicator.prototype.getMACDPoints = function (indicator, macdPoints, validData, series) {\n        var macdCollection = [];\n        var dataMACDIndex = indicator.fastPeriod - 1;\n        var macdIndex = 0;\n        while (dataMACDIndex < validData.length) {\n            macdCollection.push(this.getDataPoint(validData[dataMACDIndex].x, macdPoints[macdIndex], validData[dataMACDIndex], series, macdCollection.length));\n            dataMACDIndex++;\n            macdIndex++;\n        }\n        return macdCollection;\n    };\n    /**\n     * Calculates the signal points\n     */\n    MacdIndicator.prototype.getSignalPoints = function (indicator, signalEma, validData, series) {\n        var dataSignalIndex = indicator.fastPeriod + indicator.period - 2;\n        var signalIndex = 0;\n        var signalCollection = [];\n        while (dataSignalIndex < validData.length) {\n            signalCollection.push(this.getDataPoint(validData[dataSignalIndex].x, signalEma[signalIndex], validData[dataSignalIndex], series, signalCollection.length));\n            dataSignalIndex++;\n            signalIndex++;\n        }\n        return signalCollection;\n    };\n    /**\n     * Calculates the MACD values\n     */\n    MacdIndicator.prototype.getMACDVales = function (indicator, shortEma, longEma) {\n        var macdPoints = [];\n        var diff = indicator.fastPeriod - indicator.slowPeriod;\n        for (var i = 0; i < longEma.length; i++) {\n            macdPoints.push((shortEma[i + diff] - longEma[i]));\n        }\n        return macdPoints;\n    };\n    /**\n     * Calculates the Histogram Points\n     */\n    MacdIndicator.prototype.getHistogramPoints = function (indicator, macdPoints, signalEma, validData, series) {\n        var dataHistogramIndex = indicator.fastPeriod + indicator.period - 2;\n        var histogramIndex = 0;\n        var histogramCollection = [];\n        while (dataHistogramIndex < validData.length) {\n            histogramCollection.push(this.getDataPoint(validData[dataHistogramIndex].x, macdPoints[histogramIndex + (indicator.period - 1)] - signalEma[histogramIndex], validData[dataHistogramIndex], series, histogramCollection.length, indicator));\n            dataHistogramIndex++;\n            histogramIndex++;\n        }\n        return histogramCollection;\n    };\n    /**\n     * To destroy the MACD Indicator.\n     *\n     * @returns {void}\n     * @private\n     */\n    MacdIndicator.prototype.destroy = function () {\n        /**\n         * Destroys the MACD indicator\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MacdIndicator.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the series\n         */\n        return 'MacdIndicator';\n    };\n    return MacdIndicator;\n}(TechnicalAnalysis));\nexport { MacdIndicator };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}