{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { valueToCoefficient, inside, isOverlap, textTrim } from '../../common/utils/helper';\nimport { appendChildElement } from '../../common/utils/helper';\nimport { CircleOption } from '../../common/utils/helper';\nimport { Size, measureText, TextOption, PathOption, Rect } from '@syncfusion/ej2-svg-base';\nimport { LineBase } from '../series/line-base';\nimport { textElement, ChartLocation, valueToPolarCoefficient, CoefficientToVector, getElement } from '../../common/utils/helper';\n/**\n * Specifies the Polar Axis Layout.\n */\nvar PolarRadarPanel = /** @class */function (_super) {\n  __extends(PolarRadarPanel, _super);\n  function PolarRadarPanel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** @private */\n    _this.visibleAxisLabelRect = [];\n    return _this;\n  }\n  /**\n   * Measure the polar radar axis size.\n   *\n   * @returns {void}\n   * @private\n   */\n  PolarRadarPanel.prototype.measureAxis = function (rect) {\n    var chart = this.chart;\n    this.initialClipRect = rect;\n    this.seriesClipRect = new Rect(rect.x, rect.y, rect.width, rect.height);\n    //Measure axis size calculation\n    this.measureRowAxis(chart, this.initialClipRect);\n    this.measureColumnAxis(chart, this.initialClipRect);\n    this.calculateAxisSize();\n  };\n  PolarRadarPanel.prototype.measureRowAxis = function (chart, rect) {\n    this.calculateRowSize(rect);\n    var row = chart.rows[0];\n    this.measureDefinition(row, chart, new Size(chart.availableSize.width, row.computedHeight));\n  };\n  PolarRadarPanel.prototype.measureColumnAxis = function (chart, rect) {\n    this.calculateColumnSize(rect);\n    var column = chart.columns[0];\n    this.measureDefinition(column, chart, new Size(column.computedWidth, chart.availableSize.height));\n  };\n  /**\n   * Measure the column and row in chart.\n   *\n   * @returns {void}\n   * @private\n   */\n  PolarRadarPanel.prototype.measureDefinition = function (definition, chart, size) {\n    for (var _i = 0, _a = definition.axes; _i < _a.length; _i++) {\n      var axis = _a[_i];\n      axis.getModule(chart);\n      axis.baseModule.calculateRangeAndInterval(size, axis);\n    }\n  };\n  /**\n   * Measure the axis.\n   *\n   * @returns {void}\n   * @private\n   */\n  PolarRadarPanel.prototype.calculateAxisSize = function () {\n    var chart = this.chart;\n    var axis;\n    var padding = 5;\n    this.centerX = this.initialClipRect.width * 0.5 + this.initialClipRect.x;\n    this.centerY = this.initialClipRect.height * 0.5 + this.initialClipRect.y;\n    chart.radius = Math.min(this.initialClipRect.width, this.initialClipRect.height) / 2 - padding - chart.primaryXAxis.majorTickLines.height - chart.primaryXAxis.maxLabelSize.height;\n    chart.radius = chart.primaryXAxis.coefficient * chart.radius / 100;\n    this.seriesClipRect.y = this.centerY - chart.radius;\n    this.seriesClipRect.x = this.centerX - chart.radius;\n    this.seriesClipRect.height = 2 * chart.radius;\n    this.seriesClipRect.width = 2 * chart.radius;\n    this.calculateRowSize(this.seriesClipRect);\n    axis = chart.primaryYAxis;\n    axis.rect = this.seriesClipRect;\n    this.calculateColumnSize(this.seriesClipRect);\n    axis = chart.primaryXAxis;\n    axis.rect = this.seriesClipRect;\n  };\n  /**\n   * Measure the axis.\n   *\n   * @returns {void}\n   * @private\n   */\n  PolarRadarPanel.prototype.measure = function () {\n    var chart = this.chart;\n    var yAxis = chart.primaryYAxis;\n    yAxis.isRTLEnabled = chart.enableRtl;\n    yAxis.setIsInversedAndOpposedPosition(true);\n    chart.verticalAxes.push(yAxis);\n    var row = chart.rows[0];\n    row.axes[0] = yAxis;\n    chart.rows[0] = row;\n    var xAxis = chart.primaryXAxis;\n    xAxis.isRTLEnabled = chart.enableRtl;\n    xAxis.setIsInversedAndOpposedPosition(true);\n    chart.horizontalAxes.push(xAxis);\n    var column = chart.columns[0];\n    column.axes[0] = xAxis;\n    chart.columns[0] = column;\n  };\n  /**\n   * Measure the row size.\n   *\n   * @returns {void}\n   */\n  PolarRadarPanel.prototype.calculateRowSize = function (rect) {\n    /*! Calculate row size */\n    var chart = this.chart;\n    var row = chart.rows[0];\n    row.computedHeight = rect.height / 2;\n    row.computedTop = rect.y;\n    chart.rows[0] = row;\n  };\n  /**\n   * Measure the row size.\n   *\n   * @returns {void}\n   */\n  PolarRadarPanel.prototype.calculateColumnSize = function (rect) {\n    /*! Calculate column size */\n    var chart = this.chart;\n    var column = chart.columns[0];\n    column.computedLeft = rect.x;\n    column.computedWidth = rect.width;\n    chart.columns[0] = column;\n  };\n  /**\n   * To render the axis element.\n   *\n   * @returns {void}\n   * @private\n   */\n  PolarRadarPanel.prototype.renderAxes = function () {\n    var axis;\n    var chart = this.chart;\n    this.startAngle = chart.primaryXAxis.startAngle;\n    var axisElement = chart.renderer.createGroup({\n      id: chart.element.id + 'AxisCollection'\n    });\n    var axisLineElement = chart.renderer.createGroup({\n      id: chart.element.id + 'AxisOutsideCollection'\n    });\n    for (var i = 0, len = chart.axisCollections.length; i < len; i++) {\n      this.element = chart.renderer.createGroup({\n        id: chart.element.id + 'AxisGroup' + i\n      });\n      axis = chart.axisCollections[i];\n      if (axis.orientation === 'Horizontal') {\n        if (axis.majorGridLines.width > 0 || axis.majorTickLines.width > 0) {\n          this.drawXAxisGridLine(axis, i);\n        }\n        if (axis.visible && axis.internalVisibility) {\n          this.drawXAxisLabels(axis, i);\n        }\n      } else {\n        this.drawYAxisGridLine(axis, i);\n        if (axis.lineStyle.width > 0) {\n          this.drawYAxisLine(axis, i);\n        }\n        if (axis.visible && axis.internalVisibility) {\n          this.drawYAxisLabels(axis, i);\n        }\n      }\n      if (!this.chart.enableCanvas) {\n        axisElement.appendChild(this.element);\n      }\n    }\n    if (!this.chart.enableCanvas) {\n      axisElement.appendChild(this.element);\n    }\n    appendChildElement(chart.enableCanvas, chart.svgObject, axisElement, chart.redraw);\n    return axisLineElement;\n  };\n  PolarRadarPanel.prototype.drawYAxisLine = function (axis, index) {\n    var chart = this.chart;\n    var optionsLine = {};\n    var vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[0].value, axis), this.startAngle);\n    var axisLine = 'M ' + this.centerX + ' ' + this.centerY + 'L ' + (this.centerX + chart.radius * vector.x) + ' ' + (this.centerY + chart.radius * vector.y);\n    optionsLine = {\n      'id': chart.element.id + 'AxisLine_' + index,\n      'd': axisLine,\n      'stroke-dasharray': axis.lineStyle.dashArray,\n      'stroke-width': axis.lineStyle.width,\n      'stroke': axis.lineStyle.color || chart.themeStyle.axisLine\n    };\n    /**\n     * I252450\n     * When we click the center of the marker which is plotted in the axis line, selection did not work is fixed\n     * Cause: Instead of marker id, axis  line id is obtained while clicking\n     * Fix: Pointer events set to none for axis lines\n     */\n    var element = chart.renderer.drawPath(optionsLine);\n    this.setPointerEventNone(element);\n    if (!this.chart.enableCanvas) {\n      chart.yAxisElements.appendChild(element);\n    }\n  };\n  PolarRadarPanel.prototype.drawYAxisLabels = function (axis, index) {\n    var chart = this.chart;\n    var elementSize;\n    var options;\n    var pointX = 0;\n    var pointY = 0;\n    var angle = this.startAngle < 0 ? this.startAngle + 360 : this.startAngle;\n    var anchor = 'middle';\n    var radius;\n    var padding = 5;\n    var isIntersect;\n    var labelRegions = [];\n    var isLabelVisible = [];\n    isLabelVisible[0] = true;\n    var intersectType = axis.labelIntersectAction;\n    var labelElement = chart.renderer.createGroup({\n      id: chart.element.id + 'AxisLabels' + index\n    });\n    var vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[0].value, axis), this.startAngle);\n    for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\n      isIntersect = false;\n      radius = chart.radius * valueToCoefficient(axis.visibleLabels[i].value, axis);\n      elementSize = axis.visibleLabels[i].size;\n      radius = chart.radius * valueToCoefficient(axis.visibleLabels[i].value, axis);\n      pointX = this.centerX + radius * vector.x + (axis.majorTickLines.height + elementSize.width / 2 + padding / 2) * Math.cos(angle * Math.PI / 180) * (axis.labelPosition === 'Inside' ? 1 : -1);\n      pointY = this.centerY + radius * vector.y + (axis.majorTickLines.height + elementSize.height / 2) * Math.sin(angle * Math.PI / 180) * (axis.labelPosition === 'Inside' ? 1 : -1);\n      pointY += elementSize.height / 4;\n      labelRegions[i] = this.getLabelRegion(pointX, pointY, axis.visibleLabels[i], anchor);\n      if (i !== 0 && intersectType === 'Hide') {\n        for (var j = i; j >= 0; j--) {\n          j = j === 0 ? 0 : j === i ? j - 1 : j;\n          if (isLabelVisible[j] && isOverlap(labelRegions[i], labelRegions[j])) {\n            isIntersect = true;\n            isLabelVisible[i] = false;\n            break;\n          } else {\n            isLabelVisible[i] = true;\n          }\n        }\n        if (isIntersect) {\n          continue; // If the label is intersect, the label render is ignored.\n        }\n        // To check Y axis label with visible X axis label\n        for (var _i = 0, _a = this.visibleAxisLabelRect; _i < _a.length; _i++) {\n          var rect = _a[_i];\n          if (isOverlap(labelRegions[i], rect)) {\n            isIntersect = true;\n            break;\n          }\n        }\n      }\n      if (isIntersect) {\n        continue;\n      }\n      this.visibleAxisLabelRect.push(labelRegions[i]);\n      options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY, anchor, axis.visibleLabels[i].text);\n      textElement(chart.renderer, options, axis.labelStyle, axis.labelStyle.color || chart.themeStyle.axisLabel, labelElement, false, chart.redraw, true, true, null, null, null, null, chart.enableCanvas);\n    }\n    if (!this.chart.enableCanvas) {\n      chart.yAxisElements.appendChild(labelElement);\n    }\n  };\n  PolarRadarPanel.prototype.drawYAxisGridLine = function (axis, index) {\n    var chart = this.chart;\n    var options;\n    var radius;\n    var majorTick = '';\n    var majorGrid = '';\n    var vector;\n    var angle = this.startAngle < 0 ? this.startAngle + 360 : this.startAngle;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var border = {\n      color: axis.majorGridLines.color || chart.themeStyle.majorGridLine,\n      width: axis.majorGridLines.width\n    };\n    var previousValue;\n    var element;\n    if (axis.majorGridLines.width > 0) {\n      if (chart.visibleSeries[0].type === 'Polar') {\n        for (var j = 0; j < axis.visibleLabels.length; j++) {\n          element = getElement(chart.element.id + '_MajorGridLine_' + index + '_' + j);\n          previousValue = element ? element.getAttribute('r') : null;\n          radius = chart.radius * valueToCoefficient(axis.visibleLabels[j].value, axis);\n          options = new CircleOption(chart.element.id + '_MajorGridLine_' + index + '_' + j, 'transparent', border, axis.majorGridLines.width, this.centerX, this.centerY, radius);\n          appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawCircle(options), chart.redraw, true, 'r', 'r', new ChartLocation(+previousValue, +previousValue), null, true);\n        }\n        if (radius !== chart.radius) {\n          options = new CircleOption(chart.element.id + '_MajorGridLine_' + index + '_' + axis.visibleLabels.length + 1, 'transparent', border, axis.majorGridLines.width, this.centerX, this.centerY, chart.radius);\n          appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawCircle(options), chart.redraw, true, 'r', 'r', new ChartLocation(+previousValue, +previousValue), null, true);\n        }\n      } else {\n        for (var j = 0; j < axis.visibleLabels.length; j++) {\n          radius = chart.radius * valueToCoefficient(axis.visibleLabels[j].value, axis);\n          majorGrid = this.renderRadarGrid(radius, '', chart);\n          element = getElement(chart.element.id + '_MajorGridLine_' + index + '_' + j);\n          previousValue = element ? element.getAttribute('d') : null;\n          options = new PathOption(chart.element.id + '_MajorGridLine_' + index + '_' + j, 'transparent', axis.majorGridLines.width, axis.majorGridLines.color || chart.themeStyle.majorGridLine, null, null, majorGrid);\n          appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawPath(options), chart.redraw, true, 'x', 'y', null, previousValue, true);\n        }\n        if (radius !== chart.radius) {\n          majorGrid = this.renderRadarGrid(chart.radius, '', chart);\n          element = getElement(chart.element.id + '_MajorGridLine_' + index + '_' + axis.visibleLabels.length);\n          previousValue = element ? element.getAttribute('d') : null;\n          options = new PathOption(chart.element.id + '_MajorGridLine_' + index + '_' + axis.visibleLabels.length, 'transparent', axis.majorGridLines.width, axis.majorGridLines.color || chart.themeStyle.majorGridLine, null, null, majorGrid);\n          appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawPath(options), chart.redraw, true, 'x', 'y', null, previousValue, true);\n        }\n      }\n    }\n    if (axis.majorTickLines.width > 0) {\n      vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[0].value, axis), this.startAngle);\n      for (var i = 0; i < axis.visibleLabels.length; i++) {\n        radius = chart.radius * valueToCoefficient(axis.visibleLabels[i].value, axis);\n        x1 = this.centerX + radius * vector.x;\n        y1 = this.centerY + radius * vector.y;\n        x2 = x1 + axis.majorTickLines.height * Math.cos(angle * Math.PI / 180) * (axis.tickPosition === 'Inside' ? 1 : -1);\n        y2 = y1 + axis.majorTickLines.height * Math.sin(angle * Math.PI / 180) * (axis.tickPosition === 'Inside' ? 1 : -1);\n        majorTick = 'M ' + x1 + ' ' + y1 + ' L ' + x2 + ' ' + y2;\n        this.renderTickLine(axis, index, majorTick, '', i);\n      }\n    }\n  };\n  PolarRadarPanel.prototype.renderRadarGrid = function (radius, majorGrid, chart) {\n    var vector;\n    var vector2;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    for (var i = 0, len = chart.primaryXAxis.visibleLabels.length; i < len; i++) {\n      vector = CoefficientToVector(valueToPolarCoefficient(chart.primaryXAxis.visibleLabels[i].value, chart.primaryXAxis), this.startAngle);\n      if (i + 1 < len) {\n        vector2 = CoefficientToVector(valueToPolarCoefficient(chart.primaryXAxis.visibleLabels[i + 1].value, chart.primaryXAxis), this.startAngle);\n      } else {\n        vector2 = CoefficientToVector(valueToPolarCoefficient(chart.primaryXAxis.visibleLabels[0].value, chart.primaryXAxis), this.startAngle);\n      }\n      x1 = this.centerX + radius * vector.x;\n      y1 = this.centerY + radius * vector.y;\n      x2 = this.centerX + radius * vector2.x;\n      y2 = this.centerY + radius * vector2.y;\n      majorGrid = majorGrid.concat((i ? 'L ' : 'M ') + x1 + ' ' + y1 + ' ' + 'L ' + x2 + ' ' + y2 + ' ');\n    }\n    return majorGrid;\n  };\n  PolarRadarPanel.prototype.drawXAxisGridLine = function (axis, index) {\n    var chart = this.chart;\n    var tempInterval;\n    var vector;\n    var majorGrid = '';\n    var majorTick = '';\n    var minorGirdLine = '';\n    var minorTickLine = '';\n    var x1 = this.centerX;\n    var x2;\n    var y1 = this.centerY;\n    var y2;\n    var minorDirection;\n    var length = axis.visibleLabels.length;\n    //Gridlines\n    for (var i = 0; i < length; i++) {\n      tempInterval = axis.visibleLabels[i].value;\n      vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[i].value, axis), this.startAngle);\n      x2 = this.centerX + chart.radius * vector.x;\n      y2 = this.centerY + chart.radius * vector.y;\n      var xLoc = x2 + axis.majorTickLines.height * vector.x * (axis.tickPosition === 'Inside' ? -1 : 1);\n      var yLoc = y2 + axis.majorTickLines.height * vector.y * (axis.tickPosition === 'Inside' ? -1 : 1);\n      majorGrid = 'M ' + x1 + ' ' + y1 + ' ' + 'L ' + x2 + ' ' + y2;\n      majorTick = 'M ' + x2 + ' ' + y2 + ' L ' + xLoc + ' ' + yLoc;\n      if (axis.minorTicksPerInterval > 0 && (axis.minorGridLines.width > 0 || axis.minorTickLines.width > 0) && axis.valueType !== 'Category' && chart.visibleSeries[0].type !== 'Radar') {\n        minorDirection = this.drawAxisMinorLine(axis, tempInterval, minorGirdLine, minorTickLine);\n        minorGirdLine = minorDirection[0];\n        minorTickLine = minorDirection[1];\n      }\n      this.renderTickLine(axis, index, majorTick, minorTickLine, i);\n      this.renderGridLine(axis, index, majorGrid, minorGirdLine, i);\n    }\n  };\n  PolarRadarPanel.prototype.drawAxisMinorLine = function (axis, tempInterval, minorGird, minorTick) {\n    var value = tempInterval;\n    var x;\n    var y;\n    var vector;\n    var range = axis.visibleRange;\n    var direction = [];\n    for (var j = 0; j < axis.minorTicksPerInterval; j++) {\n      value += (axis.valueType === 'DateTime' ? axis.dateTimeInterval : axis.visibleRange.interval) / (axis.minorTicksPerInterval + 1);\n      if (inside(value, range)) {\n        vector = CoefficientToVector(valueToPolarCoefficient(value, axis), this.startAngle);\n        x = this.centerX + this.chart.radius * vector.x;\n        y = this.centerY + this.chart.radius * vector.y;\n        var tickXSize = x + axis.minorTickLines.height * vector.x * (axis.tickPosition === 'Inside' ? -1 : 1);\n        var tickYSize = y + axis.minorTickLines.height * vector.y * (axis.tickPosition === 'Inside' ? -1 : 1);\n        minorGird = minorGird.concat('M' + ' ' + this.centerX + ' ' + this.centerY + 'L ' + x + ' ' + y);\n        minorTick = minorTick.concat('M' + ' ' + x + ' ' + y + 'L' + ' ' + tickXSize + ' ' + tickYSize);\n      }\n    }\n    direction.push(minorGird);\n    direction.push(minorTick);\n    return direction;\n  };\n  /**\n   * To render the axis label.\n   *\n   * @param {Axis} axis axis\n   * @param {number} index index\n   * @returns {void}\n   * @private\n   */\n  PolarRadarPanel.prototype.drawXAxisLabels = function (axis, index) {\n    this.visibleAxisLabelRect = [];\n    var legendRect;\n    if (this.chart.legendModule) {\n      legendRect = this.chart.legendModule.legendBounds;\n    }\n    var chart = this.chart;\n    var pointX = 0;\n    var pointY = 0;\n    var labelElement = chart.renderer.createGroup({\n      id: chart.element.id + 'AxisLabels' + index\n    });\n    var options;\n    var vector;\n    var labelText;\n    var firstLabelX;\n    var islabelInside = axis.labelPosition === 'Inside';\n    var padding = 5;\n    var lastLabelX;\n    var label;\n    var textAnchor = '';\n    var isIntersect;\n    var labelRegions = [];\n    var isLabelVisible = [];\n    isLabelVisible[0] = true;\n    var intersectType = axis.labelIntersectAction;\n    var ticksbwtLabel = axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks' ? 0.5 : 0;\n    var radius = chart.radius + axis.majorTickLines.height;\n    radius = islabelInside ? -radius : radius;\n    for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\n      isIntersect = false;\n      vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[i].value + ticksbwtLabel, axis), this.startAngle);\n      if (!isNaN(vector.x) && !isNaN(vector.y)) {\n        pointX = this.centerX + (radius + axis.majorTickLines.height + padding) * vector.x;\n        pointY = this.centerY + (radius + axis.majorTickLines.height + padding) * vector.y;\n        textAnchor = parseFloat(pointX.toFixed(1)) === parseFloat(this.centerX.toFixed(1)) ? 'middle' : pointX < this.centerX && !islabelInside || pointX > this.centerX && islabelInside ? 'end' : 'start';\n      }\n      label = axis.visibleLabels[i];\n      labelText = label.text;\n      // to trim axis labels based on available size\n      if (axis.enableTrim || intersectType === 'Trim') {\n        var originalText = axis.visibleLabels[i].originalText;\n        var trimText = void 0;\n        var size = void 0;\n        var labelPosition = axis.labelPosition;\n        var chartWidth = chart.availableSize.width;\n        var textLength = originalText.length;\n        for (var i_1 = textLength - 1; i_1 >= 0; --i_1) {\n          trimText = originalText.substring(0, i_1) + '...';\n          size = measureText(trimText, axis.labelStyle).width;\n          if (pointX === chartWidth / 2 ? pointX - size / 2 >= 0 && pointX + size / 2 <= chartWidth : labelPosition === 'Outside' && (pointX >= chartWidth / 2 && pointX + size <= chartWidth || pointX <= chartWidth / 2 && pointX - size >= 0) || labelPosition === 'Inside' && (pointX + size <= chartWidth / 2 || pointX - size >= chartWidth / 2)) {\n            labelText = i_1 === textLength - 1 ? originalText : trimText;\n            label.size.width = measureText(labelText, axis.labelStyle).width;\n            label.text = labelText;\n            break;\n          }\n        }\n      }\n      // fix for label style not working in axisLabelRender event issue\n      labelRegions[i] = this.getLabelRegion(pointX, pointY, label, textAnchor);\n      if (i === 0) {\n        firstLabelX = pointX;\n      } else if (i === axis.visibleLabels.length - 1 && axis.valueType !== 'Category') {\n        lastLabelX = measureText(labelText, axis.labelStyle).height;\n        lastLabelX += pointX;\n        labelText = lastLabelX > firstLabelX ? '' : labelText;\n      }\n      // Label intersect action (Hide) perform here\n      if (i !== 0 && intersectType === 'Hide') {\n        for (var j = i; j >= 0; j--) {\n          j = j === 0 ? 0 : j === i ? j - 1 : j;\n          if (isLabelVisible[j] && isOverlap(labelRegions[i], labelRegions[j])) {\n            isIntersect = true;\n            isLabelVisible[i] = false;\n            break;\n          } else {\n            isLabelVisible[i] = true;\n          }\n        }\n      }\n      if (!isIntersect && legendRect) {\n        isIntersect = isOverlap(labelRegions[i], legendRect);\n        if (isIntersect) {\n          var width = this.getAvailableSpaceToTrim(legendRect, labelRegions[i]);\n          if (width > 0) {\n            labelText = textTrim(width, axis.visibleLabels[i].originalText, axis.labelStyle);\n            isIntersect = false;\n          }\n        }\n      }\n      options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY, !chart.enableRtl ? textAnchor : textAnchor == 'end' ? 'start' : textAnchor == 'start' ? 'end' : textAnchor, labelText, '', 'central');\n      if (isIntersect) {\n        continue; // If the label is intersect, the label render is ignored.\n      }\n\n      this.visibleAxisLabelRect.push(labelRegions[i]);\n      textElement(chart.renderer, options, label.labelStyle, label.labelStyle.color || chart.themeStyle.axisLabel, labelElement, false, chart.redraw, true, true, null, null, null, null, chart.enableCanvas);\n    }\n    if (!this.chart.enableCanvas) {\n      this.element.appendChild(labelElement);\n    }\n  };\n  /**\n   * To get available space to trim.\n   *\n   * @param {Rect} legendRect legendRect\n   * @param {Rect} labelRect labelRect\n   * @returns {number} available space value\n   */\n  PolarRadarPanel.prototype.getAvailableSpaceToTrim = function (legendRect, labelRect) {\n    var legendX1 = legendRect.x;\n    var legendX2 = legendX1 + legendRect.width;\n    var labelX1 = labelRect.x;\n    var labelX2 = labelX1 + labelRect.width;\n    var width = 0;\n    if (labelX1 > legendX1 && labelX1 < legendX2 && labelX2 > legendX2) {\n      width = labelX2 - legendX2;\n    } else if (labelX1 > legendX1 && labelX1 < legendX2 && labelX2 < legendX2) {\n      width = 0;\n    } else if (labelX2 > legendX1 && labelX2 < legendX2 && labelX1 < legendX1) {\n      width = legendX1 - labelX1;\n    } else if (labelX2 > legendX1 && labelX2 > legendX2 && labelX1 < legendX1) {\n      width = legendX1 - labelX1;\n    }\n    return width;\n  };\n  /**\n   * Getting axis label bounds\n   *\n   * @param {number} pointX pointX\n   * @param {number} pointY pointY\n   * @param {VisibleLabels} label label\n   * @param {string} anchor anchor\n   * @returns {Rect} label region\n   */\n  PolarRadarPanel.prototype.getLabelRegion = function (pointX, pointY, label, anchor) {\n    if (anchor === 'middle') {\n      pointX -= label.size.width / 2;\n    } else if (anchor === 'end') {\n      pointX -= label.size.width;\n    } else {\n      // eslint-disable-next-line no-self-assign\n      pointX = pointX;\n    }\n    pointY -= label.size.height / 2;\n    return new Rect(pointX, pointY, label.size.width, label.size.height);\n  };\n  PolarRadarPanel.prototype.renderTickLine = function (axis, index, majorTickLine, minorTickLine, gridIndex) {\n    var tickOptions;\n    var chart = this.chart;\n    var direction;\n    var element;\n    if (axis.majorTickLines.width > 0) {\n      element = getElement(chart.element.id + '_MajorTickLine_' + index + '_' + gridIndex);\n      direction = element ? element.getAttribute('d') : null;\n      tickOptions = new PathOption(chart.element.id + '_MajorTickLine_' + index + '_' + gridIndex, 'transparent', axis.majorTickLines.width, axis.majorTickLines.color || chart.themeStyle.majorTickLine, null, null, majorTickLine);\n      /**\n       * I252450\n       * When we click the center of the marker which is plotted in the axis, selection did not work is fixed\n       * Cause: Instead of marker id, axis Tick line id is obtained while clicking\n       * Fix: Pointer events set to none for tick lines\n       */\n      element = chart.renderer.drawPath(tickOptions);\n      this.setPointerEventNone(element);\n      appendChildElement(chart.enableCanvas, chart.yAxisElements, element, chart.redraw, true, 'x', 'y', null, direction);\n    }\n    if (axis.minorTickLines.width > 0) {\n      element = getElement(chart.element.id + '_MinorTickLine_' + index + '_' + gridIndex);\n      direction = element ? element.getAttribute('d') : null;\n      tickOptions = new PathOption(chart.element.id + '_MinorTickLine_' + index + '_' + gridIndex, 'transparent', axis.minorTickLines.width, axis.minorTickLines.color || chart.themeStyle.minorTickLine, null, null, minorTickLine);\n      /**\n       * I252450\n       * When we click the center of the marker which is plotted in the axis, selection did not work is fixed\n       * Cause: Instead of marker id, axis Tick line id is obtained while clicking\n       * Fix: Pointer events set to none for tick lines\n       */\n      element = chart.renderer.drawPath(tickOptions);\n      this.setPointerEventNone(element);\n      appendChildElement(chart.enableCanvas, chart.yAxisElements, element, chart.redraw, true, 'x', 'y', null, direction);\n    }\n  };\n  PolarRadarPanel.prototype.renderGridLine = function (axis, index, majorGrid, minorGird, gridIndex) {\n    var chart = this.chart;\n    var gridOptions;\n    var direction;\n    var element;\n    if (axis.majorGridLines.width > 0) {\n      element = getElement(chart.element.id + '_MajorGridLine_' + index + '_' + gridIndex);\n      direction = element ? element.getAttribute('d') : null;\n      gridOptions = new PathOption(chart.element.id + '_MajorGridLine_' + index + '_' + gridIndex, 'transparent', axis.majorGridLines.width, axis.majorGridLines.color || chart.themeStyle.majorGridLine, null, axis.majorGridLines.dashArray, majorGrid);\n      appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawPath(gridOptions), chart.redraw, true, 'x', 'y', null, direction);\n    }\n    if (axis.minorGridLines.width > 0) {\n      element = getElement(chart.element.id + '_MinorGridLine_' + index + '_' + gridIndex);\n      direction = element ? element.getAttribute('d') : null;\n      gridOptions = new PathOption(chart.element.id + '_MinorGridLine_' + index + '_' + gridIndex, 'transparent', axis.minorGridLines.width, axis.minorGridLines.color || chart.themeStyle.minorGridLine, null, axis.minorGridLines.dashArray, minorGird);\n      appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawPath(gridOptions), chart.redraw, true, 'x', 'y', null, direction);\n    }\n  };\n  PolarRadarPanel.prototype.setPointerEventNone = function (element) {\n    if (element) {\n      element.style.pointerEvents = 'none';\n    }\n  };\n  return PolarRadarPanel;\n}(LineBase);\nexport { PolarRadarPanel };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","valueToCoefficient","inside","isOverlap","textTrim","appendChildElement","CircleOption","Size","measureText","TextOption","PathOption","Rect","LineBase","textElement","ChartLocation","valueToPolarCoefficient","CoefficientToVector","getElement","PolarRadarPanel","_super","_this","apply","arguments","visibleAxisLabelRect","measureAxis","rect","chart","initialClipRect","seriesClipRect","x","y","width","height","measureRowAxis","measureColumnAxis","calculateAxisSize","calculateRowSize","row","rows","measureDefinition","availableSize","computedHeight","calculateColumnSize","column","columns","computedWidth","definition","size","_i","_a","axes","length","axis","getModule","baseModule","calculateRangeAndInterval","padding","centerX","centerY","radius","Math","min","primaryXAxis","majorTickLines","maxLabelSize","coefficient","primaryYAxis","measure","yAxis","isRTLEnabled","enableRtl","setIsInversedAndOpposedPosition","verticalAxes","push","xAxis","horizontalAxes","computedTop","computedLeft","renderAxes","startAngle","axisElement","renderer","createGroup","id","element","axisLineElement","i","len","axisCollections","orientation","majorGridLines","drawXAxisGridLine","visible","internalVisibility","drawXAxisLabels","drawYAxisGridLine","lineStyle","drawYAxisLine","drawYAxisLabels","enableCanvas","appendChild","svgObject","redraw","index","optionsLine","vector","visibleLabels","value","axisLine","dashArray","color","themeStyle","drawPath","setPointerEventNone","yAxisElements","elementSize","options","pointX","pointY","angle","anchor","isIntersect","labelRegions","isLabelVisible","intersectType","labelIntersectAction","labelElement","cos","PI","labelPosition","sin","getLabelRegion","j","text","labelStyle","axisLabel","majorTick","majorGrid","x1","y1","x2","y2","border","majorGridLine","previousValue","visibleSeries","type","getAttribute","drawCircle","renderRadarGrid","tickPosition","renderTickLine","vector2","concat","tempInterval","minorGirdLine","minorTickLine","minorDirection","xLoc","yLoc","minorTicksPerInterval","minorGridLines","minorTickLines","valueType","drawAxisMinorLine","renderGridLine","minorGird","minorTick","range","visibleRange","direction","dateTimeInterval","interval","tickXSize","tickYSize","legendRect","legendModule","legendBounds","labelText","firstLabelX","islabelInside","lastLabelX","label","textAnchor","ticksbwtLabel","labelPlacement","isNaN","parseFloat","toFixed","enableTrim","originalText","trimText","chartWidth","textLength","i_1","substring","getAvailableSpaceToTrim","labelRect","legendX1","legendX2","labelX1","labelX2","majorTickLine","gridIndex","tickOptions","gridOptions","minorGridLine","style","pointerEvents"],"sources":["/Users/thonghoangdanh/FullStack/birdnest/node_modules/@syncfusion/ej2-charts/src/chart/axis/polar-radar-panel.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { valueToCoefficient, inside, isOverlap, textTrim } from '../../common/utils/helper';\nimport { appendChildElement } from '../../common/utils/helper';\nimport { CircleOption } from '../../common/utils/helper';\nimport { Size, measureText, TextOption, PathOption, Rect } from '@syncfusion/ej2-svg-base';\nimport { LineBase } from '../series/line-base';\nimport { textElement, ChartLocation, valueToPolarCoefficient, CoefficientToVector, getElement } from '../../common/utils/helper';\n/**\n * Specifies the Polar Axis Layout.\n */\nvar PolarRadarPanel = /** @class */ (function (_super) {\n    __extends(PolarRadarPanel, _super);\n    function PolarRadarPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.visibleAxisLabelRect = [];\n        return _this;\n    }\n    /**\n     * Measure the polar radar axis size.\n     *\n     * @returns {void}\n     * @private\n     */\n    PolarRadarPanel.prototype.measureAxis = function (rect) {\n        var chart = this.chart;\n        this.initialClipRect = rect;\n        this.seriesClipRect = new Rect(rect.x, rect.y, rect.width, rect.height);\n        //Measure axis size calculation\n        this.measureRowAxis(chart, this.initialClipRect);\n        this.measureColumnAxis(chart, this.initialClipRect);\n        this.calculateAxisSize();\n    };\n    PolarRadarPanel.prototype.measureRowAxis = function (chart, rect) {\n        this.calculateRowSize(rect);\n        var row = chart.rows[0];\n        this.measureDefinition(row, chart, new Size(chart.availableSize.width, row.computedHeight));\n    };\n    PolarRadarPanel.prototype.measureColumnAxis = function (chart, rect) {\n        this.calculateColumnSize(rect);\n        var column = chart.columns[0];\n        this.measureDefinition(column, chart, new Size(column.computedWidth, chart.availableSize.height));\n    };\n    /**\n     * Measure the column and row in chart.\n     *\n     * @returns {void}\n     * @private\n     */\n    PolarRadarPanel.prototype.measureDefinition = function (definition, chart, size) {\n        for (var _i = 0, _a = definition.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            axis.getModule(chart);\n            axis.baseModule.calculateRangeAndInterval(size, axis);\n        }\n    };\n    /**\n     * Measure the axis.\n     *\n     * @returns {void}\n     * @private\n     */\n    PolarRadarPanel.prototype.calculateAxisSize = function () {\n        var chart = this.chart;\n        var axis;\n        var padding = 5;\n        this.centerX = this.initialClipRect.width * 0.5 + this.initialClipRect.x;\n        this.centerY = this.initialClipRect.height * 0.5 + this.initialClipRect.y;\n        chart.radius = Math.min(this.initialClipRect.width, this.initialClipRect.height) / 2 - padding -\n            chart.primaryXAxis.majorTickLines.height - chart.primaryXAxis.maxLabelSize.height;\n        chart.radius = (chart.primaryXAxis.coefficient * chart.radius) / 100;\n        this.seriesClipRect.y = this.centerY - chart.radius;\n        this.seriesClipRect.x = this.centerX - chart.radius;\n        this.seriesClipRect.height = 2 * chart.radius;\n        this.seriesClipRect.width = 2 * chart.radius;\n        this.calculateRowSize(this.seriesClipRect);\n        axis = chart.primaryYAxis;\n        axis.rect = this.seriesClipRect;\n        this.calculateColumnSize(this.seriesClipRect);\n        axis = chart.primaryXAxis;\n        axis.rect = this.seriesClipRect;\n    };\n    /**\n     * Measure the axis.\n     *\n     * @returns {void}\n     * @private\n     */\n    PolarRadarPanel.prototype.measure = function () {\n        var chart = this.chart;\n        var yAxis = chart.primaryYAxis;\n        yAxis.isRTLEnabled = chart.enableRtl;\n        yAxis.setIsInversedAndOpposedPosition(true);\n        chart.verticalAxes.push(yAxis);\n        var row = chart.rows[0];\n        row.axes[0] = yAxis;\n        chart.rows[0] = row;\n        var xAxis = chart.primaryXAxis;\n        xAxis.isRTLEnabled = chart.enableRtl;\n        xAxis.setIsInversedAndOpposedPosition(true);\n        chart.horizontalAxes.push(xAxis);\n        var column = chart.columns[0];\n        column.axes[0] = xAxis;\n        chart.columns[0] = column;\n    };\n    /**\n     * Measure the row size.\n     *\n     * @returns {void}\n     */\n    PolarRadarPanel.prototype.calculateRowSize = function (rect) {\n        /*! Calculate row size */\n        var chart = this.chart;\n        var row = chart.rows[0];\n        row.computedHeight = rect.height / 2;\n        row.computedTop = rect.y;\n        chart.rows[0] = row;\n    };\n    /**\n     * Measure the row size.\n     *\n     * @returns {void}\n     */\n    PolarRadarPanel.prototype.calculateColumnSize = function (rect) {\n        /*! Calculate column size */\n        var chart = this.chart;\n        var column = chart.columns[0];\n        column.computedLeft = rect.x;\n        column.computedWidth = rect.width;\n        chart.columns[0] = column;\n    };\n    /**\n     * To render the axis element.\n     *\n     * @returns {void}\n     * @private\n     */\n    PolarRadarPanel.prototype.renderAxes = function () {\n        var axis;\n        var chart = this.chart;\n        this.startAngle = chart.primaryXAxis.startAngle;\n        var axisElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisCollection' });\n        var axisLineElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisOutsideCollection' });\n        for (var i = 0, len = chart.axisCollections.length; i < len; i++) {\n            this.element = chart.renderer.createGroup({ id: chart.element.id + 'AxisGroup' + i });\n            axis = chart.axisCollections[i];\n            if (axis.orientation === 'Horizontal') {\n                if (axis.majorGridLines.width > 0 || axis.majorTickLines.width > 0) {\n                    this.drawXAxisGridLine(axis, i);\n                }\n                if (axis.visible && axis.internalVisibility) {\n                    this.drawXAxisLabels(axis, i);\n                }\n            }\n            else {\n                this.drawYAxisGridLine(axis, i);\n                if (axis.lineStyle.width > 0) {\n                    this.drawYAxisLine(axis, i);\n                }\n                if (axis.visible && axis.internalVisibility) {\n                    this.drawYAxisLabels(axis, i);\n                }\n            }\n            if (!this.chart.enableCanvas) {\n                axisElement.appendChild(this.element);\n            }\n        }\n        if (!this.chart.enableCanvas) {\n            axisElement.appendChild(this.element);\n        }\n        appendChildElement(chart.enableCanvas, chart.svgObject, axisElement, chart.redraw);\n        return axisLineElement;\n    };\n    PolarRadarPanel.prototype.drawYAxisLine = function (axis, index) {\n        var chart = this.chart;\n        var optionsLine = {};\n        var vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[0].value, axis), this.startAngle);\n        var axisLine = 'M ' + this.centerX + ' ' + this.centerY + 'L ' +\n            (this.centerX + chart.radius * vector.x) + ' ' + (this.centerY + chart.radius * vector.y);\n        optionsLine = {\n            'id': chart.element.id + 'AxisLine_' + index,\n            'd': axisLine,\n            'stroke-dasharray': axis.lineStyle.dashArray,\n            'stroke-width': axis.lineStyle.width,\n            'stroke': axis.lineStyle.color || chart.themeStyle.axisLine\n        };\n        /**\n         * I252450\n         * When we click the center of the marker which is plotted in the axis line, selection did not work is fixed\n         * Cause: Instead of marker id, axis  line id is obtained while clicking\n         * Fix: Pointer events set to none for axis lines\n         */\n        var element = chart.renderer.drawPath(optionsLine);\n        this.setPointerEventNone(element);\n        if (!this.chart.enableCanvas) {\n            chart.yAxisElements.appendChild(element);\n        }\n    };\n    PolarRadarPanel.prototype.drawYAxisLabels = function (axis, index) {\n        var chart = this.chart;\n        var elementSize;\n        var options;\n        var pointX = 0;\n        var pointY = 0;\n        var angle = this.startAngle < 0 ? this.startAngle + 360 : this.startAngle;\n        var anchor = 'middle';\n        var radius;\n        var padding = 5;\n        var isIntersect;\n        var labelRegions = [];\n        var isLabelVisible = [];\n        isLabelVisible[0] = true;\n        var intersectType = axis.labelIntersectAction;\n        var labelElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisLabels' + index });\n        var vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[0].value, axis), this.startAngle);\n        for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\n            isIntersect = false;\n            radius = chart.radius * valueToCoefficient(axis.visibleLabels[i].value, axis);\n            elementSize = axis.visibleLabels[i].size;\n            radius = chart.radius * valueToCoefficient(axis.visibleLabels[i].value, axis);\n            pointX = (this.centerX + radius * vector.x) + ((axis.majorTickLines.height + elementSize.width / 2 + padding / 2)\n                * (Math.cos(angle * Math.PI / 180)) * (axis.labelPosition === 'Inside' ? 1 : -1));\n            pointY = (this.centerY + radius * vector.y) + ((axis.majorTickLines.height + elementSize.height / 2)\n                * (Math.sin(angle * Math.PI / 180)) * (axis.labelPosition === 'Inside' ? 1 : -1));\n            pointY += (elementSize.height / 4);\n            labelRegions[i] = this.getLabelRegion(pointX, pointY, axis.visibleLabels[i], anchor);\n            if (i !== 0 && intersectType === 'Hide') {\n                for (var j = i; j >= 0; j--) {\n                    j = (j === 0) ? 0 : (j === i) ? (j - 1) : j;\n                    if (isLabelVisible[j] && isOverlap(labelRegions[i], labelRegions[j])) {\n                        isIntersect = true;\n                        isLabelVisible[i] = false;\n                        break;\n                    }\n                    else {\n                        isLabelVisible[i] = true;\n                    }\n                }\n                if (isIntersect) {\n                    continue; // If the label is intersect, the label render is ignored.\n                }\n                // To check Y axis label with visible X axis label\n                for (var _i = 0, _a = this.visibleAxisLabelRect; _i < _a.length; _i++) {\n                    var rect = _a[_i];\n                    if (isOverlap(labelRegions[i], rect)) {\n                        isIntersect = true;\n                        break;\n                    }\n                }\n            }\n            if (isIntersect) {\n                continue;\n            }\n            this.visibleAxisLabelRect.push(labelRegions[i]);\n            options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY, anchor, axis.visibleLabels[i].text);\n            textElement(chart.renderer, options, axis.labelStyle, axis.labelStyle.color || chart.themeStyle.axisLabel, labelElement, false, chart.redraw, true, true, null, null, null, null, chart.enableCanvas);\n        }\n        if (!this.chart.enableCanvas) {\n            chart.yAxisElements.appendChild(labelElement);\n        }\n    };\n    PolarRadarPanel.prototype.drawYAxisGridLine = function (axis, index) {\n        var chart = this.chart;\n        var options;\n        var radius;\n        var majorTick = '';\n        var majorGrid = '';\n        var vector;\n        var angle = this.startAngle < 0 ? this.startAngle + 360 : this.startAngle;\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var border = {\n            color: axis.majorGridLines.color || chart.themeStyle.majorGridLine,\n            width: axis.majorGridLines.width\n        };\n        var previousValue;\n        var element;\n        if (axis.majorGridLines.width > 0) {\n            if (chart.visibleSeries[0].type === 'Polar') {\n                for (var j = 0; j < axis.visibleLabels.length; j++) {\n                    element = getElement(chart.element.id + '_MajorGridLine_' + index + '_' + j);\n                    previousValue = element ? element.getAttribute('r') : null;\n                    radius = chart.radius * valueToCoefficient(axis.visibleLabels[j].value, axis);\n                    options = new CircleOption(chart.element.id + '_MajorGridLine_' + index + '_' + j, 'transparent', border, axis.majorGridLines.width, this.centerX, this.centerY, radius);\n                    appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawCircle(options), chart.redraw, true, 'r', 'r', new ChartLocation(+previousValue, +previousValue), null, true);\n                }\n                if (radius !== chart.radius) {\n                    options = new CircleOption(chart.element.id + '_MajorGridLine_' + index + '_' + axis.visibleLabels.length + 1, 'transparent', border, axis.majorGridLines.width, this.centerX, this.centerY, chart.radius);\n                    appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawCircle(options), chart.redraw, true, 'r', 'r', new ChartLocation(+previousValue, +previousValue), null, true);\n                }\n            }\n            else {\n                for (var j = 0; j < axis.visibleLabels.length; j++) {\n                    radius = chart.radius * valueToCoefficient(axis.visibleLabels[j].value, axis);\n                    majorGrid = this.renderRadarGrid(radius, '', chart);\n                    element = getElement(chart.element.id + '_MajorGridLine_' + index + '_' + j);\n                    previousValue = element ? element.getAttribute('d') : null;\n                    options = new PathOption(chart.element.id + '_MajorGridLine_' + index + '_' + j, 'transparent', axis.majorGridLines.width, axis.majorGridLines.color || chart.themeStyle.majorGridLine, null, null, majorGrid);\n                    appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawPath(options), chart.redraw, true, 'x', 'y', null, previousValue, true);\n                }\n                if (radius !== chart.radius) {\n                    majorGrid = this.renderRadarGrid(chart.radius, '', chart);\n                    element = getElement(chart.element.id + '_MajorGridLine_' + index + '_' + axis.visibleLabels.length);\n                    previousValue = element ? element.getAttribute('d') : null;\n                    options = new PathOption(chart.element.id + '_MajorGridLine_' + index + '_' + axis.visibleLabels.length, 'transparent', axis.majorGridLines.width, axis.majorGridLines.color || chart.themeStyle.majorGridLine, null, null, majorGrid);\n                    appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawPath(options), chart.redraw, true, 'x', 'y', null, previousValue, true);\n                }\n            }\n        }\n        if (axis.majorTickLines.width > 0) {\n            vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[0].value, axis), this.startAngle);\n            for (var i = 0; i < axis.visibleLabels.length; i++) {\n                radius = chart.radius * valueToCoefficient(axis.visibleLabels[i].value, axis);\n                x1 = this.centerX + radius * vector.x;\n                y1 = this.centerY + radius * vector.y;\n                x2 = x1 + (axis.majorTickLines.height * (Math.cos(angle * Math.PI / 180)) * (axis.tickPosition === 'Inside' ? 1 : -1));\n                y2 = y1 + (axis.majorTickLines.height * (Math.sin(angle * Math.PI / 180)) * (axis.tickPosition === 'Inside' ? 1 : -1));\n                majorTick = 'M ' + x1 + ' ' + y1 + ' L ' + x2 + ' ' + y2;\n                this.renderTickLine(axis, index, majorTick, '', i);\n            }\n        }\n    };\n    PolarRadarPanel.prototype.renderRadarGrid = function (radius, majorGrid, chart) {\n        var vector;\n        var vector2;\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        for (var i = 0, len = chart.primaryXAxis.visibleLabels.length; i < len; i++) {\n            vector = CoefficientToVector(valueToPolarCoefficient(chart.primaryXAxis.visibleLabels[i].value, chart.primaryXAxis), this.startAngle);\n            if (i + 1 < len) {\n                vector2 = CoefficientToVector(valueToPolarCoefficient(chart.primaryXAxis.visibleLabels[i + 1].value, chart.primaryXAxis), this.startAngle);\n            }\n            else {\n                vector2 = CoefficientToVector(valueToPolarCoefficient(chart.primaryXAxis.visibleLabels[0].value, chart.primaryXAxis), this.startAngle);\n            }\n            x1 = this.centerX + radius * vector.x;\n            y1 = this.centerY + radius * vector.y;\n            x2 = this.centerX + radius * vector2.x;\n            y2 = this.centerY + radius * vector2.y;\n            majorGrid = majorGrid.concat((i ? 'L ' : 'M ') + x1 + ' ' + y1 + ' ' + 'L ' + x2 + ' ' + y2 + ' ');\n        }\n        return majorGrid;\n    };\n    PolarRadarPanel.prototype.drawXAxisGridLine = function (axis, index) {\n        var chart = this.chart;\n        var tempInterval;\n        var vector;\n        var majorGrid = '';\n        var majorTick = '';\n        var minorGirdLine = '';\n        var minorTickLine = '';\n        var x1 = this.centerX;\n        var x2;\n        var y1 = this.centerY;\n        var y2;\n        var minorDirection;\n        var length = axis.visibleLabels.length;\n        //Gridlines\n        for (var i = 0; i < length; i++) {\n            tempInterval = axis.visibleLabels[i].value;\n            vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[i].value, axis), this.startAngle);\n            x2 = this.centerX + chart.radius * vector.x;\n            y2 = this.centerY + chart.radius * vector.y;\n            var xLoc = x2 + (axis.majorTickLines.height * vector.x * (axis.tickPosition === 'Inside' ? -1 : 1));\n            var yLoc = y2 + (axis.majorTickLines.height * vector.y * (axis.tickPosition === 'Inside' ? -1 : 1));\n            majorGrid = 'M ' + x1 + ' ' + y1 + ' ' + 'L ' + x2 + ' ' + y2;\n            majorTick = 'M ' + x2 + ' ' + y2 + ' L ' + xLoc + ' ' + yLoc;\n            if (axis.minorTicksPerInterval > 0 && (axis.minorGridLines.width > 0 || axis.minorTickLines.width > 0)\n                && axis.valueType !== 'Category' && chart.visibleSeries[0].type !== 'Radar') {\n                minorDirection = this.drawAxisMinorLine(axis, tempInterval, minorGirdLine, minorTickLine);\n                minorGirdLine = minorDirection[0];\n                minorTickLine = minorDirection[1];\n            }\n            this.renderTickLine(axis, index, majorTick, minorTickLine, i);\n            this.renderGridLine(axis, index, majorGrid, minorGirdLine, i);\n        }\n    };\n    PolarRadarPanel.prototype.drawAxisMinorLine = function (axis, tempInterval, minorGird, minorTick) {\n        var value = tempInterval;\n        var x;\n        var y;\n        var vector;\n        var range = axis.visibleRange;\n        var direction = [];\n        for (var j = 0; j < axis.minorTicksPerInterval; j++) {\n            value += (axis.valueType === 'DateTime' ? axis.dateTimeInterval : axis.visibleRange.interval) /\n                (axis.minorTicksPerInterval + 1);\n            if (inside(value, range)) {\n                vector = CoefficientToVector(valueToPolarCoefficient(value, axis), this.startAngle);\n                x = this.centerX + this.chart.radius * vector.x;\n                y = this.centerY + this.chart.radius * vector.y;\n                var tickXSize = x + (axis.minorTickLines.height * vector.x * (axis.tickPosition === 'Inside' ? -1 : 1));\n                var tickYSize = y + (axis.minorTickLines.height * vector.y * (axis.tickPosition === 'Inside' ? -1 : 1));\n                minorGird = minorGird.concat('M' + ' ' + this.centerX + ' ' + this.centerY\n                    + 'L ' + x + ' ' + y);\n                minorTick = minorTick.concat('M' + ' ' + x + ' ' + y + 'L' + ' ' + (tickXSize) + ' ' +\n                    (tickYSize));\n            }\n        }\n        direction.push(minorGird);\n        direction.push(minorTick);\n        return direction;\n    };\n    /**\n     * To render the axis label.\n     *\n     * @param {Axis} axis axis\n     * @param {number} index index\n     * @returns {void}\n     * @private\n     */\n    PolarRadarPanel.prototype.drawXAxisLabels = function (axis, index) {\n        this.visibleAxisLabelRect = [];\n        var legendRect;\n        if (this.chart.legendModule) {\n            legendRect = this.chart.legendModule.legendBounds;\n        }\n        var chart = this.chart;\n        var pointX = 0;\n        var pointY = 0;\n        var labelElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisLabels' + index });\n        var options;\n        var vector;\n        var labelText;\n        var firstLabelX;\n        var islabelInside = axis.labelPosition === 'Inside';\n        var padding = 5;\n        var lastLabelX;\n        var label;\n        var textAnchor = '';\n        var isIntersect;\n        var labelRegions = [];\n        var isLabelVisible = [];\n        isLabelVisible[0] = true;\n        var intersectType = axis.labelIntersectAction;\n        var ticksbwtLabel = axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks' ? 0.5 : 0;\n        var radius = chart.radius + axis.majorTickLines.height;\n        radius = (islabelInside) ? -radius : radius;\n        for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\n            isIntersect = false;\n            vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[i].value + ticksbwtLabel, axis), this.startAngle);\n            if (!isNaN(vector.x) && !isNaN(vector.y)) {\n                pointX = this.centerX + (radius + axis.majorTickLines.height + padding) * vector.x;\n                pointY = this.centerY + (radius + axis.majorTickLines.height + padding) * vector.y;\n                textAnchor = parseFloat(pointX.toFixed(1)) === parseFloat(this.centerX.toFixed(1)) ? 'middle' :\n                    ((pointX < this.centerX && !islabelInside) || (pointX > this.centerX && islabelInside)) ? 'end' : 'start';\n            }\n            label = axis.visibleLabels[i];\n            labelText = label.text;\n            // to trim axis labels based on available size\n            if (axis.enableTrim || intersectType === 'Trim') {\n                var originalText = axis.visibleLabels[i].originalText;\n                var trimText = void 0;\n                var size = void 0;\n                var labelPosition = axis.labelPosition;\n                var chartWidth = chart.availableSize.width;\n                var textLength = originalText.length;\n                for (var i_1 = textLength - 1; i_1 >= 0; --i_1) {\n                    trimText = originalText.substring(0, i_1) + '...';\n                    size = measureText(trimText, axis.labelStyle).width;\n                    if (pointX === chartWidth / 2 ? (pointX - size / 2 >= 0 && pointX + size / 2 <= chartWidth) :\n                        ((labelPosition === 'Outside' && ((pointX >= chartWidth / 2 && pointX + size <= chartWidth) ||\n                            (pointX <= chartWidth / 2 && pointX - size >= 0))) || (labelPosition === 'Inside' &&\n                            (pointX + size <= chartWidth / 2 || pointX - size >= chartWidth / 2)))) {\n                        labelText = i_1 === textLength - 1 ? originalText : trimText;\n                        label.size.width = measureText(labelText, axis.labelStyle).width;\n                        label.text = labelText;\n                        break;\n                    }\n                }\n            }\n            // fix for label style not working in axisLabelRender event issue\n            labelRegions[i] = this.getLabelRegion(pointX, pointY, label, textAnchor);\n            if (i === 0) {\n                firstLabelX = pointX;\n            }\n            else if (i === axis.visibleLabels.length - 1 && axis.valueType !== 'Category') {\n                lastLabelX = measureText(labelText, axis.labelStyle).height;\n                lastLabelX += pointX;\n                labelText = (lastLabelX > firstLabelX) ? '' : labelText;\n            }\n            // Label intersect action (Hide) perform here\n            if (i !== 0 && intersectType === 'Hide') {\n                for (var j = i; j >= 0; j--) {\n                    j = (j === 0) ? 0 : ((j === i) ? (j - 1) : j);\n                    if (isLabelVisible[j] && isOverlap(labelRegions[i], labelRegions[j])) {\n                        isIntersect = true;\n                        isLabelVisible[i] = false;\n                        break;\n                    }\n                    else {\n                        isLabelVisible[i] = true;\n                    }\n                }\n            }\n            if (!isIntersect && legendRect) {\n                isIntersect = isOverlap(labelRegions[i], legendRect);\n                if (isIntersect) {\n                    var width = this.getAvailableSpaceToTrim(legendRect, labelRegions[i]);\n                    if (width > 0) {\n                        labelText = textTrim(width, axis.visibleLabels[i].originalText, axis.labelStyle);\n                        isIntersect = false;\n                    }\n                }\n            }\n            options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY, !chart.enableRtl ? textAnchor : textAnchor == 'end' ? 'start' : textAnchor == 'start' ? 'end' : textAnchor, labelText, '', 'central');\n            if (isIntersect) {\n                continue; // If the label is intersect, the label render is ignored.\n            }\n            this.visibleAxisLabelRect.push(labelRegions[i]);\n            textElement(chart.renderer, options, label.labelStyle, label.labelStyle.color || chart.themeStyle.axisLabel, labelElement, false, chart.redraw, true, true, null, null, null, null, chart.enableCanvas);\n        }\n        if (!this.chart.enableCanvas) {\n            this.element.appendChild(labelElement);\n        }\n    };\n    /**\n     * To get available space to trim.\n     *\n     * @param {Rect} legendRect legendRect\n     * @param {Rect} labelRect labelRect\n     * @returns {number} available space value\n     */\n    PolarRadarPanel.prototype.getAvailableSpaceToTrim = function (legendRect, labelRect) {\n        var legendX1 = legendRect.x;\n        var legendX2 = legendX1 + legendRect.width;\n        var labelX1 = labelRect.x;\n        var labelX2 = labelX1 + labelRect.width;\n        var width = 0;\n        if (labelX1 > legendX1 && labelX1 < legendX2 && labelX2 > legendX2) {\n            width = labelX2 - legendX2;\n        }\n        else if (labelX1 > legendX1 && labelX1 < legendX2 && labelX2 < legendX2) {\n            width = 0;\n        }\n        else if (labelX2 > legendX1 && labelX2 < legendX2 && labelX1 < legendX1) {\n            width = legendX1 - labelX1;\n        }\n        else if (labelX2 > legendX1 && labelX2 > legendX2 && labelX1 < legendX1) {\n            width = legendX1 - labelX1;\n        }\n        return width;\n    };\n    /**\n     * Getting axis label bounds\n     *\n     * @param {number} pointX pointX\n     * @param {number} pointY pointY\n     * @param {VisibleLabels} label label\n     * @param {string} anchor anchor\n     * @returns {Rect} label region\n     */\n    PolarRadarPanel.prototype.getLabelRegion = function (pointX, pointY, label, anchor) {\n        if (anchor === 'middle') {\n            pointX -= (label.size.width / 2);\n        }\n        else if (anchor === 'end') {\n            pointX -= label.size.width;\n        }\n        else {\n            // eslint-disable-next-line no-self-assign\n            pointX = pointX;\n        }\n        pointY -= (label.size.height / 2);\n        return new Rect(pointX, pointY, label.size.width, label.size.height);\n    };\n    PolarRadarPanel.prototype.renderTickLine = function (axis, index, majorTickLine, minorTickLine, gridIndex) {\n        var tickOptions;\n        var chart = this.chart;\n        var direction;\n        var element;\n        if (axis.majorTickLines.width > 0) {\n            element = getElement(chart.element.id + '_MajorTickLine_' + index + '_' + gridIndex);\n            direction = element ? element.getAttribute('d') : null;\n            tickOptions = new PathOption(chart.element.id + '_MajorTickLine_' + index + '_' + gridIndex, 'transparent', axis.majorTickLines.width, axis.majorTickLines.color || chart.themeStyle.majorTickLine, null, null, majorTickLine);\n            /**\n             * I252450\n             * When we click the center of the marker which is plotted in the axis, selection did not work is fixed\n             * Cause: Instead of marker id, axis Tick line id is obtained while clicking\n             * Fix: Pointer events set to none for tick lines\n             */\n            element = chart.renderer.drawPath(tickOptions);\n            this.setPointerEventNone(element);\n            appendChildElement(chart.enableCanvas, chart.yAxisElements, element, chart.redraw, true, 'x', 'y', null, direction);\n        }\n        if (axis.minorTickLines.width > 0) {\n            element = getElement(chart.element.id + '_MinorTickLine_' + index + '_' + gridIndex);\n            direction = element ? element.getAttribute('d') : null;\n            tickOptions = new PathOption(chart.element.id + '_MinorTickLine_' + index + '_' + gridIndex, 'transparent', axis.minorTickLines.width, axis.minorTickLines.color || chart.themeStyle.minorTickLine, null, null, minorTickLine);\n            /**\n             * I252450\n             * When we click the center of the marker which is plotted in the axis, selection did not work is fixed\n             * Cause: Instead of marker id, axis Tick line id is obtained while clicking\n             * Fix: Pointer events set to none for tick lines\n             */\n            element = chart.renderer.drawPath(tickOptions);\n            this.setPointerEventNone(element);\n            appendChildElement(chart.enableCanvas, chart.yAxisElements, element, chart.redraw, true, 'x', 'y', null, direction);\n        }\n    };\n    PolarRadarPanel.prototype.renderGridLine = function (axis, index, majorGrid, minorGird, gridIndex) {\n        var chart = this.chart;\n        var gridOptions;\n        var direction;\n        var element;\n        if (axis.majorGridLines.width > 0) {\n            element = getElement(chart.element.id + '_MajorGridLine_' + index + '_' + gridIndex);\n            direction = element ? element.getAttribute('d') : null;\n            gridOptions = new PathOption(chart.element.id + '_MajorGridLine_' + index + '_' + gridIndex, 'transparent', axis.majorGridLines.width, axis.majorGridLines.color || chart.themeStyle.majorGridLine, null, axis.majorGridLines.dashArray, majorGrid);\n            appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawPath(gridOptions), chart.redraw, true, 'x', 'y', null, direction);\n        }\n        if (axis.minorGridLines.width > 0) {\n            element = getElement(chart.element.id + '_MinorGridLine_' + index + '_' + gridIndex);\n            direction = element ? element.getAttribute('d') : null;\n            gridOptions = new PathOption(chart.element.id + '_MinorGridLine_' + index + '_' + gridIndex, 'transparent', axis.minorGridLines.width, axis.minorGridLines.color || chart.themeStyle.minorGridLine, null, axis.minorGridLines.dashArray, minorGird);\n            appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawPath(gridOptions), chart.redraw, true, 'x', 'y', null, direction);\n        }\n    };\n    PolarRadarPanel.prototype.setPointerEventNone = function (element) {\n        if (element) {\n            element.style.pointerEvents = 'none';\n        }\n    };\n    return PolarRadarPanel;\n}(LineBase));\nexport { PolarRadarPanel };\n"],"mappings":"AAAA,IAAIA,SAAS,GAAI,IAAI,IAAI,IAAI,CAACA,SAAS,IAAM,YAAY;EACrD,IAAIC,aAAa,GAAG,UAAUC,CAAC,EAAEC,CAAC,EAAE;IAChCF,aAAa,GAAGG,MAAM,CAACC,cAAc,IAChC;MAAEC,SAAS,EAAE;IAAG,CAAC,YAAYC,KAAK,IAAI,UAAUL,CAAC,EAAEC,CAAC,EAAE;MAAED,CAAC,CAACI,SAAS,GAAGH,CAAC;IAAE,CAAE,IAC5E,UAAUD,CAAC,EAAEC,CAAC,EAAE;MAAE,KAAK,IAAIK,CAAC,IAAIL,CAAC,EAAE,IAAIA,CAAC,CAACM,cAAc,CAACD,CAAC,CAAC,EAAEN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IAAE,CAAC;IAC9E,OAAOP,aAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;EAC9B,CAAC;EACD,OAAO,UAAUD,CAAC,EAAEC,CAAC,EAAE;IACnBF,aAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;IACnB,SAASO,EAAE,GAAG;MAAE,IAAI,CAACC,WAAW,GAAGT,CAAC;IAAE;IACtCA,CAAC,CAACU,SAAS,GAAGT,CAAC,KAAK,IAAI,GAAGC,MAAM,CAACS,MAAM,CAACV,CAAC,CAAC,IAAIO,EAAE,CAACE,SAAS,GAAGT,CAAC,CAACS,SAAS,EAAE,IAAIF,EAAE,EAAE,CAAC;EACxF,CAAC;AACL,CAAC,EAAG;AACJ,SAASI,kBAAkB,EAAEC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,2BAA2B;AAC3F,SAASC,kBAAkB,QAAQ,2BAA2B;AAC9D,SAASC,YAAY,QAAQ,2BAA2B;AACxD,SAASC,IAAI,EAAEC,WAAW,EAAEC,UAAU,EAAEC,UAAU,EAAEC,IAAI,QAAQ,0BAA0B;AAC1F,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,SAASC,WAAW,EAAEC,aAAa,EAAEC,uBAAuB,EAAEC,mBAAmB,EAAEC,UAAU,QAAQ,2BAA2B;AAChI;AACA;AACA;AACA,IAAIC,eAAe,GAAG,aAAe,UAAUC,MAAM,EAAE;EACnDhC,SAAS,CAAC+B,eAAe,EAAEC,MAAM,CAAC;EAClC,SAASD,eAAe,GAAG;IACvB,IAAIE,KAAK,GAAGD,MAAM,KAAK,IAAI,IAAIA,MAAM,CAACE,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,IAAI,IAAI;IACpE;IACAF,KAAK,CAACG,oBAAoB,GAAG,EAAE;IAC/B,OAAOH,KAAK;EAChB;EACA;AACJ;AACA;AACA;AACA;AACA;EACIF,eAAe,CAACnB,SAAS,CAACyB,WAAW,GAAG,UAAUC,IAAI,EAAE;IACpD,IAAIC,KAAK,GAAG,IAAI,CAACA,KAAK;IACtB,IAAI,CAACC,eAAe,GAAGF,IAAI;IAC3B,IAAI,CAACG,cAAc,GAAG,IAAIjB,IAAI,CAACc,IAAI,CAACI,CAAC,EAAEJ,IAAI,CAACK,CAAC,EAAEL,IAAI,CAACM,KAAK,EAAEN,IAAI,CAACO,MAAM,CAAC;IACvE;IACA,IAAI,CAACC,cAAc,CAACP,KAAK,EAAE,IAAI,CAACC,eAAe,CAAC;IAChD,IAAI,CAACO,iBAAiB,CAACR,KAAK,EAAE,IAAI,CAACC,eAAe,CAAC;IACnD,IAAI,CAACQ,iBAAiB,EAAE;EAC5B,CAAC;EACDjB,eAAe,CAACnB,SAAS,CAACkC,cAAc,GAAG,UAAUP,KAAK,EAAED,IAAI,EAAE;IAC9D,IAAI,CAACW,gBAAgB,CAACX,IAAI,CAAC;IAC3B,IAAIY,GAAG,GAAGX,KAAK,CAACY,IAAI,CAAC,CAAC,CAAC;IACvB,IAAI,CAACC,iBAAiB,CAACF,GAAG,EAAEX,KAAK,EAAE,IAAInB,IAAI,CAACmB,KAAK,CAACc,aAAa,CAACT,KAAK,EAAEM,GAAG,CAACI,cAAc,CAAC,CAAC;EAC/F,CAAC;EACDvB,eAAe,CAACnB,SAAS,CAACmC,iBAAiB,GAAG,UAAUR,KAAK,EAAED,IAAI,EAAE;IACjE,IAAI,CAACiB,mBAAmB,CAACjB,IAAI,CAAC;IAC9B,IAAIkB,MAAM,GAAGjB,KAAK,CAACkB,OAAO,CAAC,CAAC,CAAC;IAC7B,IAAI,CAACL,iBAAiB,CAACI,MAAM,EAAEjB,KAAK,EAAE,IAAInB,IAAI,CAACoC,MAAM,CAACE,aAAa,EAAEnB,KAAK,CAACc,aAAa,CAACR,MAAM,CAAC,CAAC;EACrG,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACId,eAAe,CAACnB,SAAS,CAACwC,iBAAiB,GAAG,UAAUO,UAAU,EAAEpB,KAAK,EAAEqB,IAAI,EAAE;IAC7E,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEC,EAAE,GAAGH,UAAU,CAACI,IAAI,EAAEF,EAAE,GAAGC,EAAE,CAACE,MAAM,EAAEH,EAAE,EAAE,EAAE;MACzD,IAAII,IAAI,GAAGH,EAAE,CAACD,EAAE,CAAC;MACjBI,IAAI,CAACC,SAAS,CAAC3B,KAAK,CAAC;MACrB0B,IAAI,CAACE,UAAU,CAACC,yBAAyB,CAACR,IAAI,EAAEK,IAAI,CAAC;IACzD;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIlC,eAAe,CAACnB,SAAS,CAACoC,iBAAiB,GAAG,YAAY;IACtD,IAAIT,KAAK,GAAG,IAAI,CAACA,KAAK;IACtB,IAAI0B,IAAI;IACR,IAAII,OAAO,GAAG,CAAC;IACf,IAAI,CAACC,OAAO,GAAG,IAAI,CAAC9B,eAAe,CAACI,KAAK,GAAG,GAAG,GAAG,IAAI,CAACJ,eAAe,CAACE,CAAC;IACxE,IAAI,CAAC6B,OAAO,GAAG,IAAI,CAAC/B,eAAe,CAACK,MAAM,GAAG,GAAG,GAAG,IAAI,CAACL,eAAe,CAACG,CAAC;IACzEJ,KAAK,CAACiC,MAAM,GAAGC,IAAI,CAACC,GAAG,CAAC,IAAI,CAAClC,eAAe,CAACI,KAAK,EAAE,IAAI,CAACJ,eAAe,CAACK,MAAM,CAAC,GAAG,CAAC,GAAGwB,OAAO,GAC1F9B,KAAK,CAACoC,YAAY,CAACC,cAAc,CAAC/B,MAAM,GAAGN,KAAK,CAACoC,YAAY,CAACE,YAAY,CAAChC,MAAM;IACrFN,KAAK,CAACiC,MAAM,GAAIjC,KAAK,CAACoC,YAAY,CAACG,WAAW,GAAGvC,KAAK,CAACiC,MAAM,GAAI,GAAG;IACpE,IAAI,CAAC/B,cAAc,CAACE,CAAC,GAAG,IAAI,CAAC4B,OAAO,GAAGhC,KAAK,CAACiC,MAAM;IACnD,IAAI,CAAC/B,cAAc,CAACC,CAAC,GAAG,IAAI,CAAC4B,OAAO,GAAG/B,KAAK,CAACiC,MAAM;IACnD,IAAI,CAAC/B,cAAc,CAACI,MAAM,GAAG,CAAC,GAAGN,KAAK,CAACiC,MAAM;IAC7C,IAAI,CAAC/B,cAAc,CAACG,KAAK,GAAG,CAAC,GAAGL,KAAK,CAACiC,MAAM;IAC5C,IAAI,CAACvB,gBAAgB,CAAC,IAAI,CAACR,cAAc,CAAC;IAC1CwB,IAAI,GAAG1B,KAAK,CAACwC,YAAY;IACzBd,IAAI,CAAC3B,IAAI,GAAG,IAAI,CAACG,cAAc;IAC/B,IAAI,CAACc,mBAAmB,CAAC,IAAI,CAACd,cAAc,CAAC;IAC7CwB,IAAI,GAAG1B,KAAK,CAACoC,YAAY;IACzBV,IAAI,CAAC3B,IAAI,GAAG,IAAI,CAACG,cAAc;EACnC,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIV,eAAe,CAACnB,SAAS,CAACoE,OAAO,GAAG,YAAY;IAC5C,IAAIzC,KAAK,GAAG,IAAI,CAACA,KAAK;IACtB,IAAI0C,KAAK,GAAG1C,KAAK,CAACwC,YAAY;IAC9BE,KAAK,CAACC,YAAY,GAAG3C,KAAK,CAAC4C,SAAS;IACpCF,KAAK,CAACG,+BAA+B,CAAC,IAAI,CAAC;IAC3C7C,KAAK,CAAC8C,YAAY,CAACC,IAAI,CAACL,KAAK,CAAC;IAC9B,IAAI/B,GAAG,GAAGX,KAAK,CAACY,IAAI,CAAC,CAAC,CAAC;IACvBD,GAAG,CAACa,IAAI,CAAC,CAAC,CAAC,GAAGkB,KAAK;IACnB1C,KAAK,CAACY,IAAI,CAAC,CAAC,CAAC,GAAGD,GAAG;IACnB,IAAIqC,KAAK,GAAGhD,KAAK,CAACoC,YAAY;IAC9BY,KAAK,CAACL,YAAY,GAAG3C,KAAK,CAAC4C,SAAS;IACpCI,KAAK,CAACH,+BAA+B,CAAC,IAAI,CAAC;IAC3C7C,KAAK,CAACiD,cAAc,CAACF,IAAI,CAACC,KAAK,CAAC;IAChC,IAAI/B,MAAM,GAAGjB,KAAK,CAACkB,OAAO,CAAC,CAAC,CAAC;IAC7BD,MAAM,CAACO,IAAI,CAAC,CAAC,CAAC,GAAGwB,KAAK;IACtBhD,KAAK,CAACkB,OAAO,CAAC,CAAC,CAAC,GAAGD,MAAM;EAC7B,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIzB,eAAe,CAACnB,SAAS,CAACqC,gBAAgB,GAAG,UAAUX,IAAI,EAAE;IACzD;IACA,IAAIC,KAAK,GAAG,IAAI,CAACA,KAAK;IACtB,IAAIW,GAAG,GAAGX,KAAK,CAACY,IAAI,CAAC,CAAC,CAAC;IACvBD,GAAG,CAACI,cAAc,GAAGhB,IAAI,CAACO,MAAM,GAAG,CAAC;IACpCK,GAAG,CAACuC,WAAW,GAAGnD,IAAI,CAACK,CAAC;IACxBJ,KAAK,CAACY,IAAI,CAAC,CAAC,CAAC,GAAGD,GAAG;EACvB,CAAC;EACD;AACJ;AACA;AACA;AACA;EACInB,eAAe,CAACnB,SAAS,CAAC2C,mBAAmB,GAAG,UAAUjB,IAAI,EAAE;IAC5D;IACA,IAAIC,KAAK,GAAG,IAAI,CAACA,KAAK;IACtB,IAAIiB,MAAM,GAAGjB,KAAK,CAACkB,OAAO,CAAC,CAAC,CAAC;IAC7BD,MAAM,CAACkC,YAAY,GAAGpD,IAAI,CAACI,CAAC;IAC5Bc,MAAM,CAACE,aAAa,GAAGpB,IAAI,CAACM,KAAK;IACjCL,KAAK,CAACkB,OAAO,CAAC,CAAC,CAAC,GAAGD,MAAM;EAC7B,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIzB,eAAe,CAACnB,SAAS,CAAC+E,UAAU,GAAG,YAAY;IAC/C,IAAI1B,IAAI;IACR,IAAI1B,KAAK,GAAG,IAAI,CAACA,KAAK;IACtB,IAAI,CAACqD,UAAU,GAAGrD,KAAK,CAACoC,YAAY,CAACiB,UAAU;IAC/C,IAAIC,WAAW,GAAGtD,KAAK,CAACuD,QAAQ,CAACC,WAAW,CAAC;MAAEC,EAAE,EAAEzD,KAAK,CAAC0D,OAAO,CAACD,EAAE,GAAG;IAAiB,CAAC,CAAC;IACzF,IAAIE,eAAe,GAAG3D,KAAK,CAACuD,QAAQ,CAACC,WAAW,CAAC;MAAEC,EAAE,EAAEzD,KAAK,CAAC0D,OAAO,CAACD,EAAE,GAAG;IAAwB,CAAC,CAAC;IACpG,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAG7D,KAAK,CAAC8D,eAAe,CAACrC,MAAM,EAAEmC,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;MAC9D,IAAI,CAACF,OAAO,GAAG1D,KAAK,CAACuD,QAAQ,CAACC,WAAW,CAAC;QAAEC,EAAE,EAAEzD,KAAK,CAAC0D,OAAO,CAACD,EAAE,GAAG,WAAW,GAAGG;MAAE,CAAC,CAAC;MACrFlC,IAAI,GAAG1B,KAAK,CAAC8D,eAAe,CAACF,CAAC,CAAC;MAC/B,IAAIlC,IAAI,CAACqC,WAAW,KAAK,YAAY,EAAE;QACnC,IAAIrC,IAAI,CAACsC,cAAc,CAAC3D,KAAK,GAAG,CAAC,IAAIqB,IAAI,CAACW,cAAc,CAAChC,KAAK,GAAG,CAAC,EAAE;UAChE,IAAI,CAAC4D,iBAAiB,CAACvC,IAAI,EAAEkC,CAAC,CAAC;QACnC;QACA,IAAIlC,IAAI,CAACwC,OAAO,IAAIxC,IAAI,CAACyC,kBAAkB,EAAE;UACzC,IAAI,CAACC,eAAe,CAAC1C,IAAI,EAAEkC,CAAC,CAAC;QACjC;MACJ,CAAC,MACI;QACD,IAAI,CAACS,iBAAiB,CAAC3C,IAAI,EAAEkC,CAAC,CAAC;QAC/B,IAAIlC,IAAI,CAAC4C,SAAS,CAACjE,KAAK,GAAG,CAAC,EAAE;UAC1B,IAAI,CAACkE,aAAa,CAAC7C,IAAI,EAAEkC,CAAC,CAAC;QAC/B;QACA,IAAIlC,IAAI,CAACwC,OAAO,IAAIxC,IAAI,CAACyC,kBAAkB,EAAE;UACzC,IAAI,CAACK,eAAe,CAAC9C,IAAI,EAAEkC,CAAC,CAAC;QACjC;MACJ;MACA,IAAI,CAAC,IAAI,CAAC5D,KAAK,CAACyE,YAAY,EAAE;QAC1BnB,WAAW,CAACoB,WAAW,CAAC,IAAI,CAAChB,OAAO,CAAC;MACzC;IACJ;IACA,IAAI,CAAC,IAAI,CAAC1D,KAAK,CAACyE,YAAY,EAAE;MAC1BnB,WAAW,CAACoB,WAAW,CAAC,IAAI,CAAChB,OAAO,CAAC;IACzC;IACA/E,kBAAkB,CAACqB,KAAK,CAACyE,YAAY,EAAEzE,KAAK,CAAC2E,SAAS,EAAErB,WAAW,EAAEtD,KAAK,CAAC4E,MAAM,CAAC;IAClF,OAAOjB,eAAe;EAC1B,CAAC;EACDnE,eAAe,CAACnB,SAAS,CAACkG,aAAa,GAAG,UAAU7C,IAAI,EAAEmD,KAAK,EAAE;IAC7D,IAAI7E,KAAK,GAAG,IAAI,CAACA,KAAK;IACtB,IAAI8E,WAAW,GAAG,CAAC,CAAC;IACpB,IAAIC,MAAM,GAAGzF,mBAAmB,CAACD,uBAAuB,CAACqC,IAAI,CAACsD,aAAa,CAAC,CAAC,CAAC,CAACC,KAAK,EAAEvD,IAAI,CAAC,EAAE,IAAI,CAAC2B,UAAU,CAAC;IAC7G,IAAI6B,QAAQ,GAAG,IAAI,GAAG,IAAI,CAACnD,OAAO,GAAG,GAAG,GAAG,IAAI,CAACC,OAAO,GAAG,IAAI,IACzD,IAAI,CAACD,OAAO,GAAG/B,KAAK,CAACiC,MAAM,GAAG8C,MAAM,CAAC5E,CAAC,CAAC,GAAG,GAAG,IAAI,IAAI,CAAC6B,OAAO,GAAGhC,KAAK,CAACiC,MAAM,GAAG8C,MAAM,CAAC3E,CAAC,CAAC;IAC7F0E,WAAW,GAAG;MACV,IAAI,EAAE9E,KAAK,CAAC0D,OAAO,CAACD,EAAE,GAAG,WAAW,GAAGoB,KAAK;MAC5C,GAAG,EAAEK,QAAQ;MACb,kBAAkB,EAAExD,IAAI,CAAC4C,SAAS,CAACa,SAAS;MAC5C,cAAc,EAAEzD,IAAI,CAAC4C,SAAS,CAACjE,KAAK;MACpC,QAAQ,EAAEqB,IAAI,CAAC4C,SAAS,CAACc,KAAK,IAAIpF,KAAK,CAACqF,UAAU,CAACH;IACvD,CAAC;IACD;AACR;AACA;AACA;AACA;AACA;IACQ,IAAIxB,OAAO,GAAG1D,KAAK,CAACuD,QAAQ,CAAC+B,QAAQ,CAACR,WAAW,CAAC;IAClD,IAAI,CAACS,mBAAmB,CAAC7B,OAAO,CAAC;IACjC,IAAI,CAAC,IAAI,CAAC1D,KAAK,CAACyE,YAAY,EAAE;MAC1BzE,KAAK,CAACwF,aAAa,CAACd,WAAW,CAAChB,OAAO,CAAC;IAC5C;EACJ,CAAC;EACDlE,eAAe,CAACnB,SAAS,CAACmG,eAAe,GAAG,UAAU9C,IAAI,EAAEmD,KAAK,EAAE;IAC/D,IAAI7E,KAAK,GAAG,IAAI,CAACA,KAAK;IACtB,IAAIyF,WAAW;IACf,IAAIC,OAAO;IACX,IAAIC,MAAM,GAAG,CAAC;IACd,IAAIC,MAAM,GAAG,CAAC;IACd,IAAIC,KAAK,GAAG,IAAI,CAACxC,UAAU,GAAG,CAAC,GAAG,IAAI,CAACA,UAAU,GAAG,GAAG,GAAG,IAAI,CAACA,UAAU;IACzE,IAAIyC,MAAM,GAAG,QAAQ;IACrB,IAAI7D,MAAM;IACV,IAAIH,OAAO,GAAG,CAAC;IACf,IAAIiE,WAAW;IACf,IAAIC,YAAY,GAAG,EAAE;IACrB,IAAIC,cAAc,GAAG,EAAE;IACvBA,cAAc,CAAC,CAAC,CAAC,GAAG,IAAI;IACxB,IAAIC,aAAa,GAAGxE,IAAI,CAACyE,oBAAoB;IAC7C,IAAIC,YAAY,GAAGpG,KAAK,CAACuD,QAAQ,CAACC,WAAW,CAAC;MAAEC,EAAE,EAAEzD,KAAK,CAAC0D,OAAO,CAACD,EAAE,GAAG,YAAY,GAAGoB;IAAM,CAAC,CAAC;IAC9F,IAAIE,MAAM,GAAGzF,mBAAmB,CAACD,uBAAuB,CAACqC,IAAI,CAACsD,aAAa,CAAC,CAAC,CAAC,CAACC,KAAK,EAAEvD,IAAI,CAAC,EAAE,IAAI,CAAC2B,UAAU,CAAC;IAC7G,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGnC,IAAI,CAACsD,aAAa,CAACvD,MAAM,EAAEmC,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;MAC3DmC,WAAW,GAAG,KAAK;MACnB9D,MAAM,GAAGjC,KAAK,CAACiC,MAAM,GAAG1D,kBAAkB,CAACmD,IAAI,CAACsD,aAAa,CAACpB,CAAC,CAAC,CAACqB,KAAK,EAAEvD,IAAI,CAAC;MAC7E+D,WAAW,GAAG/D,IAAI,CAACsD,aAAa,CAACpB,CAAC,CAAC,CAACvC,IAAI;MACxCY,MAAM,GAAGjC,KAAK,CAACiC,MAAM,GAAG1D,kBAAkB,CAACmD,IAAI,CAACsD,aAAa,CAACpB,CAAC,CAAC,CAACqB,KAAK,EAAEvD,IAAI,CAAC;MAC7EiE,MAAM,GAAI,IAAI,CAAC5D,OAAO,GAAGE,MAAM,GAAG8C,MAAM,CAAC5E,CAAC,GAAK,CAACuB,IAAI,CAACW,cAAc,CAAC/B,MAAM,GAAGmF,WAAW,CAACpF,KAAK,GAAG,CAAC,GAAGyB,OAAO,GAAG,CAAC,IACzGI,IAAI,CAACmE,GAAG,CAACR,KAAK,GAAG3D,IAAI,CAACoE,EAAE,GAAG,GAAG,CAAE,IAAI5E,IAAI,CAAC6E,aAAa,KAAK,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC,CAAE;MACrFX,MAAM,GAAI,IAAI,CAAC5D,OAAO,GAAGC,MAAM,GAAG8C,MAAM,CAAC3E,CAAC,GAAK,CAACsB,IAAI,CAACW,cAAc,CAAC/B,MAAM,GAAGmF,WAAW,CAACnF,MAAM,GAAG,CAAC,IAC5F4B,IAAI,CAACsE,GAAG,CAACX,KAAK,GAAG3D,IAAI,CAACoE,EAAE,GAAG,GAAG,CAAE,IAAI5E,IAAI,CAAC6E,aAAa,KAAK,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC,CAAE;MACrFX,MAAM,IAAKH,WAAW,CAACnF,MAAM,GAAG,CAAE;MAClC0F,YAAY,CAACpC,CAAC,CAAC,GAAG,IAAI,CAAC6C,cAAc,CAACd,MAAM,EAAEC,MAAM,EAAElE,IAAI,CAACsD,aAAa,CAACpB,CAAC,CAAC,EAAEkC,MAAM,CAAC;MACpF,IAAIlC,CAAC,KAAK,CAAC,IAAIsC,aAAa,KAAK,MAAM,EAAE;QACrC,KAAK,IAAIQ,CAAC,GAAG9C,CAAC,EAAE8C,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;UACzBA,CAAC,GAAIA,CAAC,KAAK,CAAC,GAAI,CAAC,GAAIA,CAAC,KAAK9C,CAAC,GAAK8C,CAAC,GAAG,CAAC,GAAIA,CAAC;UAC3C,IAAIT,cAAc,CAACS,CAAC,CAAC,IAAIjI,SAAS,CAACuH,YAAY,CAACpC,CAAC,CAAC,EAAEoC,YAAY,CAACU,CAAC,CAAC,CAAC,EAAE;YAClEX,WAAW,GAAG,IAAI;YAClBE,cAAc,CAACrC,CAAC,CAAC,GAAG,KAAK;YACzB;UACJ,CAAC,MACI;YACDqC,cAAc,CAACrC,CAAC,CAAC,GAAG,IAAI;UAC5B;QACJ;QACA,IAAImC,WAAW,EAAE;UACb,SAAS,CAAC;QACd;QACA;QACA,KAAK,IAAIzE,EAAE,GAAG,CAAC,EAAEC,EAAE,GAAG,IAAI,CAAC1B,oBAAoB,EAAEyB,EAAE,GAAGC,EAAE,CAACE,MAAM,EAAEH,EAAE,EAAE,EAAE;UACnE,IAAIvB,IAAI,GAAGwB,EAAE,CAACD,EAAE,CAAC;UACjB,IAAI7C,SAAS,CAACuH,YAAY,CAACpC,CAAC,CAAC,EAAE7D,IAAI,CAAC,EAAE;YAClCgG,WAAW,GAAG,IAAI;YAClB;UACJ;QACJ;MACJ;MACA,IAAIA,WAAW,EAAE;QACb;MACJ;MACA,IAAI,CAAClG,oBAAoB,CAACkD,IAAI,CAACiD,YAAY,CAACpC,CAAC,CAAC,CAAC;MAC/C8B,OAAO,GAAG,IAAI3G,UAAU,CAACiB,KAAK,CAAC0D,OAAO,CAACD,EAAE,GAAGoB,KAAK,GAAG,aAAa,GAAGjB,CAAC,EAAE+B,MAAM,EAAEC,MAAM,EAAEE,MAAM,EAAEpE,IAAI,CAACsD,aAAa,CAACpB,CAAC,CAAC,CAAC+C,IAAI,CAAC;MAC1HxH,WAAW,CAACa,KAAK,CAACuD,QAAQ,EAAEmC,OAAO,EAAEhE,IAAI,CAACkF,UAAU,EAAElF,IAAI,CAACkF,UAAU,CAACxB,KAAK,IAAIpF,KAAK,CAACqF,UAAU,CAACwB,SAAS,EAAET,YAAY,EAAE,KAAK,EAAEpG,KAAK,CAAC4E,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE5E,KAAK,CAACyE,YAAY,CAAC;IACzM;IACA,IAAI,CAAC,IAAI,CAACzE,KAAK,CAACyE,YAAY,EAAE;MAC1BzE,KAAK,CAACwF,aAAa,CAACd,WAAW,CAAC0B,YAAY,CAAC;IACjD;EACJ,CAAC;EACD5G,eAAe,CAACnB,SAAS,CAACgG,iBAAiB,GAAG,UAAU3C,IAAI,EAAEmD,KAAK,EAAE;IACjE,IAAI7E,KAAK,GAAG,IAAI,CAACA,KAAK;IACtB,IAAI0F,OAAO;IACX,IAAIzD,MAAM;IACV,IAAI6E,SAAS,GAAG,EAAE;IAClB,IAAIC,SAAS,GAAG,EAAE;IAClB,IAAIhC,MAAM;IACV,IAAIc,KAAK,GAAG,IAAI,CAACxC,UAAU,GAAG,CAAC,GAAG,IAAI,CAACA,UAAU,GAAG,GAAG,GAAG,IAAI,CAACA,UAAU;IACzE,IAAI2D,EAAE;IACN,IAAIC,EAAE;IACN,IAAIC,EAAE;IACN,IAAIC,EAAE;IACN,IAAIC,MAAM,GAAG;MACThC,KAAK,EAAE1D,IAAI,CAACsC,cAAc,CAACoB,KAAK,IAAIpF,KAAK,CAACqF,UAAU,CAACgC,aAAa;MAClEhH,KAAK,EAAEqB,IAAI,CAACsC,cAAc,CAAC3D;IAC/B,CAAC;IACD,IAAIiH,aAAa;IACjB,IAAI5D,OAAO;IACX,IAAIhC,IAAI,CAACsC,cAAc,CAAC3D,KAAK,GAAG,CAAC,EAAE;MAC/B,IAAIL,KAAK,CAACuH,aAAa,CAAC,CAAC,CAAC,CAACC,IAAI,KAAK,OAAO,EAAE;QACzC,KAAK,IAAId,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGhF,IAAI,CAACsD,aAAa,CAACvD,MAAM,EAAEiF,CAAC,EAAE,EAAE;UAChDhD,OAAO,GAAGnE,UAAU,CAACS,KAAK,CAAC0D,OAAO,CAACD,EAAE,GAAG,iBAAiB,GAAGoB,KAAK,GAAG,GAAG,GAAG6B,CAAC,CAAC;UAC5EY,aAAa,GAAG5D,OAAO,GAAGA,OAAO,CAAC+D,YAAY,CAAC,GAAG,CAAC,GAAG,IAAI;UAC1DxF,MAAM,GAAGjC,KAAK,CAACiC,MAAM,GAAG1D,kBAAkB,CAACmD,IAAI,CAACsD,aAAa,CAAC0B,CAAC,CAAC,CAACzB,KAAK,EAAEvD,IAAI,CAAC;UAC7EgE,OAAO,GAAG,IAAI9G,YAAY,CAACoB,KAAK,CAAC0D,OAAO,CAACD,EAAE,GAAG,iBAAiB,GAAGoB,KAAK,GAAG,GAAG,GAAG6B,CAAC,EAAE,aAAa,EAAEU,MAAM,EAAE1F,IAAI,CAACsC,cAAc,CAAC3D,KAAK,EAAE,IAAI,CAAC0B,OAAO,EAAE,IAAI,CAACC,OAAO,EAAEC,MAAM,CAAC;UACxKtD,kBAAkB,CAACqB,KAAK,CAACyE,YAAY,EAAE,IAAI,CAACf,OAAO,EAAE1D,KAAK,CAACuD,QAAQ,CAACmE,UAAU,CAAChC,OAAO,CAAC,EAAE1F,KAAK,CAAC4E,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAIxF,aAAa,CAAC,CAACkI,aAAa,EAAE,CAACA,aAAa,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;QACzL;QACA,IAAIrF,MAAM,KAAKjC,KAAK,CAACiC,MAAM,EAAE;UACzByD,OAAO,GAAG,IAAI9G,YAAY,CAACoB,KAAK,CAAC0D,OAAO,CAACD,EAAE,GAAG,iBAAiB,GAAGoB,KAAK,GAAG,GAAG,GAAGnD,IAAI,CAACsD,aAAa,CAACvD,MAAM,GAAG,CAAC,EAAE,aAAa,EAAE2F,MAAM,EAAE1F,IAAI,CAACsC,cAAc,CAAC3D,KAAK,EAAE,IAAI,CAAC0B,OAAO,EAAE,IAAI,CAACC,OAAO,EAAEhC,KAAK,CAACiC,MAAM,CAAC;UAC1MtD,kBAAkB,CAACqB,KAAK,CAACyE,YAAY,EAAE,IAAI,CAACf,OAAO,EAAE1D,KAAK,CAACuD,QAAQ,CAACmE,UAAU,CAAChC,OAAO,CAAC,EAAE1F,KAAK,CAAC4E,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAIxF,aAAa,CAAC,CAACkI,aAAa,EAAE,CAACA,aAAa,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;QACzL;MACJ,CAAC,MACI;QACD,KAAK,IAAIZ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGhF,IAAI,CAACsD,aAAa,CAACvD,MAAM,EAAEiF,CAAC,EAAE,EAAE;UAChDzE,MAAM,GAAGjC,KAAK,CAACiC,MAAM,GAAG1D,kBAAkB,CAACmD,IAAI,CAACsD,aAAa,CAAC0B,CAAC,CAAC,CAACzB,KAAK,EAAEvD,IAAI,CAAC;UAC7EqF,SAAS,GAAG,IAAI,CAACY,eAAe,CAAC1F,MAAM,EAAE,EAAE,EAAEjC,KAAK,CAAC;UACnD0D,OAAO,GAAGnE,UAAU,CAACS,KAAK,CAAC0D,OAAO,CAACD,EAAE,GAAG,iBAAiB,GAAGoB,KAAK,GAAG,GAAG,GAAG6B,CAAC,CAAC;UAC5EY,aAAa,GAAG5D,OAAO,GAAGA,OAAO,CAAC+D,YAAY,CAAC,GAAG,CAAC,GAAG,IAAI;UAC1D/B,OAAO,GAAG,IAAI1G,UAAU,CAACgB,KAAK,CAAC0D,OAAO,CAACD,EAAE,GAAG,iBAAiB,GAAGoB,KAAK,GAAG,GAAG,GAAG6B,CAAC,EAAE,aAAa,EAAEhF,IAAI,CAACsC,cAAc,CAAC3D,KAAK,EAAEqB,IAAI,CAACsC,cAAc,CAACoB,KAAK,IAAIpF,KAAK,CAACqF,UAAU,CAACgC,aAAa,EAAE,IAAI,EAAE,IAAI,EAAEN,SAAS,CAAC;UAC9MpI,kBAAkB,CAACqB,KAAK,CAACyE,YAAY,EAAE,IAAI,CAACf,OAAO,EAAE1D,KAAK,CAACuD,QAAQ,CAAC+B,QAAQ,CAACI,OAAO,CAAC,EAAE1F,KAAK,CAAC4E,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE0C,aAAa,EAAE,IAAI,CAAC;QACnJ;QACA,IAAIrF,MAAM,KAAKjC,KAAK,CAACiC,MAAM,EAAE;UACzB8E,SAAS,GAAG,IAAI,CAACY,eAAe,CAAC3H,KAAK,CAACiC,MAAM,EAAE,EAAE,EAAEjC,KAAK,CAAC;UACzD0D,OAAO,GAAGnE,UAAU,CAACS,KAAK,CAAC0D,OAAO,CAACD,EAAE,GAAG,iBAAiB,GAAGoB,KAAK,GAAG,GAAG,GAAGnD,IAAI,CAACsD,aAAa,CAACvD,MAAM,CAAC;UACpG6F,aAAa,GAAG5D,OAAO,GAAGA,OAAO,CAAC+D,YAAY,CAAC,GAAG,CAAC,GAAG,IAAI;UAC1D/B,OAAO,GAAG,IAAI1G,UAAU,CAACgB,KAAK,CAAC0D,OAAO,CAACD,EAAE,GAAG,iBAAiB,GAAGoB,KAAK,GAAG,GAAG,GAAGnD,IAAI,CAACsD,aAAa,CAACvD,MAAM,EAAE,aAAa,EAAEC,IAAI,CAACsC,cAAc,CAAC3D,KAAK,EAAEqB,IAAI,CAACsC,cAAc,CAACoB,KAAK,IAAIpF,KAAK,CAACqF,UAAU,CAACgC,aAAa,EAAE,IAAI,EAAE,IAAI,EAAEN,SAAS,CAAC;UACtOpI,kBAAkB,CAACqB,KAAK,CAACyE,YAAY,EAAE,IAAI,CAACf,OAAO,EAAE1D,KAAK,CAACuD,QAAQ,CAAC+B,QAAQ,CAACI,OAAO,CAAC,EAAE1F,KAAK,CAAC4E,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE0C,aAAa,EAAE,IAAI,CAAC;QACnJ;MACJ;IACJ;IACA,IAAI5F,IAAI,CAACW,cAAc,CAAChC,KAAK,GAAG,CAAC,EAAE;MAC/B0E,MAAM,GAAGzF,mBAAmB,CAACD,uBAAuB,CAACqC,IAAI,CAACsD,aAAa,CAAC,CAAC,CAAC,CAACC,KAAK,EAAEvD,IAAI,CAAC,EAAE,IAAI,CAAC2B,UAAU,CAAC;MACzG,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGlC,IAAI,CAACsD,aAAa,CAACvD,MAAM,EAAEmC,CAAC,EAAE,EAAE;QAChD3B,MAAM,GAAGjC,KAAK,CAACiC,MAAM,GAAG1D,kBAAkB,CAACmD,IAAI,CAACsD,aAAa,CAACpB,CAAC,CAAC,CAACqB,KAAK,EAAEvD,IAAI,CAAC;QAC7EsF,EAAE,GAAG,IAAI,CAACjF,OAAO,GAAGE,MAAM,GAAG8C,MAAM,CAAC5E,CAAC;QACrC8G,EAAE,GAAG,IAAI,CAACjF,OAAO,GAAGC,MAAM,GAAG8C,MAAM,CAAC3E,CAAC;QACrC8G,EAAE,GAAGF,EAAE,GAAItF,IAAI,CAACW,cAAc,CAAC/B,MAAM,GAAI4B,IAAI,CAACmE,GAAG,CAACR,KAAK,GAAG3D,IAAI,CAACoE,EAAE,GAAG,GAAG,CAAE,IAAI5E,IAAI,CAACkG,YAAY,KAAK,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC,CAAE;QACtHT,EAAE,GAAGF,EAAE,GAAIvF,IAAI,CAACW,cAAc,CAAC/B,MAAM,GAAI4B,IAAI,CAACsE,GAAG,CAACX,KAAK,GAAG3D,IAAI,CAACoE,EAAE,GAAG,GAAG,CAAE,IAAI5E,IAAI,CAACkG,YAAY,KAAK,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC,CAAE;QACtHd,SAAS,GAAG,IAAI,GAAGE,EAAE,GAAG,GAAG,GAAGC,EAAE,GAAG,KAAK,GAAGC,EAAE,GAAG,GAAG,GAAGC,EAAE;QACxD,IAAI,CAACU,cAAc,CAACnG,IAAI,EAAEmD,KAAK,EAAEiC,SAAS,EAAE,EAAE,EAAElD,CAAC,CAAC;MACtD;IACJ;EACJ,CAAC;EACDpE,eAAe,CAACnB,SAAS,CAACsJ,eAAe,GAAG,UAAU1F,MAAM,EAAE8E,SAAS,EAAE/G,KAAK,EAAE;IAC5E,IAAI+E,MAAM;IACV,IAAI+C,OAAO;IACX,IAAId,EAAE;IACN,IAAIC,EAAE;IACN,IAAIC,EAAE;IACN,IAAIC,EAAE;IACN,KAAK,IAAIvD,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAG7D,KAAK,CAACoC,YAAY,CAAC4C,aAAa,CAACvD,MAAM,EAAEmC,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;MACzEmB,MAAM,GAAGzF,mBAAmB,CAACD,uBAAuB,CAACW,KAAK,CAACoC,YAAY,CAAC4C,aAAa,CAACpB,CAAC,CAAC,CAACqB,KAAK,EAAEjF,KAAK,CAACoC,YAAY,CAAC,EAAE,IAAI,CAACiB,UAAU,CAAC;MACrI,IAAIO,CAAC,GAAG,CAAC,GAAGC,GAAG,EAAE;QACbiE,OAAO,GAAGxI,mBAAmB,CAACD,uBAAuB,CAACW,KAAK,CAACoC,YAAY,CAAC4C,aAAa,CAACpB,CAAC,GAAG,CAAC,CAAC,CAACqB,KAAK,EAAEjF,KAAK,CAACoC,YAAY,CAAC,EAAE,IAAI,CAACiB,UAAU,CAAC;MAC9I,CAAC,MACI;QACDyE,OAAO,GAAGxI,mBAAmB,CAACD,uBAAuB,CAACW,KAAK,CAACoC,YAAY,CAAC4C,aAAa,CAAC,CAAC,CAAC,CAACC,KAAK,EAAEjF,KAAK,CAACoC,YAAY,CAAC,EAAE,IAAI,CAACiB,UAAU,CAAC;MAC1I;MACA2D,EAAE,GAAG,IAAI,CAACjF,OAAO,GAAGE,MAAM,GAAG8C,MAAM,CAAC5E,CAAC;MACrC8G,EAAE,GAAG,IAAI,CAACjF,OAAO,GAAGC,MAAM,GAAG8C,MAAM,CAAC3E,CAAC;MACrC8G,EAAE,GAAG,IAAI,CAACnF,OAAO,GAAGE,MAAM,GAAG6F,OAAO,CAAC3H,CAAC;MACtCgH,EAAE,GAAG,IAAI,CAACnF,OAAO,GAAGC,MAAM,GAAG6F,OAAO,CAAC1H,CAAC;MACtC2G,SAAS,GAAGA,SAAS,CAACgB,MAAM,CAAC,CAACnE,CAAC,GAAG,IAAI,GAAG,IAAI,IAAIoD,EAAE,GAAG,GAAG,GAAGC,EAAE,GAAG,GAAG,GAAG,IAAI,GAAGC,EAAE,GAAG,GAAG,GAAGC,EAAE,GAAG,GAAG,CAAC;IACtG;IACA,OAAOJ,SAAS;EACpB,CAAC;EACDvH,eAAe,CAACnB,SAAS,CAAC4F,iBAAiB,GAAG,UAAUvC,IAAI,EAAEmD,KAAK,EAAE;IACjE,IAAI7E,KAAK,GAAG,IAAI,CAACA,KAAK;IACtB,IAAIgI,YAAY;IAChB,IAAIjD,MAAM;IACV,IAAIgC,SAAS,GAAG,EAAE;IAClB,IAAID,SAAS,GAAG,EAAE;IAClB,IAAImB,aAAa,GAAG,EAAE;IACtB,IAAIC,aAAa,GAAG,EAAE;IACtB,IAAIlB,EAAE,GAAG,IAAI,CAACjF,OAAO;IACrB,IAAImF,EAAE;IACN,IAAID,EAAE,GAAG,IAAI,CAACjF,OAAO;IACrB,IAAImF,EAAE;IACN,IAAIgB,cAAc;IAClB,IAAI1G,MAAM,GAAGC,IAAI,CAACsD,aAAa,CAACvD,MAAM;IACtC;IACA,KAAK,IAAImC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGnC,MAAM,EAAEmC,CAAC,EAAE,EAAE;MAC7BoE,YAAY,GAAGtG,IAAI,CAACsD,aAAa,CAACpB,CAAC,CAAC,CAACqB,KAAK;MAC1CF,MAAM,GAAGzF,mBAAmB,CAACD,uBAAuB,CAACqC,IAAI,CAACsD,aAAa,CAACpB,CAAC,CAAC,CAACqB,KAAK,EAAEvD,IAAI,CAAC,EAAE,IAAI,CAAC2B,UAAU,CAAC;MACzG6D,EAAE,GAAG,IAAI,CAACnF,OAAO,GAAG/B,KAAK,CAACiC,MAAM,GAAG8C,MAAM,CAAC5E,CAAC;MAC3CgH,EAAE,GAAG,IAAI,CAACnF,OAAO,GAAGhC,KAAK,CAACiC,MAAM,GAAG8C,MAAM,CAAC3E,CAAC;MAC3C,IAAIgI,IAAI,GAAGlB,EAAE,GAAIxF,IAAI,CAACW,cAAc,CAAC/B,MAAM,GAAGyE,MAAM,CAAC5E,CAAC,IAAIuB,IAAI,CAACkG,YAAY,KAAK,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,CAAE;MACnG,IAAIS,IAAI,GAAGlB,EAAE,GAAIzF,IAAI,CAACW,cAAc,CAAC/B,MAAM,GAAGyE,MAAM,CAAC3E,CAAC,IAAIsB,IAAI,CAACkG,YAAY,KAAK,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,CAAE;MACnGb,SAAS,GAAG,IAAI,GAAGC,EAAE,GAAG,GAAG,GAAGC,EAAE,GAAG,GAAG,GAAG,IAAI,GAAGC,EAAE,GAAG,GAAG,GAAGC,EAAE;MAC7DL,SAAS,GAAG,IAAI,GAAGI,EAAE,GAAG,GAAG,GAAGC,EAAE,GAAG,KAAK,GAAGiB,IAAI,GAAG,GAAG,GAAGC,IAAI;MAC5D,IAAI3G,IAAI,CAAC4G,qBAAqB,GAAG,CAAC,KAAK5G,IAAI,CAAC6G,cAAc,CAAClI,KAAK,GAAG,CAAC,IAAIqB,IAAI,CAAC8G,cAAc,CAACnI,KAAK,GAAG,CAAC,CAAC,IAC/FqB,IAAI,CAAC+G,SAAS,KAAK,UAAU,IAAIzI,KAAK,CAACuH,aAAa,CAAC,CAAC,CAAC,CAACC,IAAI,KAAK,OAAO,EAAE;QAC7EW,cAAc,GAAG,IAAI,CAACO,iBAAiB,CAAChH,IAAI,EAAEsG,YAAY,EAAEC,aAAa,EAAEC,aAAa,CAAC;QACzFD,aAAa,GAAGE,cAAc,CAAC,CAAC,CAAC;QACjCD,aAAa,GAAGC,cAAc,CAAC,CAAC,CAAC;MACrC;MACA,IAAI,CAACN,cAAc,CAACnG,IAAI,EAAEmD,KAAK,EAAEiC,SAAS,EAAEoB,aAAa,EAAEtE,CAAC,CAAC;MAC7D,IAAI,CAAC+E,cAAc,CAACjH,IAAI,EAAEmD,KAAK,EAAEkC,SAAS,EAAEkB,aAAa,EAAErE,CAAC,CAAC;IACjE;EACJ,CAAC;EACDpE,eAAe,CAACnB,SAAS,CAACqK,iBAAiB,GAAG,UAAUhH,IAAI,EAAEsG,YAAY,EAAEY,SAAS,EAAEC,SAAS,EAAE;IAC9F,IAAI5D,KAAK,GAAG+C,YAAY;IACxB,IAAI7H,CAAC;IACL,IAAIC,CAAC;IACL,IAAI2E,MAAM;IACV,IAAI+D,KAAK,GAAGpH,IAAI,CAACqH,YAAY;IAC7B,IAAIC,SAAS,GAAG,EAAE;IAClB,KAAK,IAAItC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGhF,IAAI,CAAC4G,qBAAqB,EAAE5B,CAAC,EAAE,EAAE;MACjDzB,KAAK,IAAI,CAACvD,IAAI,CAAC+G,SAAS,KAAK,UAAU,GAAG/G,IAAI,CAACuH,gBAAgB,GAAGvH,IAAI,CAACqH,YAAY,CAACG,QAAQ,KACvFxH,IAAI,CAAC4G,qBAAqB,GAAG,CAAC,CAAC;MACpC,IAAI9J,MAAM,CAACyG,KAAK,EAAE6D,KAAK,CAAC,EAAE;QACtB/D,MAAM,GAAGzF,mBAAmB,CAACD,uBAAuB,CAAC4F,KAAK,EAAEvD,IAAI,CAAC,EAAE,IAAI,CAAC2B,UAAU,CAAC;QACnFlD,CAAC,GAAG,IAAI,CAAC4B,OAAO,GAAG,IAAI,CAAC/B,KAAK,CAACiC,MAAM,GAAG8C,MAAM,CAAC5E,CAAC;QAC/CC,CAAC,GAAG,IAAI,CAAC4B,OAAO,GAAG,IAAI,CAAChC,KAAK,CAACiC,MAAM,GAAG8C,MAAM,CAAC3E,CAAC;QAC/C,IAAI+I,SAAS,GAAGhJ,CAAC,GAAIuB,IAAI,CAAC8G,cAAc,CAAClI,MAAM,GAAGyE,MAAM,CAAC5E,CAAC,IAAIuB,IAAI,CAACkG,YAAY,KAAK,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,CAAE;QACvG,IAAIwB,SAAS,GAAGhJ,CAAC,GAAIsB,IAAI,CAAC8G,cAAc,CAAClI,MAAM,GAAGyE,MAAM,CAAC3E,CAAC,IAAIsB,IAAI,CAACkG,YAAY,KAAK,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,CAAE;QACvGgB,SAAS,GAAGA,SAAS,CAACb,MAAM,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,CAAChG,OAAO,GAAG,GAAG,GAAG,IAAI,CAACC,OAAO,GACpE,IAAI,GAAG7B,CAAC,GAAG,GAAG,GAAGC,CAAC,CAAC;QACzByI,SAAS,GAAGA,SAAS,CAACd,MAAM,CAAC,GAAG,GAAG,GAAG,GAAG5H,CAAC,GAAG,GAAG,GAAGC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAI+I,SAAU,GAAG,GAAG,GAC/EC,SAAU,CAAC;MACpB;IACJ;IACAJ,SAAS,CAACjG,IAAI,CAAC6F,SAAS,CAAC;IACzBI,SAAS,CAACjG,IAAI,CAAC8F,SAAS,CAAC;IACzB,OAAOG,SAAS;EACpB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIxJ,eAAe,CAACnB,SAAS,CAAC+F,eAAe,GAAG,UAAU1C,IAAI,EAAEmD,KAAK,EAAE;IAC/D,IAAI,CAAChF,oBAAoB,GAAG,EAAE;IAC9B,IAAIwJ,UAAU;IACd,IAAI,IAAI,CAACrJ,KAAK,CAACsJ,YAAY,EAAE;MACzBD,UAAU,GAAG,IAAI,CAACrJ,KAAK,CAACsJ,YAAY,CAACC,YAAY;IACrD;IACA,IAAIvJ,KAAK,GAAG,IAAI,CAACA,KAAK;IACtB,IAAI2F,MAAM,GAAG,CAAC;IACd,IAAIC,MAAM,GAAG,CAAC;IACd,IAAIQ,YAAY,GAAGpG,KAAK,CAACuD,QAAQ,CAACC,WAAW,CAAC;MAAEC,EAAE,EAAEzD,KAAK,CAAC0D,OAAO,CAACD,EAAE,GAAG,YAAY,GAAGoB;IAAM,CAAC,CAAC;IAC9F,IAAIa,OAAO;IACX,IAAIX,MAAM;IACV,IAAIyE,SAAS;IACb,IAAIC,WAAW;IACf,IAAIC,aAAa,GAAGhI,IAAI,CAAC6E,aAAa,KAAK,QAAQ;IACnD,IAAIzE,OAAO,GAAG,CAAC;IACf,IAAI6H,UAAU;IACd,IAAIC,KAAK;IACT,IAAIC,UAAU,GAAG,EAAE;IACnB,IAAI9D,WAAW;IACf,IAAIC,YAAY,GAAG,EAAE;IACrB,IAAIC,cAAc,GAAG,EAAE;IACvBA,cAAc,CAAC,CAAC,CAAC,GAAG,IAAI;IACxB,IAAIC,aAAa,GAAGxE,IAAI,CAACyE,oBAAoB;IAC7C,IAAI2D,aAAa,GAAGpI,IAAI,CAAC+G,SAAS,KAAK,UAAU,IAAI/G,IAAI,CAACqI,cAAc,KAAK,cAAc,GAAG,GAAG,GAAG,CAAC;IACrG,IAAI9H,MAAM,GAAGjC,KAAK,CAACiC,MAAM,GAAGP,IAAI,CAACW,cAAc,CAAC/B,MAAM;IACtD2B,MAAM,GAAIyH,aAAa,GAAI,CAACzH,MAAM,GAAGA,MAAM;IAC3C,KAAK,IAAI2B,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGnC,IAAI,CAACsD,aAAa,CAACvD,MAAM,EAAEmC,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;MAC3DmC,WAAW,GAAG,KAAK;MACnBhB,MAAM,GAAGzF,mBAAmB,CAACD,uBAAuB,CAACqC,IAAI,CAACsD,aAAa,CAACpB,CAAC,CAAC,CAACqB,KAAK,GAAG6E,aAAa,EAAEpI,IAAI,CAAC,EAAE,IAAI,CAAC2B,UAAU,CAAC;MACzH,IAAI,CAAC2G,KAAK,CAACjF,MAAM,CAAC5E,CAAC,CAAC,IAAI,CAAC6J,KAAK,CAACjF,MAAM,CAAC3E,CAAC,CAAC,EAAE;QACtCuF,MAAM,GAAG,IAAI,CAAC5D,OAAO,GAAG,CAACE,MAAM,GAAGP,IAAI,CAACW,cAAc,CAAC/B,MAAM,GAAGwB,OAAO,IAAIiD,MAAM,CAAC5E,CAAC;QAClFyF,MAAM,GAAG,IAAI,CAAC5D,OAAO,GAAG,CAACC,MAAM,GAAGP,IAAI,CAACW,cAAc,CAAC/B,MAAM,GAAGwB,OAAO,IAAIiD,MAAM,CAAC3E,CAAC;QAClFyJ,UAAU,GAAGI,UAAU,CAACtE,MAAM,CAACuE,OAAO,CAAC,CAAC,CAAC,CAAC,KAAKD,UAAU,CAAC,IAAI,CAAClI,OAAO,CAACmI,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,GACvFvE,MAAM,GAAG,IAAI,CAAC5D,OAAO,IAAI,CAAC2H,aAAa,IAAM/D,MAAM,GAAG,IAAI,CAAC5D,OAAO,IAAI2H,aAAc,GAAI,KAAK,GAAG,OAAO;MACjH;MACAE,KAAK,GAAGlI,IAAI,CAACsD,aAAa,CAACpB,CAAC,CAAC;MAC7B4F,SAAS,GAAGI,KAAK,CAACjD,IAAI;MACtB;MACA,IAAIjF,IAAI,CAACyI,UAAU,IAAIjE,aAAa,KAAK,MAAM,EAAE;QAC7C,IAAIkE,YAAY,GAAG1I,IAAI,CAACsD,aAAa,CAACpB,CAAC,CAAC,CAACwG,YAAY;QACrD,IAAIC,QAAQ,GAAG,KAAK,CAAC;QACrB,IAAIhJ,IAAI,GAAG,KAAK,CAAC;QACjB,IAAIkF,aAAa,GAAG7E,IAAI,CAAC6E,aAAa;QACtC,IAAI+D,UAAU,GAAGtK,KAAK,CAACc,aAAa,CAACT,KAAK;QAC1C,IAAIkK,UAAU,GAAGH,YAAY,CAAC3I,MAAM;QACpC,KAAK,IAAI+I,GAAG,GAAGD,UAAU,GAAG,CAAC,EAAEC,GAAG,IAAI,CAAC,EAAE,EAAEA,GAAG,EAAE;UAC5CH,QAAQ,GAAGD,YAAY,CAACK,SAAS,CAAC,CAAC,EAAED,GAAG,CAAC,GAAG,KAAK;UACjDnJ,IAAI,GAAGvC,WAAW,CAACuL,QAAQ,EAAE3I,IAAI,CAACkF,UAAU,CAAC,CAACvG,KAAK;UACnD,IAAIsF,MAAM,KAAK2E,UAAU,GAAG,CAAC,GAAI3E,MAAM,GAAGtE,IAAI,GAAG,CAAC,IAAI,CAAC,IAAIsE,MAAM,GAAGtE,IAAI,GAAG,CAAC,IAAIiJ,UAAU,GACpF/D,aAAa,KAAK,SAAS,KAAMZ,MAAM,IAAI2E,UAAU,GAAG,CAAC,IAAI3E,MAAM,GAAGtE,IAAI,IAAIiJ,UAAU,IACrF3E,MAAM,IAAI2E,UAAU,GAAG,CAAC,IAAI3E,MAAM,GAAGtE,IAAI,IAAI,CAAE,CAAC,IAAMkF,aAAa,KAAK,QAAQ,KAChFZ,MAAM,GAAGtE,IAAI,IAAIiJ,UAAU,GAAG,CAAC,IAAI3E,MAAM,GAAGtE,IAAI,IAAIiJ,UAAU,GAAG,CAAC,CAAG,EAAE;YAC5Ed,SAAS,GAAGgB,GAAG,KAAKD,UAAU,GAAG,CAAC,GAAGH,YAAY,GAAGC,QAAQ;YAC5DT,KAAK,CAACvI,IAAI,CAAChB,KAAK,GAAGvB,WAAW,CAAC0K,SAAS,EAAE9H,IAAI,CAACkF,UAAU,CAAC,CAACvG,KAAK;YAChEuJ,KAAK,CAACjD,IAAI,GAAG6C,SAAS;YACtB;UACJ;QACJ;MACJ;MACA;MACAxD,YAAY,CAACpC,CAAC,CAAC,GAAG,IAAI,CAAC6C,cAAc,CAACd,MAAM,EAAEC,MAAM,EAAEgE,KAAK,EAAEC,UAAU,CAAC;MACxE,IAAIjG,CAAC,KAAK,CAAC,EAAE;QACT6F,WAAW,GAAG9D,MAAM;MACxB,CAAC,MACI,IAAI/B,CAAC,KAAKlC,IAAI,CAACsD,aAAa,CAACvD,MAAM,GAAG,CAAC,IAAIC,IAAI,CAAC+G,SAAS,KAAK,UAAU,EAAE;QAC3EkB,UAAU,GAAG7K,WAAW,CAAC0K,SAAS,EAAE9H,IAAI,CAACkF,UAAU,CAAC,CAACtG,MAAM;QAC3DqJ,UAAU,IAAIhE,MAAM;QACpB6D,SAAS,GAAIG,UAAU,GAAGF,WAAW,GAAI,EAAE,GAAGD,SAAS;MAC3D;MACA;MACA,IAAI5F,CAAC,KAAK,CAAC,IAAIsC,aAAa,KAAK,MAAM,EAAE;QACrC,KAAK,IAAIQ,CAAC,GAAG9C,CAAC,EAAE8C,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;UACzBA,CAAC,GAAIA,CAAC,KAAK,CAAC,GAAI,CAAC,GAAKA,CAAC,KAAK9C,CAAC,GAAK8C,CAAC,GAAG,CAAC,GAAIA,CAAE;UAC7C,IAAIT,cAAc,CAACS,CAAC,CAAC,IAAIjI,SAAS,CAACuH,YAAY,CAACpC,CAAC,CAAC,EAAEoC,YAAY,CAACU,CAAC,CAAC,CAAC,EAAE;YAClEX,WAAW,GAAG,IAAI;YAClBE,cAAc,CAACrC,CAAC,CAAC,GAAG,KAAK;YACzB;UACJ,CAAC,MACI;YACDqC,cAAc,CAACrC,CAAC,CAAC,GAAG,IAAI;UAC5B;QACJ;MACJ;MACA,IAAI,CAACmC,WAAW,IAAIsD,UAAU,EAAE;QAC5BtD,WAAW,GAAGtH,SAAS,CAACuH,YAAY,CAACpC,CAAC,CAAC,EAAEyF,UAAU,CAAC;QACpD,IAAItD,WAAW,EAAE;UACb,IAAI1F,KAAK,GAAG,IAAI,CAACqK,uBAAuB,CAACrB,UAAU,EAAErD,YAAY,CAACpC,CAAC,CAAC,CAAC;UACrE,IAAIvD,KAAK,GAAG,CAAC,EAAE;YACXmJ,SAAS,GAAG9K,QAAQ,CAAC2B,KAAK,EAAEqB,IAAI,CAACsD,aAAa,CAACpB,CAAC,CAAC,CAACwG,YAAY,EAAE1I,IAAI,CAACkF,UAAU,CAAC;YAChFb,WAAW,GAAG,KAAK;UACvB;QACJ;MACJ;MACAL,OAAO,GAAG,IAAI3G,UAAU,CAACiB,KAAK,CAAC0D,OAAO,CAACD,EAAE,GAAGoB,KAAK,GAAG,aAAa,GAAGjB,CAAC,EAAE+B,MAAM,EAAEC,MAAM,EAAE,CAAC5F,KAAK,CAAC4C,SAAS,GAAGiH,UAAU,GAAGA,UAAU,IAAI,KAAK,GAAG,OAAO,GAAGA,UAAU,IAAI,OAAO,GAAG,KAAK,GAAGA,UAAU,EAAEL,SAAS,EAAE,EAAE,EAAE,SAAS,CAAC;MAC5N,IAAIzD,WAAW,EAAE;QACb,SAAS,CAAC;MACd;;MACA,IAAI,CAAClG,oBAAoB,CAACkD,IAAI,CAACiD,YAAY,CAACpC,CAAC,CAAC,CAAC;MAC/CzE,WAAW,CAACa,KAAK,CAACuD,QAAQ,EAAEmC,OAAO,EAAEkE,KAAK,CAAChD,UAAU,EAAEgD,KAAK,CAAChD,UAAU,CAACxB,KAAK,IAAIpF,KAAK,CAACqF,UAAU,CAACwB,SAAS,EAAET,YAAY,EAAE,KAAK,EAAEpG,KAAK,CAAC4E,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE5E,KAAK,CAACyE,YAAY,CAAC;IAC3M;IACA,IAAI,CAAC,IAAI,CAACzE,KAAK,CAACyE,YAAY,EAAE;MAC1B,IAAI,CAACf,OAAO,CAACgB,WAAW,CAAC0B,YAAY,CAAC;IAC1C;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACI5G,eAAe,CAACnB,SAAS,CAACqM,uBAAuB,GAAG,UAAUrB,UAAU,EAAEsB,SAAS,EAAE;IACjF,IAAIC,QAAQ,GAAGvB,UAAU,CAAClJ,CAAC;IAC3B,IAAI0K,QAAQ,GAAGD,QAAQ,GAAGvB,UAAU,CAAChJ,KAAK;IAC1C,IAAIyK,OAAO,GAAGH,SAAS,CAACxK,CAAC;IACzB,IAAI4K,OAAO,GAAGD,OAAO,GAAGH,SAAS,CAACtK,KAAK;IACvC,IAAIA,KAAK,GAAG,CAAC;IACb,IAAIyK,OAAO,GAAGF,QAAQ,IAAIE,OAAO,GAAGD,QAAQ,IAAIE,OAAO,GAAGF,QAAQ,EAAE;MAChExK,KAAK,GAAG0K,OAAO,GAAGF,QAAQ;IAC9B,CAAC,MACI,IAAIC,OAAO,GAAGF,QAAQ,IAAIE,OAAO,GAAGD,QAAQ,IAAIE,OAAO,GAAGF,QAAQ,EAAE;MACrExK,KAAK,GAAG,CAAC;IACb,CAAC,MACI,IAAI0K,OAAO,GAAGH,QAAQ,IAAIG,OAAO,GAAGF,QAAQ,IAAIC,OAAO,GAAGF,QAAQ,EAAE;MACrEvK,KAAK,GAAGuK,QAAQ,GAAGE,OAAO;IAC9B,CAAC,MACI,IAAIC,OAAO,GAAGH,QAAQ,IAAIG,OAAO,GAAGF,QAAQ,IAAIC,OAAO,GAAGF,QAAQ,EAAE;MACrEvK,KAAK,GAAGuK,QAAQ,GAAGE,OAAO;IAC9B;IACA,OAAOzK,KAAK;EAChB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIb,eAAe,CAACnB,SAAS,CAACoI,cAAc,GAAG,UAAUd,MAAM,EAAEC,MAAM,EAAEgE,KAAK,EAAE9D,MAAM,EAAE;IAChF,IAAIA,MAAM,KAAK,QAAQ,EAAE;MACrBH,MAAM,IAAKiE,KAAK,CAACvI,IAAI,CAAChB,KAAK,GAAG,CAAE;IACpC,CAAC,MACI,IAAIyF,MAAM,KAAK,KAAK,EAAE;MACvBH,MAAM,IAAIiE,KAAK,CAACvI,IAAI,CAAChB,KAAK;IAC9B,CAAC,MACI;MACD;MACAsF,MAAM,GAAGA,MAAM;IACnB;IACAC,MAAM,IAAKgE,KAAK,CAACvI,IAAI,CAACf,MAAM,GAAG,CAAE;IACjC,OAAO,IAAIrB,IAAI,CAAC0G,MAAM,EAAEC,MAAM,EAAEgE,KAAK,CAACvI,IAAI,CAAChB,KAAK,EAAEuJ,KAAK,CAACvI,IAAI,CAACf,MAAM,CAAC;EACxE,CAAC;EACDd,eAAe,CAACnB,SAAS,CAACwJ,cAAc,GAAG,UAAUnG,IAAI,EAAEmD,KAAK,EAAEmG,aAAa,EAAE9C,aAAa,EAAE+C,SAAS,EAAE;IACvG,IAAIC,WAAW;IACf,IAAIlL,KAAK,GAAG,IAAI,CAACA,KAAK;IACtB,IAAIgJ,SAAS;IACb,IAAItF,OAAO;IACX,IAAIhC,IAAI,CAACW,cAAc,CAAChC,KAAK,GAAG,CAAC,EAAE;MAC/BqD,OAAO,GAAGnE,UAAU,CAACS,KAAK,CAAC0D,OAAO,CAACD,EAAE,GAAG,iBAAiB,GAAGoB,KAAK,GAAG,GAAG,GAAGoG,SAAS,CAAC;MACpFjC,SAAS,GAAGtF,OAAO,GAAGA,OAAO,CAAC+D,YAAY,CAAC,GAAG,CAAC,GAAG,IAAI;MACtDyD,WAAW,GAAG,IAAIlM,UAAU,CAACgB,KAAK,CAAC0D,OAAO,CAACD,EAAE,GAAG,iBAAiB,GAAGoB,KAAK,GAAG,GAAG,GAAGoG,SAAS,EAAE,aAAa,EAAEvJ,IAAI,CAACW,cAAc,CAAChC,KAAK,EAAEqB,IAAI,CAACW,cAAc,CAAC+C,KAAK,IAAIpF,KAAK,CAACqF,UAAU,CAAC2F,aAAa,EAAE,IAAI,EAAE,IAAI,EAAEA,aAAa,CAAC;MAC9N;AACZ;AACA;AACA;AACA;AACA;MACYtH,OAAO,GAAG1D,KAAK,CAACuD,QAAQ,CAAC+B,QAAQ,CAAC4F,WAAW,CAAC;MAC9C,IAAI,CAAC3F,mBAAmB,CAAC7B,OAAO,CAAC;MACjC/E,kBAAkB,CAACqB,KAAK,CAACyE,YAAY,EAAEzE,KAAK,CAACwF,aAAa,EAAE9B,OAAO,EAAE1D,KAAK,CAAC4E,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAEoE,SAAS,CAAC;IACvH;IACA,IAAItH,IAAI,CAAC8G,cAAc,CAACnI,KAAK,GAAG,CAAC,EAAE;MAC/BqD,OAAO,GAAGnE,UAAU,CAACS,KAAK,CAAC0D,OAAO,CAACD,EAAE,GAAG,iBAAiB,GAAGoB,KAAK,GAAG,GAAG,GAAGoG,SAAS,CAAC;MACpFjC,SAAS,GAAGtF,OAAO,GAAGA,OAAO,CAAC+D,YAAY,CAAC,GAAG,CAAC,GAAG,IAAI;MACtDyD,WAAW,GAAG,IAAIlM,UAAU,CAACgB,KAAK,CAAC0D,OAAO,CAACD,EAAE,GAAG,iBAAiB,GAAGoB,KAAK,GAAG,GAAG,GAAGoG,SAAS,EAAE,aAAa,EAAEvJ,IAAI,CAAC8G,cAAc,CAACnI,KAAK,EAAEqB,IAAI,CAAC8G,cAAc,CAACpD,KAAK,IAAIpF,KAAK,CAACqF,UAAU,CAAC6C,aAAa,EAAE,IAAI,EAAE,IAAI,EAAEA,aAAa,CAAC;MAC9N;AACZ;AACA;AACA;AACA;AACA;MACYxE,OAAO,GAAG1D,KAAK,CAACuD,QAAQ,CAAC+B,QAAQ,CAAC4F,WAAW,CAAC;MAC9C,IAAI,CAAC3F,mBAAmB,CAAC7B,OAAO,CAAC;MACjC/E,kBAAkB,CAACqB,KAAK,CAACyE,YAAY,EAAEzE,KAAK,CAACwF,aAAa,EAAE9B,OAAO,EAAE1D,KAAK,CAAC4E,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAEoE,SAAS,CAAC;IACvH;EACJ,CAAC;EACDxJ,eAAe,CAACnB,SAAS,CAACsK,cAAc,GAAG,UAAUjH,IAAI,EAAEmD,KAAK,EAAEkC,SAAS,EAAE6B,SAAS,EAAEqC,SAAS,EAAE;IAC/F,IAAIjL,KAAK,GAAG,IAAI,CAACA,KAAK;IACtB,IAAImL,WAAW;IACf,IAAInC,SAAS;IACb,IAAItF,OAAO;IACX,IAAIhC,IAAI,CAACsC,cAAc,CAAC3D,KAAK,GAAG,CAAC,EAAE;MAC/BqD,OAAO,GAAGnE,UAAU,CAACS,KAAK,CAAC0D,OAAO,CAACD,EAAE,GAAG,iBAAiB,GAAGoB,KAAK,GAAG,GAAG,GAAGoG,SAAS,CAAC;MACpFjC,SAAS,GAAGtF,OAAO,GAAGA,OAAO,CAAC+D,YAAY,CAAC,GAAG,CAAC,GAAG,IAAI;MACtD0D,WAAW,GAAG,IAAInM,UAAU,CAACgB,KAAK,CAAC0D,OAAO,CAACD,EAAE,GAAG,iBAAiB,GAAGoB,KAAK,GAAG,GAAG,GAAGoG,SAAS,EAAE,aAAa,EAAEvJ,IAAI,CAACsC,cAAc,CAAC3D,KAAK,EAAEqB,IAAI,CAACsC,cAAc,CAACoB,KAAK,IAAIpF,KAAK,CAACqF,UAAU,CAACgC,aAAa,EAAE,IAAI,EAAE3F,IAAI,CAACsC,cAAc,CAACmB,SAAS,EAAE4B,SAAS,CAAC;MACnPpI,kBAAkB,CAACqB,KAAK,CAACyE,YAAY,EAAE,IAAI,CAACf,OAAO,EAAE1D,KAAK,CAACuD,QAAQ,CAAC+B,QAAQ,CAAC6F,WAAW,CAAC,EAAEnL,KAAK,CAAC4E,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAEoE,SAAS,CAAC;IAC7I;IACA,IAAItH,IAAI,CAAC6G,cAAc,CAAClI,KAAK,GAAG,CAAC,EAAE;MAC/BqD,OAAO,GAAGnE,UAAU,CAACS,KAAK,CAAC0D,OAAO,CAACD,EAAE,GAAG,iBAAiB,GAAGoB,KAAK,GAAG,GAAG,GAAGoG,SAAS,CAAC;MACpFjC,SAAS,GAAGtF,OAAO,GAAGA,OAAO,CAAC+D,YAAY,CAAC,GAAG,CAAC,GAAG,IAAI;MACtD0D,WAAW,GAAG,IAAInM,UAAU,CAACgB,KAAK,CAAC0D,OAAO,CAACD,EAAE,GAAG,iBAAiB,GAAGoB,KAAK,GAAG,GAAG,GAAGoG,SAAS,EAAE,aAAa,EAAEvJ,IAAI,CAAC6G,cAAc,CAAClI,KAAK,EAAEqB,IAAI,CAAC6G,cAAc,CAACnD,KAAK,IAAIpF,KAAK,CAACqF,UAAU,CAAC+F,aAAa,EAAE,IAAI,EAAE1J,IAAI,CAAC6G,cAAc,CAACpD,SAAS,EAAEyD,SAAS,CAAC;MACnPjK,kBAAkB,CAACqB,KAAK,CAACyE,YAAY,EAAE,IAAI,CAACf,OAAO,EAAE1D,KAAK,CAACuD,QAAQ,CAAC+B,QAAQ,CAAC6F,WAAW,CAAC,EAAEnL,KAAK,CAAC4E,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAEoE,SAAS,CAAC;IAC7I;EACJ,CAAC;EACDxJ,eAAe,CAACnB,SAAS,CAACkH,mBAAmB,GAAG,UAAU7B,OAAO,EAAE;IAC/D,IAAIA,OAAO,EAAE;MACTA,OAAO,CAAC2H,KAAK,CAACC,aAAa,GAAG,MAAM;IACxC;EACJ,CAAC;EACD,OAAO9L,eAAe;AAC1B,CAAC,CAACN,QAAQ,CAAE;AACZ,SAASM,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}