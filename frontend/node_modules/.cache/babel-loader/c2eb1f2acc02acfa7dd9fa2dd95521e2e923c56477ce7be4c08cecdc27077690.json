{"ast":null,"code":"import { measureText } from '../../smithchart/utils/helper';\nvar AreaBounds = /** @class */function () {\n  function AreaBounds() {}\n  AreaBounds.prototype.calculateAreaBounds = function (smithchart, title, bounds) {\n    var margin = smithchart.margin;\n    var border = smithchart.border;\n    var spaceValue = this.getLegendSpace(smithchart, bounds);\n    var x = spaceValue['leftLegendWidth'] + margin.left + border.width;\n    var rightSpace = spaceValue['rightLegendWidth'] + margin.left + margin.right + 2 * border.width;\n    var width = smithchart.availableSize['width'] - (x + rightSpace);\n    var y = margin['top'] + 2 * smithchart.elementSpacing + spaceValue['modelTitleHeight'] + spaceValue['modelsubTitleHeight'] + spaceValue['topLegendHeight'] + border.width;\n    var height = smithchart.availableSize['height'] - (spaceValue['modelTitleHeight'] + 2 * smithchart.elementSpacing + spaceValue['modelsubTitleHeight'] + margin['top'] + spaceValue['topLegendHeight'] + spaceValue['bottomLegendHeight']);\n    return {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    };\n  };\n  AreaBounds.prototype.getLegendSpace = function (smithchart, bounds) {\n    var title = smithchart.title;\n    var legend = smithchart.legendSettings;\n    var position = legend.position.toLowerCase();\n    var subtitleHeight = 0;\n    var modelsubTitleHeight = 0;\n    var titleHeight = 0;\n    var font = smithchart.font;\n    var modelTitleHeight = 0;\n    var itemPadding = 10;\n    var legendBorder = legend.border.width;\n    var leftLegendWidth = 0;\n    var rightLegendWidth = 0;\n    var topLegendHeight = 0;\n    var bottomLegendHeight = 0;\n    var ltheight = 0;\n    var space;\n    if (legend['visible']) {\n      space = bounds.width + itemPadding / 2 + smithchart.elementSpacing + 2 * legendBorder;\n      leftLegendWidth = position === 'left' ? space : 0;\n      rightLegendWidth = position === 'right' ? space : 0;\n      ltheight = legend['title'].visible ? measureText(legend['title'].text, font)['height'] : 0;\n      topLegendHeight = position === 'top' ? smithchart.elementSpacing + bounds.height + ltheight : 0;\n      bottomLegendHeight = position === 'bottom' ? smithchart.elementSpacing + bounds.height + ltheight : 0;\n    }\n    subtitleHeight = measureText(title.subtitle.text, font)['height'];\n    modelTitleHeight = title.text === '' || !title['visible'] ? 0 : titleHeight;\n    modelsubTitleHeight = title['subtitle'].text === '' || !title['subtitle'].visible ? 0 : subtitleHeight;\n    return {\n      leftLegendWidth: leftLegendWidth,\n      rightLegendWidth: rightLegendWidth,\n      topLegendHeight: topLegendHeight,\n      bottomLegendHeight: bottomLegendHeight,\n      modelTitleHeight: modelTitleHeight,\n      modelsubTitleHeight: modelsubTitleHeight\n    };\n  };\n  return AreaBounds;\n}();\nexport { AreaBounds };","map":{"version":3,"names":["measureText","AreaBounds","prototype","calculateAreaBounds","smithchart","title","bounds","margin","border","spaceValue","getLegendSpace","x","left","width","rightSpace","right","availableSize","y","elementSpacing","height","legend","legendSettings","position","toLowerCase","subtitleHeight","modelsubTitleHeight","titleHeight","font","modelTitleHeight","itemPadding","legendBorder","leftLegendWidth","rightLegendWidth","topLegendHeight","bottomLegendHeight","ltheight","space","visible","text","subtitle"],"sources":["/Users/thonghoangdanh/FullStack/birdnest/node_modules/@syncfusion/ej2-charts/src/smithchart/utils/area.js"],"sourcesContent":["import { measureText } from '../../smithchart/utils/helper';\nvar AreaBounds = /** @class */ (function () {\n    function AreaBounds() {\n    }\n    AreaBounds.prototype.calculateAreaBounds = function (smithchart, title, bounds) {\n        var margin = smithchart.margin;\n        var border = smithchart.border;\n        var spaceValue = this.getLegendSpace(smithchart, bounds);\n        var x = spaceValue['leftLegendWidth'] + margin.left + border.width;\n        var rightSpace = spaceValue['rightLegendWidth'] + margin.left + margin.right + (2 * border.width);\n        var width = smithchart.availableSize['width'] - (x + rightSpace);\n        var y = margin['top'] + (2 * smithchart.elementSpacing) + spaceValue['modelTitleHeight'] +\n            spaceValue['modelsubTitleHeight'] + spaceValue['topLegendHeight'] + border.width;\n        var height = smithchart.availableSize['height'] - (spaceValue['modelTitleHeight'] +\n            (2 * smithchart.elementSpacing) + spaceValue['modelsubTitleHeight'] + margin['top'] +\n            spaceValue['topLegendHeight'] + spaceValue['bottomLegendHeight']);\n        return { x: x, y: y, width: width, height: height };\n    };\n    AreaBounds.prototype.getLegendSpace = function (smithchart, bounds) {\n        var title = smithchart.title;\n        var legend = smithchart.legendSettings;\n        var position = legend.position.toLowerCase();\n        var subtitleHeight = 0;\n        var modelsubTitleHeight = 0;\n        var titleHeight = 0;\n        var font = smithchart.font;\n        var modelTitleHeight = 0;\n        var itemPadding = 10;\n        var legendBorder = legend.border.width;\n        var leftLegendWidth = 0;\n        var rightLegendWidth = 0;\n        var topLegendHeight = 0;\n        var bottomLegendHeight = 0;\n        var ltheight = 0;\n        var space;\n        if (legend['visible']) {\n            space = (bounds.width + (itemPadding / 2) + smithchart.elementSpacing + (2 * legendBorder));\n            leftLegendWidth = position === 'left' ? space : 0;\n            rightLegendWidth = position === 'right' ? space : 0;\n            ltheight = legend['title'].visible ? measureText(legend['title'].text, font)['height'] : 0;\n            topLegendHeight = position === 'top' ? smithchart.elementSpacing + bounds.height + ltheight : 0;\n            bottomLegendHeight = position === 'bottom' ? smithchart.elementSpacing + bounds.height + ltheight : 0;\n        }\n        subtitleHeight = measureText(title.subtitle.text, font)['height'];\n        modelTitleHeight = (title.text === '' || !title['visible']) ? 0 : (titleHeight);\n        modelsubTitleHeight = (title['subtitle'].text === '' || !title['subtitle'].visible) ? 0 : (subtitleHeight);\n        return {\n            leftLegendWidth: leftLegendWidth, rightLegendWidth: rightLegendWidth,\n            topLegendHeight: topLegendHeight, bottomLegendHeight: bottomLegendHeight,\n            modelTitleHeight: modelTitleHeight, modelsubTitleHeight: modelsubTitleHeight\n        };\n    };\n    return AreaBounds;\n}());\nexport { AreaBounds };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}