{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/* eslint-disable jsdoc/require-returns */\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n/* eslint-disable jsdoc/require-param */\n/* eslint-disable valid-jsdoc */\n/**\n * Chart legend\n */\nimport { remove, Browser, extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { LegendOptions, BaseLegend } from '../../common/legend/legend';\nimport { textTrim, removeElement, RectOption, withInBounds, blazorTemplatesReset } from '../../common/utils/helper';\nimport { getUnicodeText } from '../../common/utils/helper';\nimport { measureText, Rect, getElement } from '@syncfusion/ej2-svg-base';\nimport { legendRender, legendClick, regSub, regSup } from '../../common/model/constants';\nimport { textWrap } from '../../common/utils/helper';\n/**\n * `Legend` module is used to render legend for the chart.\n */\nvar Legend = /** @class */function (_super) {\n  __extends(Legend, _super);\n  function Legend(chart) {\n    var _this = _super.call(this, chart) || this;\n    _this.library = _this;\n    _this.addEventListener();\n    return _this;\n  }\n  /**\n   * Binding events for legend module.\n   */\n  Legend.prototype.addEventListener = function () {\n    if (this.chart.isDestroyed) {\n      return;\n    }\n    this.chart.on(Browser.touchMoveEvent, this.mouseMove, this);\n    this.chart.on('click', this.click, this);\n    this.chart.on(Browser.touchEndEvent, this.mouseEnd, this);\n  };\n  /**\n   * UnBinding events for legend module.\n   */\n  Legend.prototype.removeEventListener = function () {\n    if (this.chart.isDestroyed) {\n      return;\n    }\n    this.chart.off(Browser.touchMoveEvent, this.mouseMove);\n    this.chart.off('click', this.click);\n    this.chart.off(Browser.touchEndEvent, this.mouseEnd);\n  };\n  /**\n   * To handle mosue move for legend module\n   */\n  Legend.prototype.mouseMove = function (e) {\n    if (this.chart.legendSettings.visible && !this.chart.isTouch) {\n      this.move(e);\n      if (this.chart.highlightModule && (this.chart.highlightMode !== 'None' || this.chart.legendSettings.enableHighlight)) {\n        var legendItemsId = [this.legendID + '_text_', this.legendID + '_shape_marker_', this.legendID + '_shape_', this.legendID + '_g_'];\n        var targetId = e.target.id;\n        var index = void 0;\n        for (var _i = 0, legendItemsId_1 = legendItemsId; _i < legendItemsId_1.length; _i++) {\n          var id = legendItemsId_1[_i];\n          if (targetId.indexOf(id) > -1) {\n            index = parseInt(targetId.split(id)[1], 10);\n            this.chart.highlightModule.legendSelection(this.chart, index, e.target, e.type);\n            break;\n          }\n        }\n        // this.click(e);\n      }\n    }\n  };\n  /**\n   * To handle mosue end for legend module\n   */\n  Legend.prototype.mouseEnd = function (e) {\n    if (this.chart.legendSettings.visible && this.chart.isTouch) {\n      this.move(e);\n    }\n  };\n  /**\n   * Get the legend options.\n   *\n   * @returns {void}\n   * @private\n   */\n  Legend.prototype.getLegendOptions = function (visibleSeriesCollection, chart) {\n    this.legendCollections = [];\n    var seriesType;\n    var fill;\n    var colors = [];\n    this.isRtlEnable = chart.enableRtl;\n    this.isReverse = !this.isRtlEnable && chart.legendSettings.reverse;\n    if (visibleSeriesCollection.length > 1) {\n      this.legend.mode = 'Series';\n    }\n    for (var _i = 0, visibleSeriesCollection_1 = visibleSeriesCollection; _i < visibleSeriesCollection_1.length; _i++) {\n      var series = visibleSeriesCollection_1[_i];\n      if (this.legend.mode === 'Series') {\n        if (series.category !== 'Indicator') {\n          seriesType = chart.chartAreaType === 'PolarRadar' ? series.drawType : series.type;\n          // To set legend color when use pointColorMapping\n          fill = series.pointColorMapping && series.points.length > 0 ? series.points[0].interior ? series.points[0].interior : series.interior : series.interior;\n          this.legendCollections.push(new LegendOptions(series.name, fill, series.legendShape, series.category === 'TrendLine' ? this.chart.series[series.sourceIndex].trendlines[series.index].visible : series.visible, seriesType, series.legendImageUrl, series.marker.shape, series.marker.visible));\n        }\n      } else if (this.legend.mode === 'Point') {\n        var _loop_1 = function (points) {\n          seriesType = chart.chartAreaType === 'PolarRadar' ? series.drawType : series.type;\n          fill = points.interior ? points.interior : series.interior;\n          if (this_1.legendCollections.filter(function (i) {\n            return i.text === points.x.toString();\n          }).length === 0) {\n            this_1.legendCollections.push(new LegendOptions(points.x.toString(), fill, series.legendShape, series.category === 'TrendLine' ? this_1.chart.series[series.sourceIndex].trendlines[series.index].visible : points.visible, seriesType, '', series.marker.shape, series.marker.visible));\n          }\n        };\n        var this_1 = this;\n        for (var _a = 0, _b = series.points; _a < _b.length; _a++) {\n          var points = _b[_a];\n          _loop_1(points);\n        }\n      } else if (this.legend.mode === 'Range') {\n        for (var _c = 0, _d = series.points; _c < _d.length; _c++) {\n          var points = _d[_c];\n          seriesType = chart.chartAreaType === 'PolarRadar' ? series.drawType : series.type;\n          fill = points.interior ? points.interior : series.interior;\n          var legendLabel = 'Others';\n          if (colors.indexOf(fill) < 0) {\n            colors.push(fill);\n            if (chart.rangeColorSettings.length >= 1 && chart.rangeColorSettings[0].colors.length === 1) {\n              for (var _e = 0, _f = chart.rangeColorSettings; _e < _f.length; _e++) {\n                var rangeMap = _f[_e];\n                if (rangeMap.colors[0] === fill) {\n                  legendLabel = rangeMap.label;\n                }\n              }\n              this.legendCollections.push(new LegendOptions(legendLabel, fill, series.legendShape, series.category === 'TrendLine' ? this.chart.series[series.sourceIndex].trendlines[series.index].visible : points.visible, seriesType, '', series.marker.shape, series.marker.visible));\n            }\n          }\n        }\n      } else {\n        if (this.legendCollections.length === 0 && chart.rangeColorSettings.length > 0) {\n          var startLabel = chart.rangeColorSettings[0].start.toString();\n          var endLabel = chart.rangeColorSettings[chart.rangeColorSettings.length - 1].end.toString();\n          this.legendCollections.push(new LegendOptions(startLabel, series.interior, 'Rectangle', true, seriesType, '', series.marker.shape, series.marker.visible));\n          this.legendCollections.push(new LegendOptions(endLabel, series.interior, 'Rectangle', true, seriesType, '', series.marker.shape, series.marker.visible));\n        }\n      }\n    }\n    if (this.isReverse && chart.legendSettings.mode !== 'Gradient') {\n      this.legendCollections.reverse();\n    }\n  };\n  /** @private */\n  Legend.prototype.getLegendBounds = function (availableSize, legendBounds, legend) {\n    this.calculateLegendTitle(legend, legendBounds);\n    this.isTitle = legend.title ? true : false;\n    this.chartRowCount = 1;\n    this.rowHeights = [];\n    this.columnHeights = [];\n    this.pageHeights = [];\n    var padding = legend.padding;\n    var titlePosition = legend.titlePosition;\n    var extraHeight = 0;\n    var legendOption;\n    var extraWidth = 0;\n    var arrowWidth = this.arrowWidth;\n    var arrowHeight = this.arrowHeight;\n    var verticalArrowSpace = this.isVertical && !legend.enablePages ? arrowHeight : 0;\n    var titleSpace = this.isTitle && titlePosition === 'Top' ? this.legendTitleSize.height + this.fivePixel : 0;\n    titleSpace = this.isTitle && this.isVertical && titlePosition !== 'Top' ? this.legendTitleSize.height + this.fivePixel : titleSpace;\n    if (!this.isVertical) {\n      extraHeight = !legend.height ? availableSize.height / 100 * 5 : 0;\n    } else {\n      extraWidth = !legend.width ? availableSize.width / 100 * 5 : 0;\n    }\n    legendBounds.height += extraHeight;\n    legendBounds.width += extraWidth;\n    var shapeWidth = legend.shapeWidth;\n    var shapePadding = legend.shapePadding;\n    var maximumWidth = 0;\n    var rowWidth = 0;\n    var legendWidth = 0;\n    var columnHeight = 0;\n    var columnCount = 0;\n    var rowCount = 0;\n    var titlePlusArrowSpace = 0;\n    var legendEventArgs;\n    var render = false;\n    this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle).height, legend.shapeHeight);\n    for (var i = 0; i < this.legendCollections.length; i++) {\n      legendOption = this.legendCollections[i];\n      if (regSub.test(legendOption.text)) {\n        legendOption.text = getUnicodeText(legendOption.text, regSub);\n      }\n      if (regSup.test(legendOption.text)) {\n        legendOption.text = getUnicodeText(legendOption.text, regSup);\n      }\n      legendEventArgs = {\n        fill: legendOption.fill,\n        text: legendOption.text,\n        shape: legendOption.shape,\n        markerShape: legendOption.markerShape,\n        name: legendRender,\n        cancel: false\n      };\n      this.chart.trigger(legendRender, legendEventArgs);\n      legendOption.render = !legendEventArgs.cancel;\n      legendOption.text = legendEventArgs.text;\n      legendOption.fill = legendEventArgs.fill;\n      legendOption.shape = legendEventArgs.shape;\n      legendOption.markerShape = legendEventArgs.markerShape;\n      legendOption.textSize = measureText(legendOption.text, legend.textStyle);\n      shapeWidth = legendOption.text ? legend.shapeWidth : 0;\n      shapePadding = legendOption.text ? legend.shapePadding : 0;\n      if (legendOption.render && legendOption.text) {\n        render = true;\n        legendWidth = shapeWidth + shapePadding + (legend.maximumLabelWidth ? legend.maximumLabelWidth : legendOption.textSize.width) + (!this.isVertical ? i == 0 ? padding : this.itemPadding : padding);\n        rowWidth = rowWidth + legendWidth;\n        if (!legend.enablePages && !this.isVertical) {\n          titlePlusArrowSpace = this.isTitle && titlePosition !== 'Top' ? this.legendTitleSize.width + this.fivePixel : 0;\n          titlePlusArrowSpace += arrowWidth;\n        }\n        this.getLegendHeight(legendOption, legend, legendBounds, rowWidth, this.maxItemHeight, padding);\n        if (legendBounds.width < padding + rowWidth + titlePlusArrowSpace || this.isVertical) {\n          maximumWidth = Math.max(maximumWidth, rowWidth + padding + titlePlusArrowSpace - (this.isVertical ? 0 : legendWidth));\n          if (rowCount === 0 && legendWidth !== rowWidth) {\n            rowCount = 1;\n          }\n          rowWidth = this.isVertical ? 0 : legendWidth;\n          rowCount++;\n          columnCount = 0;\n          columnHeight = verticalArrowSpace;\n          //columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding + titleSpace + verticalArrowSpace;\n        }\n\n        var len = rowCount > 0 ? rowCount - 1 : 0;\n        this.rowHeights[len] = Math.max(this.rowHeights[len] ? this.rowHeights[len] : 0, legendOption.textSize.height);\n        // this.maxItemHeight = Math.max(this.maxItemHeight, legendOption.textSize.height);\n        this.columnHeights[columnCount] = (this.columnHeights[columnCount] ? this.columnHeights[columnCount] : 0) + legendOption.textSize.height + (this.isVertical ? i == 0 ? padding : this.itemPadding : padding);\n        columnCount++;\n      }\n    }\n    columnHeight = Math.max.apply(null, this.columnHeights) + padding + titleSpace;\n    columnHeight = Math.max(columnHeight, this.maxItemHeight + padding + padding + titleSpace);\n    this.isPaging = legendBounds.height < columnHeight;\n    if (this.isPaging && !legend.enablePages) {\n      if (this.isVertical) {\n        // eslint-disable-next-line no-self-assign\n        columnHeight = columnHeight;\n      } else {\n        columnHeight = this.maxItemHeight + padding + padding + (titlePosition === 'Top' ? titleSpace : 0);\n      }\n    }\n    this.totalPages = rowCount;\n    if (!this.isPaging && !this.isVertical) {\n      rowWidth += this.isTitle && titlePosition !== 'Top' ? this.fivePixel + this.legendTitleSize.width + this.fivePixel : 0;\n    }\n    if (render) {\n      this.setBounds(Math.max(rowWidth + padding, maximumWidth), columnHeight, legend, legendBounds);\n    } else {\n      this.setBounds(0, 0, legend, legendBounds);\n    }\n  };\n  /** @private */\n  Legend.prototype.getLegendHeight = function (legendOption, legend, legendBounds, rowWidth, legendHeight, padding) {\n    var legendWidth = legendOption.textSize.width;\n    var textPadding = legend.shapePadding + padding * 2 + legend.shapeWidth;\n    switch (legend.textWrap) {\n      case 'Wrap':\n      case 'AnyWhere':\n        if (legendWidth > legend.maximumLabelWidth || legendWidth + rowWidth > legendBounds.width) {\n          legendOption.textCollection = textWrap(legendOption.text, legend.maximumLabelWidth ? Math.min(legend.maximumLabelWidth, legendBounds.width - textPadding) : legendBounds.width - textPadding, legend.textStyle);\n        } else {\n          legendOption.textCollection.push(legendOption.text);\n        }\n        legendOption.textSize.height = legendHeight * legendOption.textCollection.length;\n        break;\n    }\n  };\n  /** @private */\n  Legend.prototype.getRenderPoint = function (legendOption, start, textPadding, prevLegend, rect, count, firstLegend, rowCount) {\n    var padding = this.legend.padding;\n    var textWidth = textPadding + (this.legend.maximumLabelWidth ? this.legend.maximumLabelWidth : prevLegend.textSize.width);\n    var previousBound = prevLegend.location.x + (!this.isRtlEnable ? textWidth : -textWidth);\n    if (this.isWithinBounds(previousBound, (this.legend.maximumLabelWidth ? this.legend.maximumLabelWidth : legendOption.textSize.width) + textPadding - this.itemPadding, rect) || this.isVertical) {\n      legendOption.location.x = start.x;\n      if (count !== firstLegend) this.chartRowCount++;\n      legendOption.location.y = count === firstLegend ? prevLegend.location.y : prevLegend.location.y + (this.isVertical ? prevLegend.textSize.height : this.rowHeights[this.chartRowCount - 2]) + (this.isVertical ? this.itemPadding : padding);\n    } else {\n      legendOption.location.x = count === firstLegend ? prevLegend.location.x : previousBound;\n      legendOption.location.y = prevLegend.location.y;\n    }\n    var availwidth = !this.isRtlEnable ? this.legendBounds.x + this.legendBounds.width - (legendOption.location.x + textPadding - this.itemPadding - this.legend.shapeWidth / 2) : legendOption.location.x - textPadding + this.itemPadding + this.legend.shapeWidth / 2 - this.legendBounds.x;\n    availwidth = this.legend.maximumLabelWidth ? Math.min(this.legend.maximumLabelWidth, availwidth) : availwidth;\n    if (this.legend.textOverflow == \"Ellipsis\" && this.legend.textWrap == \"Normal\") {\n      legendOption.text = textTrim(+availwidth.toFixed(4), legendOption.text, this.legend.textStyle);\n    }\n  };\n  Legend.prototype.isWithinBounds = function (previousBound, textWidth, rect) {\n    if (!this.isRtlEnable) {\n      return previousBound + textWidth > rect.x + rect.width + this.legend.shapeWidth / 2;\n    } else {\n      return previousBound - textWidth < rect.x - this.legend.shapeWidth / 2;\n    }\n  };\n  /** @private */\n  Legend.prototype.LegendClick = function (index, event) {\n    var chart = this.chart;\n    var seriesIndex = chart.legendSettings.mode === 'Series' ? index : 0;\n    var legendIndex = !this.isReverse ? index : this.legendCollections.length - 1 - index;\n    var series = chart.visibleSeries[seriesIndex];\n    var legend = this.legendCollections[legendIndex];\n    var changeDetection = 'isProtectedOnChange';\n    if (chart.legendSettings.mode === 'Series') {\n      var legendClickArgs = {\n        legendText: legend.text,\n        legendShape: legend.shape,\n        chart: chart.isBlazor ? {} : chart,\n        series: series,\n        points: series.points,\n        name: legendClick,\n        cancel: false\n      };\n      this.chart.trigger(legendClick, legendClickArgs);\n      series.legendShape = legendClickArgs.legendShape;\n      if (series.fill !== null) {\n        chart.visibleSeries[index].interior = series.fill;\n      }\n      if (chart.legendSettings.toggleVisibility) {\n        if (series.category === 'TrendLine') {\n          if (!chart.series[series.sourceIndex].trendlines[series.index].visible) {\n            chart.series[series.sourceIndex].trendlines[series.index].visible = true;\n          } else {\n            chart.series[series.sourceIndex].trendlines[series.index].visible = false;\n          }\n        } else {\n          series.chart[changeDetection] = true;\n          this.changeSeriesVisiblity(series, series.visible);\n        }\n        legend.visible = series.category === 'TrendLine' ? chart.series[series.sourceIndex].trendlines[series.index].visible : series.visible;\n        this.refreshLegendToggle(chart, series);\n      } else if (chart.highlightModule) {\n        chart.highlightModule.legendSelection(chart, index, event.target, event.type);\n      } else if (chart.selectionModule) {\n        chart.selectionModule.legendSelection(chart, index, event.target, event.type);\n      }\n      series.chart[changeDetection] = false;\n    } else if (chart.legendSettings.mode === 'Point') {\n      var point = series.points[index];\n      var legendClickArgs = {\n        legendText: legend.text,\n        legendShape: legend.shape,\n        chart: chart.isBlazor ? {} : chart,\n        series: series,\n        points: [point],\n        name: legendClick,\n        cancel: false\n      };\n      this.chart.trigger(legendClick, legendClickArgs);\n      if (chart.legendSettings.toggleVisibility) {\n        point.visible = !point.visible;\n        var legendOption = this.legendCollections[index];\n        legendOption.visible = point.visible;\n        this.refreshLegendToggle(chart, series);\n      }\n    } else if (chart.legendSettings.mode === 'Range') {\n      var points = [];\n      var legendOption = this.legendCollections[index];\n      for (var _i = 0, _a = series.points; _i < _a.length; _i++) {\n        var point = _a[_i];\n        if (legendOption.fill === (point.interior || series.interior)) {\n          points.push(point);\n        }\n      }\n      var legendClickArgs = {\n        legendText: legend.text,\n        legendShape: legend.shape,\n        chart: chart.isBlazor ? {} : chart,\n        series: series,\n        points: points,\n        name: legendClick,\n        cancel: false\n      };\n      this.chart.trigger(legendClick, legendClickArgs);\n      if (chart.legendSettings.toggleVisibility) {\n        legendOption.visible = !legendOption.visible;\n        for (var _b = 0, points_1 = points; _b < points_1.length; _b++) {\n          var point = points_1[_b];\n          point.visible = !point.visible;\n        }\n        this.refreshLegendToggle(chart, series);\n      }\n    }\n  };\n  Legend.prototype.refreshLegendToggle = function (chart, series) {\n    var selectedDataIndexes = [];\n    if (chart.selectionModule) {\n      selectedDataIndexes = extend([], chart.selectionModule.selectedDataIndexes, null, true);\n    }\n    if (chart.svgObject.childNodes.length > 0 && !chart.enableAnimation && !chart.enableCanvas) {\n      while (chart.svgObject.lastChild) {\n        chart.svgObject.removeChild(chart.svgObject.lastChild);\n      }\n      remove(chart.svgObject);\n    }\n    chart.animateSeries = false;\n    chart.redraw = chart.enableAnimation;\n    chart.rotatedDataLabelCollections = [];\n    removeElement(getElement(chart.element.id + '_Secondary_Element').querySelectorAll('.ejSVGTooltip')[0]);\n    blazorTemplatesReset(chart);\n    this.redrawSeriesElements(series, chart);\n    chart.removeSvg();\n    chart.refreshAxis();\n    series.refreshAxisLabel();\n    this.refreshSeries(chart.visibleSeries);\n    for (var _i = 0, _a = chart.visibleSeries; _i < _a.length; _i++) {\n      var series_1 = _a[_i];\n      if (!isNullOrUndefined(series_1)) {\n        chart.markerRender.removeHighlightedMarker(series_1, null, true);\n      }\n    }\n    chart.refreshBound();\n    chart.trigger('loaded', {\n      chart: chart\n    });\n    if (selectedDataIndexes.length > 0) {\n      chart.selectionModule.selectedDataIndexes = selectedDataIndexes;\n      chart.selectionModule.redrawSelection(chart, chart.selectionMode);\n    }\n    if (chart.highlightModule && chart.highlightMode !== 'None' || chart.legendSettings.enableHighlight) {\n      chart.highlightModule.redrawSelection(chart, chart.highlightMode);\n    }\n    chart.redraw = false;\n  };\n  Legend.prototype.changeSeriesVisiblity = function (series, visibility) {\n    series.visible = !visibility;\n    if (this.isSecondaryAxis(series.xAxis)) {\n      series.xAxis.internalVisibility = series.xAxis.series.some(function (value) {\n        return value.visible;\n      });\n    }\n    if (this.isSecondaryAxis(series.yAxis)) {\n      series.yAxis.internalVisibility = series.yAxis.series.some(function (value) {\n        return value.visible;\n      });\n    }\n  };\n  Legend.prototype.isSecondaryAxis = function (axis) {\n    return this.chart.axes.indexOf(axis) > -1;\n  };\n  Legend.prototype.redrawSeriesElements = function (series, chart) {\n    if (!chart.redraw) {\n      return null;\n    }\n    removeElement(chart.element.id + '_Series_' + (series.index === undefined ? series.category : series.index) + '_DataLabelCollections');\n  };\n  Legend.prototype.refreshSeries = function (seriesCollection) {\n    for (var _i = 0, seriesCollection_1 = seriesCollection; _i < seriesCollection_1.length; _i++) {\n      var series = seriesCollection_1[_i];\n      if (series.type.indexOf('Spline') > -1) {\n        var isArea = series.type.indexOf('Area') > -1 || series.drawType.indexOf('Area') > -1;\n        var isRange = series.type.indexOf('Range') > -1;\n        this.chart['spline' + (isArea ? isRange ? 'RangeArea' : 'Area' : '') + 'SeriesModule'].findSplinePoint(series);\n      }\n      series.position = undefined;\n    }\n  };\n  /**\n   * To show the tooltip for the trimmed text in legend.\n   *\n   * @returns {void}\n   */\n  Legend.prototype.click = function (event) {\n    var _this = this;\n    if (!this.chart.legendSettings.visible) {\n      return;\n    }\n    var pageX = this.chart.mouseX;\n    var pageY = this.chart.mouseY;\n    var legendRegion = [];\n    var targetId = event.target.id.indexOf(\"_chart_legend_g_\") > -1 ? event.target.firstChild['id'] : event.target.id;\n    var legendItemsId = [this.legendID + '_text_', this.legendID + '_shape_marker_', this.legendID + '_shape_'];\n    var seriesIndex;\n    for (var _i = 0, legendItemsId_2 = legendItemsId; _i < legendItemsId_2.length; _i++) {\n      var id = legendItemsId_2[_i];\n      if (targetId.indexOf(id) > -1) {\n        seriesIndex = parseInt(targetId.split(id)[1], 10);\n        this.LegendClick(seriesIndex, event);\n        break;\n      }\n    }\n    if (targetId.indexOf(this.legendID + '_pageup') > -1) {\n      this.changePage(event, true);\n    } else if (targetId.indexOf(this.legendID + '_pagedown') > -1) {\n      this.changePage(event, false);\n    }\n    if (this.chart.enableCanvas && this.pagingRegions.length) {\n      this.checkWithinBounds(pageX, pageY);\n    }\n    legendRegion = this.legendRegions.filter(function (region) {\n      return withInBounds(pageX, pageY + (_this.isPaging ? (_this.currentPageNumber - 1) * _this.translatePage(_this.chart.enableCanvas, null, 1, 2) : 0), region.rect);\n    });\n    if (legendRegion.length && this.chart.enableCanvas) {\n      this.LegendClick(legendRegion[0].index, event);\n    }\n  };\n  /**\n   * To check click position is within legend bounds\n   */\n  Legend.prototype.checkWithinBounds = function (pageX, pageY) {\n    var cRender = this.chart.renderer;\n    var bounds = this.legendBounds;\n    var borderWidth = this.chart.legendSettings.border.width;\n    var canvasRect = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n    canvasRect.x = canvasRect.x - borderWidth / 2;\n    canvasRect.y = canvasRect.y - borderWidth / 2;\n    canvasRect.width = canvasRect.width + borderWidth;\n    canvasRect.height = canvasRect.height + borderWidth;\n    if (withInBounds(pageX, pageY, this.pagingRegions[0])) {\n      // pageDown calculations are performing here\n      if (!this.isRtlEnable) {\n        this.canvasPageDown(cRender, canvasRect, bounds);\n      } else {\n        this.canvasPageUp(cRender, canvasRect, bounds);\n      }\n      return null;\n    }\n    if (withInBounds(pageX, pageY, this.pagingRegions[1])) {\n      // pageUp calculations are performing here\n      if (!this.isRtlEnable) {\n        this.canvasPageUp(cRender, canvasRect, bounds);\n      } else {\n        this.canvasPageDown(cRender, canvasRect, bounds);\n      }\n      return null;\n    }\n  };\n  Legend.prototype.canvasPageDown = function (cRender, canvasRect, bounds) {\n    if (--this.currentPageNumber > 0) {\n      this.legendRegions = [];\n      cRender.clearRect(canvasRect);\n      cRender.canvasClip(new RectOption('legendClipPath', 'transparent', {\n        width: 0,\n        color: ''\n      }, null, canvasRect));\n      this.renderLegend(this.chart, this.legend, bounds);\n      cRender.canvasRestore();\n    } else {\n      ++this.currentPageNumber;\n    }\n  };\n  Legend.prototype.canvasPageUp = function (cRender, canvasRect, bounds) {\n    if (++this.currentPageNumber > 0 && this.currentPageNumber <= this.totalNoOfPages) {\n      this.legendRegions = [];\n      cRender.clearRect(canvasRect);\n      cRender.canvasClip(new RectOption('legendClipPath', 'transpaent', {\n        width: 0,\n        color: ''\n      }, null, canvasRect));\n      this.renderLegend(this.chart, this.legend, bounds);\n      cRender.canvasRestore();\n    } else {\n      --this.currentPageNumber;\n    }\n  };\n  /**\n   * Get module name\n   */\n  Legend.prototype.getModuleName = function () {\n    return 'Legend';\n  };\n  /**\n   * To destroy the Legend.\n   *\n   * @returns {void}\n   * @private\n   */\n  Legend.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n  return Legend;\n}(BaseLegend);\nexport { Legend };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","remove","Browser","extend","isNullOrUndefined","LegendOptions","BaseLegend","textTrim","removeElement","RectOption","withInBounds","blazorTemplatesReset","getUnicodeText","measureText","Rect","getElement","legendRender","legendClick","regSub","regSup","textWrap","Legend","_super","chart","_this","call","library","addEventListener","isDestroyed","on","touchMoveEvent","mouseMove","click","touchEndEvent","mouseEnd","removeEventListener","off","e","legendSettings","visible","isTouch","move","highlightModule","highlightMode","enableHighlight","legendItemsId","legendID","targetId","target","id","index","_i","legendItemsId_1","length","indexOf","parseInt","split","legendSelection","type","getLegendOptions","visibleSeriesCollection","legendCollections","seriesType","fill","colors","isRtlEnable","enableRtl","isReverse","reverse","legend","mode","visibleSeriesCollection_1","series","category","chartAreaType","drawType","pointColorMapping","points","interior","push","name","legendShape","sourceIndex","trendlines","legendImageUrl","marker","shape","_loop_1","this_1","filter","i","text","x","toString","_a","_b","_c","_d","legendLabel","rangeColorSettings","_e","_f","rangeMap","label","startLabel","start","endLabel","end","getLegendBounds","availableSize","legendBounds","calculateLegendTitle","isTitle","title","chartRowCount","rowHeights","columnHeights","pageHeights","padding","titlePosition","extraHeight","legendOption","extraWidth","arrowWidth","arrowHeight","verticalArrowSpace","isVertical","enablePages","titleSpace","legendTitleSize","height","fivePixel","width","shapeWidth","shapePadding","maximumWidth","rowWidth","legendWidth","columnHeight","columnCount","rowCount","titlePlusArrowSpace","legendEventArgs","render","maxItemHeight","Math","max","textStyle","shapeHeight","test","markerShape","cancel","trigger","textSize","maximumLabelWidth","itemPadding","getLegendHeight","len","apply","isPaging","totalPages","setBounds","legendHeight","textPadding","textCollection","min","getRenderPoint","prevLegend","rect","count","firstLegend","textWidth","previousBound","location","isWithinBounds","y","availwidth","textOverflow","toFixed","LegendClick","event","seriesIndex","legendIndex","visibleSeries","changeDetection","legendClickArgs","legendText","isBlazor","toggleVisibility","changeSeriesVisiblity","refreshLegendToggle","selectionModule","point","points_1","selectedDataIndexes","svgObject","childNodes","enableAnimation","enableCanvas","lastChild","removeChild","animateSeries","redraw","rotatedDataLabelCollections","element","querySelectorAll","redrawSeriesElements","removeSvg","refreshAxis","refreshAxisLabel","refreshSeries","series_1","markerRender","removeHighlightedMarker","refreshBound","redrawSelection","selectionMode","visibility","isSecondaryAxis","xAxis","internalVisibility","some","value","yAxis","axis","axes","undefined","seriesCollection","seriesCollection_1","isArea","isRange","findSplinePoint","position","pageX","mouseX","pageY","mouseY","legendRegion","firstChild","legendItemsId_2","changePage","pagingRegions","checkWithinBounds","legendRegions","region","currentPageNumber","translatePage","cRender","renderer","bounds","borderWidth","border","canvasRect","canvasPageDown","canvasPageUp","clearRect","canvasClip","color","renderLegend","canvasRestore","totalNoOfPages","getModuleName","destroy"],"sources":["/Users/thonghoangdanh/FullStack/birdnest/node_modules/@syncfusion/ej2-charts/src/chart/legend/legend.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/* eslint-disable jsdoc/require-returns */\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n/* eslint-disable jsdoc/require-param */\n/* eslint-disable valid-jsdoc */\n/**\n * Chart legend\n */\nimport { remove, Browser, extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { LegendOptions, BaseLegend } from '../../common/legend/legend';\nimport { textTrim, removeElement, RectOption, withInBounds, blazorTemplatesReset } from '../../common/utils/helper';\nimport { getUnicodeText } from '../../common/utils/helper';\nimport { measureText, Rect, getElement } from '@syncfusion/ej2-svg-base';\nimport { legendRender, legendClick, regSub, regSup } from '../../common/model/constants';\nimport { textWrap } from '../../common/utils/helper';\n/**\n * `Legend` module is used to render legend for the chart.\n */\nvar Legend = /** @class */ (function (_super) {\n    __extends(Legend, _super);\n    function Legend(chart) {\n        var _this = _super.call(this, chart) || this;\n        _this.library = _this;\n        _this.addEventListener();\n        return _this;\n    }\n    /**\n     * Binding events for legend module.\n     */\n    Legend.prototype.addEventListener = function () {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        this.chart.on(Browser.touchMoveEvent, this.mouseMove, this);\n        this.chart.on('click', this.click, this);\n        this.chart.on(Browser.touchEndEvent, this.mouseEnd, this);\n    };\n    /**\n     * UnBinding events for legend module.\n     */\n    Legend.prototype.removeEventListener = function () {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        this.chart.off(Browser.touchMoveEvent, this.mouseMove);\n        this.chart.off('click', this.click);\n        this.chart.off(Browser.touchEndEvent, this.mouseEnd);\n    };\n    /**\n     * To handle mosue move for legend module\n     */\n    Legend.prototype.mouseMove = function (e) {\n        if (this.chart.legendSettings.visible && !this.chart.isTouch) {\n            this.move(e);\n            if (this.chart.highlightModule && (this.chart.highlightMode !== 'None' || this.chart.legendSettings.enableHighlight)) {\n                var legendItemsId = [this.legendID + '_text_', this.legendID + '_shape_marker_',\n                    this.legendID + '_shape_', this.legendID + '_g_'];\n                var targetId = e.target.id;\n                var index = void 0;\n                for (var _i = 0, legendItemsId_1 = legendItemsId; _i < legendItemsId_1.length; _i++) {\n                    var id = legendItemsId_1[_i];\n                    if (targetId.indexOf(id) > -1) {\n                        index = parseInt(targetId.split(id)[1], 10);\n                        this.chart.highlightModule.legendSelection(this.chart, index, e.target, e.type);\n                        break;\n                    }\n                }\n                // this.click(e);\n            }\n        }\n    };\n    /**\n     * To handle mosue end for legend module\n     */\n    Legend.prototype.mouseEnd = function (e) {\n        if (this.chart.legendSettings.visible && this.chart.isTouch) {\n            this.move(e);\n        }\n    };\n    /**\n     * Get the legend options.\n     *\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getLegendOptions = function (visibleSeriesCollection, chart) {\n        this.legendCollections = [];\n        var seriesType;\n        var fill;\n        var colors = [];\n        this.isRtlEnable = chart.enableRtl;\n        this.isReverse = !this.isRtlEnable && chart.legendSettings.reverse;\n        if (visibleSeriesCollection.length > 1) {\n            this.legend.mode = 'Series';\n        }\n        for (var _i = 0, visibleSeriesCollection_1 = visibleSeriesCollection; _i < visibleSeriesCollection_1.length; _i++) {\n            var series = visibleSeriesCollection_1[_i];\n            if (this.legend.mode === 'Series') {\n                if (series.category !== 'Indicator') {\n                    seriesType = (chart.chartAreaType === 'PolarRadar') ? series.drawType :\n                        series.type;\n                    // To set legend color when use pointColorMapping\n                    fill = (series.pointColorMapping && series.points.length > 0) ?\n                        (series.points[0].interior ? series.points[0].interior : series.interior) : series.interior;\n                    this.legendCollections.push(new LegendOptions(series.name, fill, series.legendShape, (series.category === 'TrendLine' ?\n                        this.chart.series[series.sourceIndex].trendlines[series.index].visible : series.visible), seriesType, series.legendImageUrl, series.marker.shape, series.marker.visible));\n                }\n            }\n            else if (this.legend.mode === 'Point') {\n                var _loop_1 = function (points) {\n                    seriesType = (chart.chartAreaType === 'PolarRadar') ? series.drawType :\n                        series.type;\n                    fill = points.interior ? points.interior : series.interior;\n                    if (this_1.legendCollections.filter(function (i) { return i.text === points.x.toString(); }).length === 0) {\n                        this_1.legendCollections.push(new LegendOptions(points.x.toString(), fill, series.legendShape, (series.category === 'TrendLine' ?\n                            this_1.chart.series[series.sourceIndex].trendlines[series.index].visible : points.visible), seriesType, '', series.marker.shape, series.marker.visible));\n                    }\n                };\n                var this_1 = this;\n                for (var _a = 0, _b = series.points; _a < _b.length; _a++) {\n                    var points = _b[_a];\n                    _loop_1(points);\n                }\n            }\n            else if (this.legend.mode === 'Range') {\n                for (var _c = 0, _d = series.points; _c < _d.length; _c++) {\n                    var points = _d[_c];\n                    seriesType = (chart.chartAreaType === 'PolarRadar') ? series.drawType :\n                        series.type;\n                    fill = points.interior ? points.interior : series.interior;\n                    var legendLabel = 'Others';\n                    if (colors.indexOf(fill) < 0) {\n                        colors.push(fill);\n                        if (chart.rangeColorSettings.length >= 1 && chart.rangeColorSettings[0].colors.length === 1) {\n                            for (var _e = 0, _f = chart.rangeColorSettings; _e < _f.length; _e++) {\n                                var rangeMap = _f[_e];\n                                if (rangeMap.colors[0] === fill) {\n                                    legendLabel = rangeMap.label;\n                                }\n                            }\n                            this.legendCollections.push(new LegendOptions(legendLabel, fill, series.legendShape, (series.category === 'TrendLine' ?\n                                this.chart.series[series.sourceIndex].trendlines[series.index].visible : points.visible), seriesType, '', series.marker.shape, series.marker.visible));\n                        }\n                    }\n                }\n            }\n            else {\n                if (this.legendCollections.length === 0 && chart.rangeColorSettings.length > 0) {\n                    var startLabel = chart.rangeColorSettings[0].start.toString();\n                    var endLabel = chart.rangeColorSettings[chart.rangeColorSettings.length - 1].end.toString();\n                    this.legendCollections.push(new LegendOptions(startLabel, series.interior, 'Rectangle', true, seriesType, '', series.marker.shape, series.marker.visible));\n                    this.legendCollections.push(new LegendOptions(endLabel, series.interior, 'Rectangle', true, seriesType, '', series.marker.shape, series.marker.visible));\n                }\n            }\n        }\n        if (this.isReverse && chart.legendSettings.mode !== 'Gradient') {\n            this.legendCollections.reverse();\n        }\n    };\n    /** @private */\n    Legend.prototype.getLegendBounds = function (availableSize, legendBounds, legend) {\n        this.calculateLegendTitle(legend, legendBounds);\n        this.isTitle = legend.title ? true : false;\n        this.chartRowCount = 1;\n        this.rowHeights = [];\n        this.columnHeights = [];\n        this.pageHeights = [];\n        var padding = legend.padding;\n        var titlePosition = legend.titlePosition;\n        var extraHeight = 0;\n        var legendOption;\n        var extraWidth = 0;\n        var arrowWidth = this.arrowWidth;\n        var arrowHeight = this.arrowHeight;\n        var verticalArrowSpace = this.isVertical && !legend.enablePages ? arrowHeight : 0;\n        var titleSpace = this.isTitle && titlePosition === 'Top' ? this.legendTitleSize.height + this.fivePixel : 0;\n        titleSpace = this.isTitle && this.isVertical && titlePosition !== 'Top' ? this.legendTitleSize.height + this.fivePixel : titleSpace;\n        if (!this.isVertical) {\n            extraHeight = !legend.height ? ((availableSize.height / 100) * 5) : 0;\n        }\n        else {\n            extraWidth = !legend.width ? ((availableSize.width / 100) * 5) : 0;\n        }\n        legendBounds.height += (extraHeight);\n        legendBounds.width += extraWidth;\n        var shapeWidth = legend.shapeWidth;\n        var shapePadding = legend.shapePadding;\n        var maximumWidth = 0;\n        var rowWidth = 0;\n        var legendWidth = 0;\n        var columnHeight = 0;\n        var columnCount = 0;\n        var rowCount = 0;\n        var titlePlusArrowSpace = 0;\n        var legendEventArgs;\n        var render = false;\n        this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle).height, legend.shapeHeight);\n        for (var i = 0; i < this.legendCollections.length; i++) {\n            legendOption = this.legendCollections[i];\n            if (regSub.test(legendOption.text)) {\n                legendOption.text = getUnicodeText(legendOption.text, regSub);\n            }\n            if (regSup.test(legendOption.text)) {\n                legendOption.text = getUnicodeText(legendOption.text, regSup);\n            }\n            legendEventArgs = {\n                fill: legendOption.fill, text: legendOption.text, shape: legendOption.shape,\n                markerShape: legendOption.markerShape, name: legendRender, cancel: false\n            };\n            this.chart.trigger(legendRender, legendEventArgs);\n            legendOption.render = !legendEventArgs.cancel;\n            legendOption.text = legendEventArgs.text;\n            legendOption.fill = legendEventArgs.fill;\n            legendOption.shape = legendEventArgs.shape;\n            legendOption.markerShape = legendEventArgs.markerShape;\n            legendOption.textSize = measureText(legendOption.text, legend.textStyle);\n            shapeWidth = legendOption.text ? legend.shapeWidth : 0;\n            shapePadding = legendOption.text ? legend.shapePadding : 0;\n            if (legendOption.render && legendOption.text) {\n                render = true;\n                legendWidth = shapeWidth + shapePadding + (legend.maximumLabelWidth ? legend.maximumLabelWidth : legendOption.textSize.width) + (!this.isVertical ? (i == 0) ? padding : this.itemPadding : padding);\n                rowWidth = rowWidth + legendWidth;\n                if (!legend.enablePages && !this.isVertical) {\n                    titlePlusArrowSpace = this.isTitle && titlePosition !== 'Top' ? this.legendTitleSize.width + this.fivePixel : 0;\n                    titlePlusArrowSpace += arrowWidth;\n                }\n                this.getLegendHeight(legendOption, legend, legendBounds, rowWidth, this.maxItemHeight, padding);\n                if (legendBounds.width < (padding + rowWidth + titlePlusArrowSpace) || this.isVertical) {\n                    maximumWidth = Math.max(maximumWidth, (rowWidth + padding + titlePlusArrowSpace - (this.isVertical ? 0 : legendWidth)));\n                    if (rowCount === 0 && (legendWidth !== rowWidth)) {\n                        rowCount = 1;\n                    }\n                    rowWidth = this.isVertical ? 0 : legendWidth;\n                    rowCount++;\n                    columnCount = 0;\n                    columnHeight = verticalArrowSpace;\n                    //columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding + titleSpace + verticalArrowSpace;\n                }\n                var len = (rowCount > 0 ? (rowCount - 1) : 0);\n                this.rowHeights[len] = Math.max((this.rowHeights[len] ? this.rowHeights[len] : 0), legendOption.textSize.height);\n                // this.maxItemHeight = Math.max(this.maxItemHeight, legendOption.textSize.height);\n                this.columnHeights[columnCount] = (this.columnHeights[columnCount] ? this.columnHeights[columnCount] : 0) + legendOption.textSize.height + (this.isVertical ? (i == 0) ? padding : this.itemPadding : padding);\n                columnCount++;\n            }\n        }\n        columnHeight = Math.max.apply(null, this.columnHeights) + padding + titleSpace;\n        columnHeight = Math.max(columnHeight, (this.maxItemHeight + padding) + padding + titleSpace);\n        this.isPaging = legendBounds.height < columnHeight;\n        if (this.isPaging && !legend.enablePages) {\n            if (this.isVertical) {\n                // eslint-disable-next-line no-self-assign\n                columnHeight = columnHeight;\n            }\n            else {\n                columnHeight = (this.maxItemHeight + padding) + padding + (titlePosition === 'Top' ? titleSpace : 0);\n            }\n        }\n        this.totalPages = rowCount;\n        if (!this.isPaging && !this.isVertical) {\n            rowWidth += this.isTitle && titlePosition !== 'Top' ? (this.fivePixel + this.legendTitleSize.width + this.fivePixel) : 0;\n        }\n        if (render) {\n            this.setBounds(Math.max((rowWidth + padding), maximumWidth), columnHeight, legend, legendBounds);\n        }\n        else {\n            this.setBounds(0, 0, legend, legendBounds);\n        }\n    };\n    /** @private */\n    Legend.prototype.getLegendHeight = function (legendOption, legend, legendBounds, rowWidth, legendHeight, padding) {\n        var legendWidth = legendOption.textSize.width;\n        var textPadding = legend.shapePadding + (padding * 2) + legend.shapeWidth;\n        switch (legend.textWrap) {\n            case 'Wrap':\n            case 'AnyWhere':\n                if (legendWidth > legend.maximumLabelWidth || legendWidth + rowWidth > legendBounds.width) {\n                    legendOption.textCollection = textWrap(legendOption.text, (legend.maximumLabelWidth ? Math.min(legend.maximumLabelWidth, (legendBounds.width - textPadding)) : (legendBounds.width - textPadding)), legend.textStyle);\n                }\n                else {\n                    legendOption.textCollection.push(legendOption.text);\n                }\n                legendOption.textSize.height = (legendHeight * legendOption.textCollection.length);\n                break;\n        }\n    };\n    /** @private */\n    Legend.prototype.getRenderPoint = function (legendOption, start, textPadding, prevLegend, rect, count, firstLegend, rowCount) {\n        var padding = this.legend.padding;\n        var textWidth = textPadding + (this.legend.maximumLabelWidth ? this.legend.maximumLabelWidth : prevLegend.textSize.width);\n        var previousBound = prevLegend.location.x + ((!this.isRtlEnable) ? textWidth : -textWidth);\n        if (this.isWithinBounds(previousBound, (this.legend.maximumLabelWidth ? this.legend.maximumLabelWidth : legendOption.textSize.width) + textPadding - this.itemPadding, rect) || this.isVertical) {\n            legendOption.location.x = start.x;\n            if (count !== firstLegend)\n                this.chartRowCount++;\n            legendOption.location.y = (count === firstLegend) ? prevLegend.location.y :\n                prevLegend.location.y + (this.isVertical ? prevLegend.textSize.height : this.rowHeights[(this.chartRowCount - 2)]) + (this.isVertical ? this.itemPadding : padding);\n        }\n        else {\n            legendOption.location.x = (count === firstLegend) ? prevLegend.location.x : previousBound;\n            legendOption.location.y = prevLegend.location.y;\n        }\n        var availwidth = (!this.isRtlEnable) ? (this.legendBounds.x + this.legendBounds.width) - (legendOption.location.x +\n            textPadding - this.itemPadding - this.legend.shapeWidth / 2) : (legendOption.location.x - textPadding + this.itemPadding + (this.legend.shapeWidth / 2)) - this.legendBounds.x;\n        availwidth = this.legend.maximumLabelWidth ? Math.min(this.legend.maximumLabelWidth, availwidth) : availwidth;\n        if (this.legend.textOverflow == \"Ellipsis\" && this.legend.textWrap == \"Normal\") {\n            legendOption.text = textTrim(+availwidth.toFixed(4), legendOption.text, this.legend.textStyle);\n        }\n    };\n    Legend.prototype.isWithinBounds = function (previousBound, textWidth, rect) {\n        if (!this.isRtlEnable) {\n            return (previousBound + textWidth) > (rect.x + rect.width + (this.legend.shapeWidth / 2));\n        }\n        else {\n            return (previousBound - textWidth) < (rect.x - (this.legend.shapeWidth / 2));\n        }\n    };\n    /** @private */\n    Legend.prototype.LegendClick = function (index, event) {\n        var chart = this.chart;\n        var seriesIndex = chart.legendSettings.mode === 'Series' ? index : 0;\n        var legendIndex = !this.isReverse ? index : (this.legendCollections.length - 1) - index;\n        var series = chart.visibleSeries[seriesIndex];\n        var legend = this.legendCollections[legendIndex];\n        var changeDetection = 'isProtectedOnChange';\n        if (chart.legendSettings.mode === 'Series') {\n            var legendClickArgs = {\n                legendText: legend.text, legendShape: legend.shape,\n                chart: chart.isBlazor ? {} : chart, series: series, points: series.points, name: legendClick, cancel: false\n            };\n            this.chart.trigger(legendClick, legendClickArgs);\n            series.legendShape = legendClickArgs.legendShape;\n            if (series.fill !== null) {\n                chart.visibleSeries[index].interior = series.fill;\n            }\n            if (chart.legendSettings.toggleVisibility) {\n                if (series.category === 'TrendLine') {\n                    if (!chart.series[series.sourceIndex].trendlines[series.index].visible) {\n                        chart.series[series.sourceIndex].trendlines[series.index].visible = true;\n                    }\n                    else {\n                        chart.series[series.sourceIndex].trendlines[series.index].visible = false;\n                    }\n                }\n                else {\n                    series.chart[changeDetection] = true;\n                    this.changeSeriesVisiblity(series, series.visible);\n                }\n                legend.visible = series.category === 'TrendLine' ? chart.series[series.sourceIndex].trendlines[series.index].visible :\n                    (series.visible);\n                this.refreshLegendToggle(chart, series);\n            }\n            else if (chart.highlightModule) {\n                chart.highlightModule.legendSelection(chart, index, event.target, event.type);\n            }\n            else if (chart.selectionModule) {\n                chart.selectionModule.legendSelection(chart, index, event.target, event.type);\n            }\n            series.chart[changeDetection] = false;\n        }\n        else if (chart.legendSettings.mode === 'Point') {\n            var point = series.points[index];\n            var legendClickArgs = {\n                legendText: legend.text, legendShape: legend.shape,\n                chart: chart.isBlazor ? {} : chart, series: series, points: [point], name: legendClick, cancel: false\n            };\n            this.chart.trigger(legendClick, legendClickArgs);\n            if (chart.legendSettings.toggleVisibility) {\n                point.visible = !point.visible;\n                var legendOption = this.legendCollections[index];\n                legendOption.visible = point.visible;\n                this.refreshLegendToggle(chart, series);\n            }\n        }\n        else if (chart.legendSettings.mode === 'Range') {\n            var points = [];\n            var legendOption = this.legendCollections[index];\n            for (var _i = 0, _a = series.points; _i < _a.length; _i++) {\n                var point = _a[_i];\n                if (legendOption.fill === (point.interior || series.interior)) {\n                    points.push(point);\n                }\n            }\n            var legendClickArgs = {\n                legendText: legend.text, legendShape: legend.shape,\n                chart: chart.isBlazor ? {} : chart, series: series, points: points, name: legendClick, cancel: false\n            };\n            this.chart.trigger(legendClick, legendClickArgs);\n            if (chart.legendSettings.toggleVisibility) {\n                legendOption.visible = !legendOption.visible;\n                for (var _b = 0, points_1 = points; _b < points_1.length; _b++) {\n                    var point = points_1[_b];\n                    point.visible = !point.visible;\n                }\n                this.refreshLegendToggle(chart, series);\n            }\n        }\n    };\n    Legend.prototype.refreshLegendToggle = function (chart, series) {\n        var selectedDataIndexes = [];\n        if (chart.selectionModule) {\n            selectedDataIndexes = extend([], chart.selectionModule.selectedDataIndexes, null, true);\n        }\n        if ((chart.svgObject.childNodes.length > 0) && !chart.enableAnimation && !chart.enableCanvas) {\n            while (chart.svgObject.lastChild) {\n                chart.svgObject.removeChild(chart.svgObject.lastChild);\n            }\n            remove(chart.svgObject);\n        }\n        chart.animateSeries = false;\n        chart.redraw = chart.enableAnimation;\n        chart.rotatedDataLabelCollections = [];\n        removeElement(getElement(chart.element.id + '_Secondary_Element').querySelectorAll('.ejSVGTooltip')[0]);\n        blazorTemplatesReset(chart);\n        this.redrawSeriesElements(series, chart);\n        chart.removeSvg();\n        chart.refreshAxis();\n        series.refreshAxisLabel();\n        this.refreshSeries(chart.visibleSeries);\n        for (var _i = 0, _a = chart.visibleSeries; _i < _a.length; _i++) {\n            var series_1 = _a[_i];\n            if (!isNullOrUndefined(series_1)) {\n                chart.markerRender.removeHighlightedMarker(series_1, null, true);\n            }\n        }\n        chart.refreshBound();\n        chart.trigger('loaded', { chart: chart });\n        if (selectedDataIndexes.length > 0) {\n            chart.selectionModule.selectedDataIndexes = selectedDataIndexes;\n            chart.selectionModule.redrawSelection(chart, chart.selectionMode);\n        }\n        if (chart.highlightModule && chart.highlightMode !== 'None' || chart.legendSettings.enableHighlight) {\n            chart.highlightModule.redrawSelection(chart, chart.highlightMode);\n        }\n        chart.redraw = false;\n    };\n    Legend.prototype.changeSeriesVisiblity = function (series, visibility) {\n        series.visible = !visibility;\n        if (this.isSecondaryAxis(series.xAxis)) {\n            series.xAxis.internalVisibility = series.xAxis.series.some(function (value) { return (value.visible); });\n        }\n        if (this.isSecondaryAxis(series.yAxis)) {\n            series.yAxis.internalVisibility = series.yAxis.series.some(function (value) { return (value.visible); });\n        }\n    };\n    Legend.prototype.isSecondaryAxis = function (axis) {\n        return (this.chart.axes.indexOf(axis) > -1);\n    };\n    Legend.prototype.redrawSeriesElements = function (series, chart) {\n        if (!chart.redraw) {\n            return null;\n        }\n        removeElement(chart.element.id + '_Series_' + (series.index === undefined ? series.category : series.index) +\n            '_DataLabelCollections');\n    };\n    Legend.prototype.refreshSeries = function (seriesCollection) {\n        for (var _i = 0, seriesCollection_1 = seriesCollection; _i < seriesCollection_1.length; _i++) {\n            var series = seriesCollection_1[_i];\n            if (series.type.indexOf('Spline') > -1) {\n                var isArea = (series.type.indexOf('Area') > -1 || series.drawType.indexOf('Area') > -1);\n                var isRange = series.type.indexOf('Range') > -1;\n                this.chart['spline' + (isArea ? isRange ? 'RangeArea' : 'Area' : '') + 'SeriesModule'].findSplinePoint(series);\n            }\n            series.position = undefined;\n        }\n    };\n    /**\n     * To show the tooltip for the trimmed text in legend.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.click = function (event) {\n        var _this = this;\n        if (!this.chart.legendSettings.visible) {\n            return;\n        }\n        var pageX = this.chart.mouseX;\n        var pageY = this.chart.mouseY;\n        var legendRegion = [];\n        var targetId = event.target.id.indexOf(\"_chart_legend_g_\") > -1 ?\n            event.target.firstChild['id'] : event.target.id;\n        var legendItemsId = [this.legendID + '_text_', this.legendID + '_shape_marker_',\n            this.legendID + '_shape_'];\n        var seriesIndex;\n        for (var _i = 0, legendItemsId_2 = legendItemsId; _i < legendItemsId_2.length; _i++) {\n            var id = legendItemsId_2[_i];\n            if (targetId.indexOf(id) > -1) {\n                seriesIndex = parseInt(targetId.split(id)[1], 10);\n                this.LegendClick(seriesIndex, event);\n                break;\n            }\n        }\n        if (targetId.indexOf(this.legendID + '_pageup') > -1) {\n            this.changePage(event, true);\n        }\n        else if (targetId.indexOf(this.legendID + '_pagedown') > -1) {\n            this.changePage(event, false);\n        }\n        if (this.chart.enableCanvas && this.pagingRegions.length) {\n            this.checkWithinBounds(pageX, pageY);\n        }\n        legendRegion = this.legendRegions.filter(function (region) {\n            return (withInBounds(pageX, (pageY + (_this.isPaging ? (_this.currentPageNumber - 1) * _this.translatePage(_this.chart.enableCanvas, null, 1, 2) : 0)), region.rect));\n        });\n        if (legendRegion.length && this.chart.enableCanvas) {\n            this.LegendClick(legendRegion[0].index, event);\n        }\n    };\n    /**\n     * To check click position is within legend bounds\n     */\n    Legend.prototype.checkWithinBounds = function (pageX, pageY) {\n        var cRender = this.chart.renderer;\n        var bounds = this.legendBounds;\n        var borderWidth = this.chart.legendSettings.border.width;\n        var canvasRect = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        canvasRect.x = canvasRect.x - borderWidth / 2;\n        canvasRect.y = canvasRect.y - borderWidth / 2;\n        canvasRect.width = canvasRect.width + borderWidth;\n        canvasRect.height = canvasRect.height + borderWidth;\n        if (withInBounds(pageX, pageY, this.pagingRegions[0])) {\n            // pageDown calculations are performing here\n            if (!this.isRtlEnable) {\n                this.canvasPageDown(cRender, canvasRect, bounds);\n            }\n            else {\n                this.canvasPageUp(cRender, canvasRect, bounds);\n            }\n            return null;\n        }\n        if (withInBounds(pageX, pageY, this.pagingRegions[1])) {\n            // pageUp calculations are performing here\n            if (!this.isRtlEnable) {\n                this.canvasPageUp(cRender, canvasRect, bounds);\n            }\n            else {\n                this.canvasPageDown(cRender, canvasRect, bounds);\n            }\n            return null;\n        }\n    };\n    Legend.prototype.canvasPageDown = function (cRender, canvasRect, bounds) {\n        if (--this.currentPageNumber > 0) {\n            this.legendRegions = [];\n            cRender.clearRect(canvasRect);\n            cRender.canvasClip(new RectOption('legendClipPath', 'transparent', { width: 0, color: '' }, null, canvasRect));\n            this.renderLegend(this.chart, this.legend, bounds);\n            cRender.canvasRestore();\n        }\n        else {\n            ++this.currentPageNumber;\n        }\n    };\n    Legend.prototype.canvasPageUp = function (cRender, canvasRect, bounds) {\n        if (++this.currentPageNumber > 0 && this.currentPageNumber <= this.totalNoOfPages) {\n            this.legendRegions = [];\n            cRender.clearRect(canvasRect);\n            cRender.canvasClip(new RectOption('legendClipPath', 'transpaent', { width: 0, color: '' }, null, canvasRect));\n            this.renderLegend(this.chart, this.legend, bounds);\n            cRender.canvasRestore();\n        }\n        else {\n            --this.currentPageNumber;\n        }\n    };\n    /**\n     * Get module name\n     */\n    Legend.prototype.getModuleName = function () {\n        return 'Legend';\n    };\n    /**\n     * To destroy the Legend.\n     *\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Legend;\n}(BaseLegend));\nexport { Legend };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}