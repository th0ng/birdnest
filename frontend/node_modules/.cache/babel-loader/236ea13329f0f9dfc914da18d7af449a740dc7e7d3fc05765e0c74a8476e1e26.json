{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/* eslint-disable jsdoc/require-returns */\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n/* eslint-disable valid-jsdoc */\n/* eslint-disable jsdoc/require-param */\nimport { Series } from '../series/chart-series';\nimport { TechnicalAnalysis } from './indicator-base';\n/**\n * `RsiIndicator` module is used to render RSI indicator.\n */\nvar RsiIndicator = /** @class */function (_super) {\n  __extends(RsiIndicator, _super);\n  function RsiIndicator() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Initializes the series collection to represent the RSI Indicator\n   *\n   * @private\n   */\n  RsiIndicator.prototype.initSeriesCollection = function (indicator, chart) {\n    _super.prototype.initSeriesCollection.call(this, indicator, chart);\n    if (indicator.showZones) {\n      var lowerLine = new Series(indicator, 'targetSeries', {}, true);\n      _super.prototype.setSeriesProperties.call(this, lowerLine, indicator, 'LowerLine', indicator.lowerLine.color, indicator.lowerLine.width, chart);\n      var upperLine = new Series(indicator, 'targetSeries', {}, true);\n      _super.prototype.setSeriesProperties.call(this, upperLine, indicator, 'UpperLine', indicator.upperLine.color, indicator.upperLine.width, chart);\n    }\n  };\n  /**\n   * Defines the predictions using RSI approach\n   *\n   * @private\n   */\n  RsiIndicator.prototype.initDataSource = function (indicator, chart) {\n    var signalCollection = [];\n    var lowerCollection = [];\n    var upperCollection = [];\n    var signalSeries = indicator.targetSeries[0];\n    //prepare data\n    var validData = indicator.points;\n    if (validData.length && validData.length >= indicator.period) {\n      //Find upper band and lower band values\n      if (indicator.showZones) {\n        for (var i = 0; i < validData.length; i++) {\n          upperCollection.push(this.getDataPoint(validData[i].x, indicator.overBought, validData[i], indicator.targetSeries[1], upperCollection.length));\n          lowerCollection.push(this.getDataPoint(validData[i].x, indicator.overSold, validData[i], indicator.targetSeries[2], lowerCollection.length));\n        }\n      }\n      //Find signal line value\n      var prevClose = Number(validData[0].close);\n      var gain = 0;\n      var loss = 0;\n      for (var i = 1; i <= indicator.period; i++) {\n        var close_1 = Number(validData[i].close);\n        if (close_1 > prevClose) {\n          gain += close_1 - prevClose;\n        } else {\n          loss += prevClose - close_1;\n        }\n        prevClose = close_1;\n      }\n      gain = gain / indicator.period;\n      loss = loss / indicator.period;\n      signalCollection.push(this.getDataPoint(validData[indicator.period].x, 100 - 100 / (1 + gain / loss), validData[indicator.period], signalSeries, signalCollection.length));\n      for (var j = indicator.period + 1; j < validData.length; j++) {\n        var close_2 = Number(validData[j].close);\n        if (close_2 > prevClose) {\n          gain = (gain * (indicator.period - 1) + (close_2 - prevClose)) / indicator.period;\n          loss = loss * (indicator.period - 1) / indicator.period;\n        } else if (close_2 < prevClose) {\n          loss = (loss * (indicator.period - 1) + (prevClose - close_2)) / indicator.period;\n          gain = gain * (indicator.period - 1) / indicator.period;\n        }\n        prevClose = close_2;\n        signalCollection.push(this.getDataPoint(validData[j].x, 100 - 100 / (1 + gain / loss), validData[j], signalSeries, signalCollection.length));\n      }\n    }\n    this.setSeriesRange(signalCollection, indicator, indicator.targetSeries[0]);\n    if (indicator.showZones) {\n      this.setSeriesRange(upperCollection, indicator, indicator.targetSeries[1]);\n      this.setSeriesRange(lowerCollection, indicator, indicator.targetSeries[2]);\n    }\n  };\n  /**\n   * To destroy the RSI Indicator.\n   *\n   * @returns {void}\n   * @private\n   */\n  RsiIndicator.prototype.destroy = function () {\n    /**\n     * Destroys the RSI Indicator\n     */\n  };\n  /**\n   * Get module name.\n   */\n  RsiIndicator.prototype.getModuleName = function () {\n    /**\n     * Returns the module name of the indicator.\n     */\n    return 'RsiIndicator';\n  };\n  return RsiIndicator;\n}(TechnicalAnalysis);\nexport { RsiIndicator };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Series","TechnicalAnalysis","RsiIndicator","_super","apply","arguments","initSeriesCollection","indicator","chart","call","showZones","lowerLine","setSeriesProperties","color","width","upperLine","initDataSource","signalCollection","lowerCollection","upperCollection","signalSeries","targetSeries","validData","points","length","period","i","push","getDataPoint","x","overBought","overSold","prevClose","Number","close","gain","loss","close_1","j","close_2","setSeriesRange","destroy","getModuleName"],"sources":["/Users/thonghoangdanh/FullStack/birdnest/node_modules/@syncfusion/ej2-charts/src/chart/technical-indicators/rsi-indicator.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/* eslint-disable jsdoc/require-returns */\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n/* eslint-disable valid-jsdoc */\n/* eslint-disable jsdoc/require-param */\nimport { Series } from '../series/chart-series';\nimport { TechnicalAnalysis } from './indicator-base';\n/**\n * `RsiIndicator` module is used to render RSI indicator.\n */\nvar RsiIndicator = /** @class */ (function (_super) {\n    __extends(RsiIndicator, _super);\n    function RsiIndicator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the series collection to represent the RSI Indicator\n     *\n     * @private\n     */\n    RsiIndicator.prototype.initSeriesCollection = function (indicator, chart) {\n        _super.prototype.initSeriesCollection.call(this, indicator, chart);\n        if (indicator.showZones) {\n            var lowerLine = new Series(indicator, 'targetSeries', {}, true);\n            _super.prototype.setSeriesProperties.call(this, lowerLine, indicator, 'LowerLine', indicator.lowerLine.color, indicator.lowerLine.width, chart);\n            var upperLine = new Series(indicator, 'targetSeries', {}, true);\n            _super.prototype.setSeriesProperties.call(this, upperLine, indicator, 'UpperLine', indicator.upperLine.color, indicator.upperLine.width, chart);\n        }\n    };\n    /**\n     * Defines the predictions using RSI approach\n     *\n     * @private\n     */\n    RsiIndicator.prototype.initDataSource = function (indicator, chart) {\n        var signalCollection = [];\n        var lowerCollection = [];\n        var upperCollection = [];\n        var signalSeries = indicator.targetSeries[0];\n        //prepare data\n        var validData = indicator.points;\n        if (validData.length && validData.length >= indicator.period) {\n            //Find upper band and lower band values\n            if (indicator.showZones) {\n                for (var i = 0; i < validData.length; i++) {\n                    upperCollection.push(this.getDataPoint(validData[i].x, indicator.overBought, validData[i], indicator.targetSeries[1], upperCollection.length));\n                    lowerCollection.push(this.getDataPoint(validData[i].x, indicator.overSold, validData[i], indicator.targetSeries[2], lowerCollection.length));\n                }\n            }\n            //Find signal line value\n            var prevClose = Number(validData[0].close);\n            var gain = 0;\n            var loss = 0;\n            for (var i = 1; i <= indicator.period; i++) {\n                var close_1 = Number(validData[i].close);\n                if (close_1 > prevClose) {\n                    gain += close_1 - prevClose;\n                }\n                else {\n                    loss += prevClose - close_1;\n                }\n                prevClose = close_1;\n            }\n            gain = gain / indicator.period;\n            loss = loss / indicator.period;\n            signalCollection.push(this.getDataPoint(validData[indicator.period].x, 100 - (100 / (1 + gain / loss)), validData[indicator.period], signalSeries, signalCollection.length));\n            for (var j = indicator.period + 1; j < validData.length; j++) {\n                var close_2 = Number(validData[j].close);\n                if (close_2 > prevClose) {\n                    gain = (gain * (indicator.period - 1) + (close_2 - prevClose)) / indicator.period;\n                    loss = (loss * (indicator.period - 1)) / indicator.period;\n                }\n                else if (close_2 < prevClose) {\n                    loss = (loss * (indicator.period - 1) + (prevClose - close_2)) / indicator.period;\n                    gain = (gain * (indicator.period - 1)) / indicator.period;\n                }\n                prevClose = close_2;\n                signalCollection.push(this.getDataPoint(validData[j].x, 100 - (100 / (1 + gain / loss)), validData[j], signalSeries, signalCollection.length));\n            }\n        }\n        this.setSeriesRange(signalCollection, indicator, indicator.targetSeries[0]);\n        if (indicator.showZones) {\n            this.setSeriesRange(upperCollection, indicator, indicator.targetSeries[1]);\n            this.setSeriesRange(lowerCollection, indicator, indicator.targetSeries[2]);\n        }\n    };\n    /**\n     * To destroy the RSI Indicator.\n     *\n     * @returns {void}\n     * @private\n     */\n    RsiIndicator.prototype.destroy = function () {\n        /**\n         * Destroys the RSI Indicator\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RsiIndicator.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the indicator.\n         */\n        return 'RsiIndicator';\n    };\n    return RsiIndicator;\n}(TechnicalAnalysis));\nexport { RsiIndicator };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}