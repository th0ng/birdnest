{"ast":null,"code":"/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n/* eslint-disable valid-jsdoc */\n/* eslint-disable jsdoc/require-returns */\n/* eslint-disable jsdoc/require-param */\nimport { Animation, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DoubleRange } from '../utils/double-range';\nimport { appendChildElement, redrawElement, pathAnimation, valueToCoefficient, getVisiblePoints } from '../../common/utils/helper';\nimport { getAnimationFunction, getPoint, getMinPointsDelta } from '../../common/utils/helper';\nimport { PathOption, Rect } from '@syncfusion/ej2-svg-base';\nimport { pointRender } from '../../common/model/constants';\n/**\n * Column Series Base\n */\nvar ColumnBase = /** @class */function () {\n  function ColumnBase() {}\n  /**\n   * To get the position of the column series.\n   *\n   * @returns {DoubleRange} doubleRange\n   * @private\n   */\n  ColumnBase.prototype.getSideBySideInfo = function (series) {\n    if (series.chart.enableSideBySidePlacement && !series.position) {\n      this.getSideBySidePositions(series);\n    }\n    if (series.columnWidthInPixel) {\n      return new DoubleRange(0, 0);\n    }\n    var position = series.type === 'Histogram' || !series.chart.enableSideBySidePlacement ? 0 : series.position;\n    var rectCount = series.type === 'Histogram' || !series.chart.enableSideBySidePlacement ? 1 : series.rectCount;\n    series.isRectSeries = true;\n    var visibleSeries = series.chart.visibleSeries;\n    var seriesSpacing = series.chart.enableSideBySidePlacement ? series.columnSpacing : 0; // Column Spacing\n    var pointSpacing = series.columnWidth === null || isNaN(+series.columnWidth) ? series.type === 'Histogram' ? 1 : 0.7 : series.columnWidth; // Column width\n    var minimumPointDelta = getMinPointsDelta(series.xAxis, visibleSeries);\n    var width = minimumPointDelta * pointSpacing;\n    var radius;\n    var location = position / rectCount - 0.5;\n    var doubleRange = new DoubleRange(location, location + 1 / rectCount);\n    if (!(isNaN(doubleRange.start) || isNaN(doubleRange.end))) {\n      if (series.groupName && series.type.indexOf('Stacking') === -1) {\n        var mainColumnWidth_1 = 0.7;\n        series.chart.series.filter(function (series) {\n          if (series.columnWidth > mainColumnWidth_1) {\n            mainColumnWidth_1 = series.columnWidth;\n          }\n        });\n        var mainWidth = minimumPointDelta * mainColumnWidth_1;\n        var mainDoubleRange = new DoubleRange(doubleRange.start * mainWidth, doubleRange.end * mainWidth);\n        var difference = (mainDoubleRange.delta - (doubleRange.end * width - doubleRange.start * width)) / 2;\n        doubleRange = new DoubleRange(mainDoubleRange.start + difference, mainDoubleRange.end - difference);\n      } else {\n        doubleRange = new DoubleRange(doubleRange.start * width, doubleRange.end * width);\n      }\n      radius = seriesSpacing * doubleRange.delta;\n      doubleRange = new DoubleRange(doubleRange.start + radius / 2, doubleRange.end - radius / 2);\n    }\n    return doubleRange;\n  };\n  /**\n   * To get the rect values.\n   *\n   * @returns {Rect} rect region values\n   * @private\n   */\n  ColumnBase.prototype.getRectangle = function (x1, y1, x2, y2, series) {\n    var point1 = getPoint(x1, y1, series.xAxis, series.yAxis, series.chart.requireInvertedAxis);\n    var point2 = getPoint(x2, y2, series.xAxis, series.yAxis, series.chart.requireInvertedAxis);\n    return new Rect(Math.min(point1.x, point2.x), Math.min(point1.y, point2.y), Math.abs(point2.x - point1.x), Math.abs(point2.y - point1.y));\n  };\n  /**\n   * To get the position of each series.\n   *\n   * @returns {void}\n   * @private\n   */\n  ColumnBase.prototype.getSideBySidePositions = function (series) {\n    var chart = series.chart;\n    for (var _i = 0, _a = chart.columns; _i < _a.length; _i++) {\n      var columnItem = _a[_i];\n      for (var _b = 0, _c = chart.rows; _b < _c.length; _b++) {\n        var item = _c[_b];\n        this.findRectPosition(series.findSeriesCollection(columnItem, item, false));\n      }\n    }\n  };\n  ColumnBase.prototype.findRectPosition = function (seriesCollection) {\n    var groupingValues = [];\n    var vSeries = {\n      rectCount: 0,\n      position: null\n    };\n    for (var i = 0; i < seriesCollection.length; i++) {\n      var value = seriesCollection[i];\n      if (value.type.indexOf('Stacking') !== -1 || value.groupName !== '') {\n        var groupName = value.type.indexOf('Stacking') !== -1 ? value.stackingGroup : value.type + value.groupName;\n        if (groupName) {\n          if (groupingValues[groupName] === undefined) {\n            value.position = vSeries.rectCount;\n            groupingValues[groupName] = vSeries.rectCount++;\n          } else {\n            value.position = groupingValues[groupName];\n          }\n        } else {\n          if (vSeries.position === null) {\n            value.position = vSeries.rectCount;\n            vSeries.position = vSeries.rectCount++;\n          } else {\n            value.position = vSeries.position;\n          }\n        }\n      } else {\n        value.position = vSeries.rectCount++;\n      }\n    }\n    for (var i = 0; i < seriesCollection.length; i++) {\n      var value = seriesCollection[i];\n      value.rectCount = vSeries.rectCount;\n    }\n  };\n  /**\n   * Updates the symbollocation for points\n   *\n   * @returns {void}\n   * @private\n   */\n  ColumnBase.prototype.updateSymbolLocation = function (point, rect, series) {\n    if (!series.chart.requireInvertedAxis) {\n      this.updateXRegion(point, rect, series);\n    } else {\n      this.updateYRegion(point, rect, series);\n    }\n    if (series.type === 'Histogram') {\n      point.minimum = +point.x - series.histogramValues.binWidth / 2;\n      point.maximum = +point.x + series.histogramValues.binWidth / 2;\n    }\n  };\n  /**\n   * Update the region for the point.\n   *\n   * @returns {void}\n   * @private\n   */\n  ColumnBase.prototype.updateXRegion = function (point, rect, series) {\n    point.symbolLocations.push({\n      x: rect.x + rect.width / 2,\n      y: series.seriesType === 'BoxPlot' || series.seriesType.indexOf('HighLow') !== -1 || point.yValue >= 0 === !series.yAxis.isAxisInverse ? rect.y : rect.y + rect.height\n    });\n    this.getRegion(point, rect, series);\n    if (series.type === 'RangeColumn') {\n      point.symbolLocations.push({\n        x: rect.x + rect.width / 2,\n        y: rect.y + rect.height\n      });\n    }\n  };\n  /**\n   * Update the region for the point in bar series.\n   *\n   * @returns {void}\n   * @private\n   */\n  ColumnBase.prototype.updateYRegion = function (point, rect, series) {\n    point.symbolLocations.push({\n      x: series.seriesType === 'BoxPlot' || series.seriesType.indexOf('HighLow') !== -1 || point.yValue >= 0 === !series.yAxis.isAxisInverse ? rect.x + rect.width : rect.x,\n      y: rect.y + rect.height / 2\n    });\n    this.getRegion(point, rect, series);\n    if (series.type === 'RangeColumn') {\n      point.symbolLocations.push({\n        x: rect.x,\n        y: rect.y + rect.height / 2\n      });\n    }\n  };\n  /**\n   * To render the marker for the series.\n   *\n   * @returns {void}\n   * @private\n   */\n  ColumnBase.prototype.renderMarker = function (series) {\n    if (series.marker && series.marker.visible) {\n      series.chart.markerRender.render(series);\n    }\n  };\n  /**\n   * To get the marker region when Y value is 0\n   *\n   * @param {Points} point point\n   * @param {rect} rect rect\n   * @param {Series} series series\n   */\n  ColumnBase.prototype.getRegion = function (point, rect, series) {\n    if (point.y === 0) {\n      var markerWidth = series.marker && series.marker.width ? series.marker.width : 0;\n      var markerHeight = series.marker && series.marker.height ? series.marker.height : 0;\n      point.regions.push(new Rect(point.symbolLocations[0].x - markerWidth, point.symbolLocations[0].y - markerHeight, 2 * markerWidth, 2 * markerHeight));\n    } else {\n      point.regions.push(rect);\n    }\n  };\n  /**\n   * To trigger the point rendering event.\n   *\n   * @returns {void}\n   * @private\n   */\n  ColumnBase.prototype.triggerEvent = function (series, point, fill, border) {\n    var argsData = {\n      cancel: false,\n      name: pointRender,\n      series: series,\n      point: point,\n      fill: series.setPointColor(point, fill),\n      border: series.setBorderColor(point, border)\n    };\n    series.chart.trigger(pointRender, argsData);\n    point.color = argsData.fill;\n    return argsData;\n  };\n  /**\n   * To draw the rectangle for points.\n   *\n   * @returns {void}\n   * @private\n   */\n  ColumnBase.prototype.drawRectangle = function (series, point, rect, argsData) {\n    var chart = series.chart;\n    var check = chart.requireInvertedAxis ? rect.height : rect.width;\n    if (check <= 0) {\n      return null;\n    }\n    var direction;\n    if (point.y === 0) {\n      // For 0 values corner radius will not calculate\n      direction = this.calculateRoundedRectPath(rect, 0, 0, 0, 0);\n    } else {\n      direction = this.calculateRoundedRectPath(rect, series.cornerRadius.topLeft, series.cornerRadius.topRight, series.cornerRadius.bottomLeft, series.cornerRadius.bottomRight);\n    }\n    var name = series.category === 'Indicator' ? chart.element.id + '_Indicator_' + series.index + '_' + series.name + '_Point_' + point.index : chart.element.id + '_Series_' + series.index + '_Point_' + point.index;\n    var previousElement = redrawElement(chart.redraw, name);\n    var previousDirection = previousElement ? previousElement.getAttribute('d') : '';\n    var options = new PathOption(name, argsData.fill, argsData.border.width, argsData.border.color, series.opacity, series.dashArray, direction);\n    var element = chart.renderer.drawPath(options, new Int32Array([series.clipRect.x, series.clipRect.y]));\n    switch (series.seriesType) {\n      case 'XY':\n        element.setAttribute('aria-label', point.x + ':' + point.yValue + ', ' + series.name);\n        break;\n      case 'HighLow':\n        element.setAttribute('aria-label', point.x + ':' + point.high + ', ' + point.low + ', ' + series.name);\n        break;\n    }\n    appendChildElement(series.chart.enableCanvas, series.seriesElement, element, chart.redraw);\n    if (!series.chart.enableCanvas) {\n      pathAnimation(element, direction, chart.redraw, previousDirection, chart.duration);\n    }\n  };\n  /**\n   * To animate the series.\n   *\n   * @returns {void}\n   * @private\n   */\n  ColumnBase.prototype.animate = function (series) {\n    var rectElements = series.seriesElement.childNodes;\n    var count = series.category === 'Indicator' ? 0 : 1;\n    var visiblePoints = getVisiblePoints(series);\n    for (var _i = 0, visiblePoints_1 = visiblePoints; _i < visiblePoints_1.length; _i++) {\n      var point = visiblePoints_1[_i];\n      if (!point.symbolLocations.length && !(series.type === 'BoxAndWhisker' && point.regions.length)) {\n        continue;\n      }\n      this.animateRect(rectElements[count], series, point);\n      count++;\n    }\n  };\n  /**\n   * To animate the series.\n   *\n   * @returns {void}\n   * @private\n   */\n  ColumnBase.prototype.animateRect = function (element, series, point) {\n    var option = series.animation;\n    var duration = series.chart.animated ? series.chart.duration : option.duration;\n    var effect = getAnimationFunction('Linear');\n    var isPlot = point.yValue < 0;\n    var x;\n    var y;\n    var elementHeight = +point.regions[0].height;\n    var elementWidth = +point.regions[0].width;\n    var centerX;\n    var centerY;\n    if (!series.chart.requireInvertedAxis) {\n      x = +point.regions[0].x;\n      if (series.type.indexOf('Stacking') > -1) {\n        y = (1 - valueToCoefficient(0, series.yAxis)) * series.yAxis.rect.height;\n        centerX = x;\n        centerY = y;\n      } else {\n        y = +point.regions[0].y;\n        centerY = series.seriesType.indexOf('HighLow') !== -1 || series.type.indexOf('Waterfall') !== -1 ? y + elementHeight / 2 : isPlot !== series.yAxis.isAxisInverse ? y : y + elementHeight;\n        centerX = isPlot ? x : x + elementWidth;\n      }\n    } else {\n      y = +point.regions[0].y;\n      if (series.type.indexOf('Stacking') > -1) {\n        x = valueToCoefficient(0, series.yAxis) * series.yAxis.rect.width;\n        centerX = x;\n        centerY = y;\n      } else {\n        x = +point.regions[0].x;\n        centerY = isPlot ? y : y + elementHeight;\n        centerX = series.seriesType.indexOf('HighLow') !== -1 || series.type.indexOf('Waterfall') !== -1 ? x + elementWidth / 2 : isPlot !== series.yAxis.isAxisInverse ? x + elementWidth : x;\n      }\n    }\n    var value;\n    if (!isNullOrUndefined(element)) {\n      element.style.visibility = 'hidden';\n      new Animation({}).animate(element, {\n        duration: duration,\n        delay: option.delay,\n        progress: function (args) {\n          if (args.timeStamp >= args.delay) {\n            element.style.visibility = 'visible';\n            if (!series.chart.requireInvertedAxis) {\n              elementHeight = elementHeight ? elementHeight : 1;\n              value = effect(args.timeStamp - args.delay, 0, elementHeight, args.duration);\n              element.setAttribute('transform', 'translate(' + centerX + ' ' + centerY + ') scale(1,' + value / elementHeight + ') translate(' + -centerX + ' ' + -centerY + ')');\n            } else {\n              elementWidth = elementWidth ? elementWidth : 1;\n              value = effect(args.timeStamp - args.delay, 0, elementWidth, args.duration);\n              element.setAttribute('transform', 'translate(' + centerX + ' ' + centerY + ') scale(' + value / elementWidth + ', 1) translate(' + -centerX + ' ' + -centerY + ')');\n            }\n          }\n        },\n        end: function () {\n          element.setAttribute('transform', 'translate(0,0)');\n          var seriesElement = series.seriesElement;\n          if (element === seriesElement.lastElementChild || point.index === series.points.length - 1 || series.type === 'Waterfall' && element === seriesElement.children[seriesElement.childElementCount - 2]) {\n            series.chart.trigger('animationComplete', {\n              series: series.chart.isBlazor ? {} : series\n            });\n            if (series.type === 'Waterfall') {\n              var rectElements = seriesElement.childNodes;\n              for (var i = 0; i < rectElements.length; i++) {\n                if (rectElements[i].id.indexOf('Connector') !== -1) {\n                  rectElements[i].style.visibility = 'visible';\n                  rectElements[i].setAttribute('transform', 'translate(0,0)');\n                }\n              }\n            }\n          }\n        }\n      });\n    }\n  };\n  /**\n   * To get rounded rect path direction\n   */\n  ColumnBase.prototype.calculateRoundedRectPath = function (rect, topLeft, topRight, bottomLeft, bottomRight) {\n    return 'M' + ' ' + rect.x + ' ' + (topLeft + rect.y) + ' Q ' + rect.x + ' ' + rect.y + ' ' + (rect.x + topLeft) + ' ' + rect.y + ' ' + 'L' + ' ' + (rect.x + rect.width - topRight) + ' ' + rect.y + ' Q ' + (rect.x + rect.width) + ' ' + rect.y + ' ' + (rect.x + rect.width) + ' ' + (rect.y + topRight) + ' ' + 'L ' + (rect.x + rect.width) + ' ' + (rect.y + rect.height - bottomRight) + ' Q ' + (rect.x + rect.width) + ' ' + (rect.y + rect.height) + ' ' + (rect.x + rect.width - bottomRight) + ' ' + (rect.y + rect.height) + ' ' + 'L ' + (rect.x + bottomLeft) + ' ' + (rect.y + rect.height) + ' Q ' + rect.x + ' ' + (rect.y + rect.height) + ' ' + rect.x + ' ' + (rect.y + rect.height - bottomLeft) + ' ' + 'L' + ' ' + rect.x + ' ' + (topLeft + rect.y) + ' ' + 'Z';\n  };\n  return ColumnBase;\n}();\nexport { ColumnBase };","map":{"version":3,"names":["Animation","isNullOrUndefined","DoubleRange","appendChildElement","redrawElement","pathAnimation","valueToCoefficient","getVisiblePoints","getAnimationFunction","getPoint","getMinPointsDelta","PathOption","Rect","pointRender","ColumnBase","prototype","getSideBySideInfo","series","chart","enableSideBySidePlacement","position","getSideBySidePositions","columnWidthInPixel","type","rectCount","isRectSeries","visibleSeries","seriesSpacing","columnSpacing","pointSpacing","columnWidth","isNaN","minimumPointDelta","xAxis","width","radius","location","doubleRange","start","end","groupName","indexOf","mainColumnWidth_1","filter","mainWidth","mainDoubleRange","difference","delta","getRectangle","x1","y1","x2","y2","point1","yAxis","requireInvertedAxis","point2","Math","min","x","y","abs","_i","_a","columns","length","columnItem","_b","_c","rows","item","findRectPosition","findSeriesCollection","seriesCollection","groupingValues","vSeries","i","value","stackingGroup","undefined","updateSymbolLocation","point","rect","updateXRegion","updateYRegion","minimum","histogramValues","binWidth","maximum","symbolLocations","push","seriesType","yValue","isAxisInverse","height","getRegion","renderMarker","marker","visible","markerRender","render","markerWidth","markerHeight","regions","triggerEvent","fill","border","argsData","cancel","name","setPointColor","setBorderColor","trigger","color","drawRectangle","check","direction","calculateRoundedRectPath","cornerRadius","topLeft","topRight","bottomLeft","bottomRight","category","element","id","index","previousElement","redraw","previousDirection","getAttribute","options","opacity","dashArray","renderer","drawPath","Int32Array","clipRect","setAttribute","high","low","enableCanvas","seriesElement","duration","animate","rectElements","childNodes","count","visiblePoints","visiblePoints_1","animateRect","option","animation","animated","effect","isPlot","elementHeight","elementWidth","centerX","centerY","style","visibility","delay","progress","args","timeStamp","lastElementChild","points","children","childElementCount","isBlazor"],"sources":["/Users/thonghoangdanh/FullStack/birdnest/node_modules/@syncfusion/ej2-charts/src/chart/series/column-base.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n/* eslint-disable valid-jsdoc */\n/* eslint-disable jsdoc/require-returns */\n/* eslint-disable jsdoc/require-param */\nimport { Animation, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DoubleRange } from '../utils/double-range';\nimport { appendChildElement, redrawElement, pathAnimation, valueToCoefficient, getVisiblePoints } from '../../common/utils/helper';\nimport { getAnimationFunction, getPoint, getMinPointsDelta } from '../../common/utils/helper';\nimport { PathOption, Rect } from '@syncfusion/ej2-svg-base';\nimport { pointRender } from '../../common/model/constants';\n/**\n * Column Series Base\n */\nvar ColumnBase = /** @class */ (function () {\n    function ColumnBase() {\n    }\n    /**\n     * To get the position of the column series.\n     *\n     * @returns {DoubleRange} doubleRange\n     * @private\n     */\n    ColumnBase.prototype.getSideBySideInfo = function (series) {\n        if (series.chart.enableSideBySidePlacement && !series.position) {\n            this.getSideBySidePositions(series);\n        }\n        if (series.columnWidthInPixel) {\n            return new DoubleRange(0, 0);\n        }\n        var position = series.type === 'Histogram' || !series.chart.enableSideBySidePlacement ? 0 : series.position;\n        var rectCount = series.type === 'Histogram' || !series.chart.enableSideBySidePlacement ? 1 : series.rectCount;\n        series.isRectSeries = true;\n        var visibleSeries = series.chart.visibleSeries;\n        var seriesSpacing = series.chart.enableSideBySidePlacement ? series.columnSpacing : 0; // Column Spacing\n        var pointSpacing = (series.columnWidth === null || isNaN(+series.columnWidth)) ? ((series.type === 'Histogram') ? 1 : 0.7) :\n            series.columnWidth; // Column width\n        var minimumPointDelta = getMinPointsDelta(series.xAxis, visibleSeries);\n        var width = minimumPointDelta * pointSpacing;\n        var radius;\n        var location = (position) / rectCount - 0.5;\n        var doubleRange = new DoubleRange(location, location + (1 / rectCount));\n        if (!(isNaN(doubleRange.start) || isNaN(doubleRange.end))) {\n            if (series.groupName && series.type.indexOf('Stacking') === -1) {\n                var mainColumnWidth_1 = 0.7;\n                series.chart.series.filter(function (series) { if (series.columnWidth > mainColumnWidth_1) {\n                    mainColumnWidth_1 = series.columnWidth;\n                } });\n                var mainWidth = minimumPointDelta * mainColumnWidth_1;\n                var mainDoubleRange = new DoubleRange(doubleRange.start * mainWidth, doubleRange.end * mainWidth);\n                var difference = ((mainDoubleRange.delta) - (doubleRange.end * width - doubleRange.start * width)) / 2;\n                doubleRange = new DoubleRange(mainDoubleRange.start + difference, mainDoubleRange.end - difference);\n            }\n            else {\n                doubleRange = new DoubleRange(doubleRange.start * width, doubleRange.end * width);\n            }\n            radius = seriesSpacing * doubleRange.delta;\n            doubleRange = new DoubleRange(doubleRange.start + radius / 2, doubleRange.end - radius / 2);\n        }\n        return doubleRange;\n    };\n    /**\n     * To get the rect values.\n     *\n     * @returns {Rect} rect region values\n     * @private\n     */\n    ColumnBase.prototype.getRectangle = function (x1, y1, x2, y2, series) {\n        var point1 = getPoint(x1, y1, series.xAxis, series.yAxis, series.chart.requireInvertedAxis);\n        var point2 = getPoint(x2, y2, series.xAxis, series.yAxis, series.chart.requireInvertedAxis);\n        return new Rect(Math.min(point1.x, point2.x), Math.min(point1.y, point2.y), Math.abs(point2.x - point1.x), Math.abs(point2.y - point1.y));\n    };\n    /**\n     * To get the position of each series.\n     *\n     * @returns {void}\n     * @private\n     */\n    ColumnBase.prototype.getSideBySidePositions = function (series) {\n        var chart = series.chart;\n        for (var _i = 0, _a = chart.columns; _i < _a.length; _i++) {\n            var columnItem = _a[_i];\n            for (var _b = 0, _c = chart.rows; _b < _c.length; _b++) {\n                var item = _c[_b];\n                this.findRectPosition(series.findSeriesCollection(columnItem, item, false));\n            }\n        }\n    };\n    ColumnBase.prototype.findRectPosition = function (seriesCollection) {\n        var groupingValues = [];\n        var vSeries = { rectCount: 0, position: null };\n        for (var i = 0; i < seriesCollection.length; i++) {\n            var value = seriesCollection[i];\n            if (value.type.indexOf('Stacking') !== -1 || value.groupName !== '') {\n                var groupName = value.type.indexOf('Stacking') !== -1 ? value.stackingGroup : value.type + value.groupName;\n                if (groupName) {\n                    if (groupingValues[groupName] === undefined) {\n                        value.position = vSeries.rectCount;\n                        groupingValues[groupName] = vSeries.rectCount++;\n                    }\n                    else {\n                        value.position = groupingValues[groupName];\n                    }\n                }\n                else {\n                    if (vSeries.position === null) {\n                        value.position = vSeries.rectCount;\n                        vSeries.position = vSeries.rectCount++;\n                    }\n                    else {\n                        value.position = vSeries.position;\n                    }\n                }\n            }\n            else {\n                value.position = vSeries.rectCount++;\n            }\n        }\n        for (var i = 0; i < seriesCollection.length; i++) {\n            var value = seriesCollection[i];\n            value.rectCount = vSeries.rectCount;\n        }\n    };\n    /**\n     * Updates the symbollocation for points\n     *\n     * @returns {void}\n     * @private\n     */\n    ColumnBase.prototype.updateSymbolLocation = function (point, rect, series) {\n        if (!series.chart.requireInvertedAxis) {\n            this.updateXRegion(point, rect, series);\n        }\n        else {\n            this.updateYRegion(point, rect, series);\n        }\n        if (series.type === 'Histogram') {\n            point.minimum = +point.x - series.histogramValues.binWidth / 2;\n            point.maximum = +point.x + series.histogramValues.binWidth / 2;\n        }\n    };\n    /**\n     * Update the region for the point.\n     *\n     * @returns {void}\n     * @private\n     */\n    ColumnBase.prototype.updateXRegion = function (point, rect, series) {\n        point.symbolLocations.push({\n            x: rect.x + (rect.width) / 2,\n            y: (series.seriesType === 'BoxPlot' || series.seriesType.indexOf('HighLow') !== -1 ||\n                (point.yValue >= 0 === !series.yAxis.isAxisInverse)) ? rect.y : (rect.y + rect.height)\n        });\n        this.getRegion(point, rect, series);\n        if (series.type === 'RangeColumn') {\n            point.symbolLocations.push({\n                x: rect.x + (rect.width) / 2,\n                y: rect.y + rect.height\n            });\n        }\n    };\n    /**\n     * Update the region for the point in bar series.\n     *\n     * @returns {void}\n     * @private\n     */\n    ColumnBase.prototype.updateYRegion = function (point, rect, series) {\n        point.symbolLocations.push({\n            x: (series.seriesType === 'BoxPlot' || series.seriesType.indexOf('HighLow') !== -1 ||\n                (point.yValue >= 0 === !series.yAxis.isAxisInverse)) ? rect.x + rect.width : rect.x,\n            y: rect.y + rect.height / 2\n        });\n        this.getRegion(point, rect, series);\n        if (series.type === 'RangeColumn') {\n            point.symbolLocations.push({\n                x: rect.x,\n                y: rect.y + rect.height / 2\n            });\n        }\n    };\n    /**\n     * To render the marker for the series.\n     *\n     * @returns {void}\n     * @private\n     */\n    ColumnBase.prototype.renderMarker = function (series) {\n        if (series.marker && series.marker.visible) {\n            series.chart.markerRender.render(series);\n        }\n    };\n    /**\n     * To get the marker region when Y value is 0\n     *\n     * @param {Points} point point\n     * @param {rect} rect rect\n     * @param {Series} series series\n     */\n    ColumnBase.prototype.getRegion = function (point, rect, series) {\n        if (point.y === 0) {\n            var markerWidth = (series.marker && series.marker.width) ? series.marker.width : 0;\n            var markerHeight = (series.marker && series.marker.height) ? series.marker.height : 0;\n            point.regions.push(new Rect(point.symbolLocations[0].x - markerWidth, point.symbolLocations[0].y - markerHeight, 2 * markerWidth, 2 * markerHeight));\n        }\n        else {\n            point.regions.push(rect);\n        }\n    };\n    /**\n     * To trigger the point rendering event.\n     *\n     * @returns {void}\n     * @private\n     */\n    ColumnBase.prototype.triggerEvent = function (series, point, fill, border) {\n        var argsData = {\n            cancel: false, name: pointRender, series: series, point: point,\n            fill: series.setPointColor(point, fill),\n            border: series.setBorderColor(point, border)\n        };\n        series.chart.trigger(pointRender, argsData);\n        point.color = argsData.fill;\n        return argsData;\n    };\n    /**\n     * To draw the rectangle for points.\n     *\n     * @returns {void}\n     * @private\n     */\n    ColumnBase.prototype.drawRectangle = function (series, point, rect, argsData) {\n        var chart = series.chart;\n        var check = chart.requireInvertedAxis ? rect.height : rect.width;\n        if (check <= 0) {\n            return null;\n        }\n        var direction;\n        if (point.y === 0) {\n            // For 0 values corner radius will not calculate\n            direction = this.calculateRoundedRectPath(rect, 0, 0, 0, 0);\n        }\n        else {\n            direction = this.calculateRoundedRectPath(rect, series.cornerRadius.topLeft, series.cornerRadius.topRight, series.cornerRadius.bottomLeft, series.cornerRadius.bottomRight);\n        }\n        var name = series.category === 'Indicator' ? chart.element.id + '_Indicator_' + series.index + '_' + series.name +\n            '_Point_' + point.index : chart.element.id + '_Series_' + series.index + '_Point_' + point.index;\n        var previousElement = redrawElement(chart.redraw, name);\n        var previousDirection = previousElement ? previousElement.getAttribute('d') : '';\n        var options = new PathOption(name, argsData.fill, argsData.border.width, argsData.border.color, series.opacity, series.dashArray, direction);\n        var element = chart.renderer.drawPath(options, new Int32Array([series.clipRect.x, series.clipRect.y]));\n        switch (series.seriesType) {\n            case 'XY':\n                element.setAttribute('aria-label', point.x + ':' + point.yValue + ', ' + series.name);\n                break;\n            case 'HighLow':\n                element.setAttribute('aria-label', point.x + ':' + point.high + ', ' + point.low + ', ' + series.name);\n                break;\n        }\n        appendChildElement(series.chart.enableCanvas, series.seriesElement, element, chart.redraw);\n        if (!series.chart.enableCanvas) {\n            pathAnimation(element, direction, chart.redraw, previousDirection, chart.duration);\n        }\n    };\n    /**\n     * To animate the series.\n     *\n     * @returns {void}\n     * @private\n     */\n    ColumnBase.prototype.animate = function (series) {\n        var rectElements = series.seriesElement.childNodes;\n        var count = series.category === 'Indicator' ? 0 : 1;\n        var visiblePoints = getVisiblePoints(series);\n        for (var _i = 0, visiblePoints_1 = visiblePoints; _i < visiblePoints_1.length; _i++) {\n            var point = visiblePoints_1[_i];\n            if (!point.symbolLocations.length && !(series.type === 'BoxAndWhisker' && point.regions.length)) {\n                continue;\n            }\n            this.animateRect(rectElements[count], series, point);\n            count++;\n        }\n    };\n    /**\n     * To animate the series.\n     *\n     * @returns {void}\n     * @private\n     */\n    ColumnBase.prototype.animateRect = function (element, series, point) {\n        var option = series.animation;\n        var duration = series.chart.animated ? series.chart.duration : option.duration;\n        var effect = getAnimationFunction('Linear');\n        var isPlot = point.yValue < 0;\n        var x;\n        var y;\n        var elementHeight = +point.regions[0].height;\n        var elementWidth = +point.regions[0].width;\n        var centerX;\n        var centerY;\n        if (!series.chart.requireInvertedAxis) {\n            x = +point.regions[0].x;\n            if (series.type.indexOf('Stacking') > -1) {\n                y = (1 - valueToCoefficient(0, series.yAxis)) * (series.yAxis.rect.height);\n                centerX = x;\n                centerY = y;\n            }\n            else {\n                y = +point.regions[0].y;\n                centerY = (series.seriesType.indexOf('HighLow') !== -1 || series.type.indexOf('Waterfall') !== -1) ? y + elementHeight / 2 :\n                    (isPlot !== series.yAxis.isAxisInverse) ? y : y + elementHeight;\n                centerX = isPlot ? x : x + elementWidth;\n            }\n        }\n        else {\n            y = +point.regions[0].y;\n            if (series.type.indexOf('Stacking') > -1) {\n                x = (valueToCoefficient(0, series.yAxis)) * series.yAxis.rect.width;\n                centerX = x;\n                centerY = y;\n            }\n            else {\n                x = +point.regions[0].x;\n                centerY = isPlot ? y : y + elementHeight;\n                centerX = (series.seriesType.indexOf('HighLow') !== -1 || series.type.indexOf('Waterfall') !== -1) ? x + elementWidth / 2 :\n                    (isPlot !== series.yAxis.isAxisInverse) ? x + elementWidth : x;\n            }\n        }\n        var value;\n        if (!isNullOrUndefined(element)) {\n            element.style.visibility = 'hidden';\n            new Animation({}).animate(element, {\n                duration: duration,\n                delay: option.delay,\n                progress: function (args) {\n                    if (args.timeStamp >= args.delay) {\n                        element.style.visibility = 'visible';\n                        if (!series.chart.requireInvertedAxis) {\n                            elementHeight = elementHeight ? elementHeight : 1;\n                            value = effect(args.timeStamp - args.delay, 0, elementHeight, args.duration);\n                            element.setAttribute('transform', 'translate(' + centerX + ' ' + centerY +\n                                ') scale(1,' + (value / elementHeight) + ') translate(' + (-centerX) + ' ' + (-centerY) + ')');\n                        }\n                        else {\n                            elementWidth = elementWidth ? elementWidth : 1;\n                            value = effect(args.timeStamp - args.delay, 0, elementWidth, args.duration);\n                            element.setAttribute('transform', 'translate(' + centerX + ' ' + centerY +\n                                ') scale(' + (value / elementWidth) + ', 1) translate(' + (-centerX) + ' ' + (-centerY) + ')');\n                        }\n                    }\n                },\n                end: function () {\n                    element.setAttribute('transform', 'translate(0,0)');\n                    var seriesElement = series.seriesElement;\n                    if (element === seriesElement.lastElementChild || point.index === series.points.length - 1 ||\n                        (series.type === 'Waterfall' && element === seriesElement.children[seriesElement.childElementCount - 2])) {\n                        series.chart.trigger('animationComplete', { series: series.chart.isBlazor ? {} : series });\n                        if (series.type === 'Waterfall') {\n                            var rectElements = seriesElement.childNodes;\n                            for (var i = 0; i < rectElements.length; i++) {\n                                if (rectElements[i].id.indexOf('Connector') !== -1) {\n                                    rectElements[i].style.visibility = 'visible';\n                                    rectElements[i].setAttribute('transform', 'translate(0,0)');\n                                }\n                            }\n                        }\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * To get rounded rect path direction\n     */\n    ColumnBase.prototype.calculateRoundedRectPath = function (rect, topLeft, topRight, bottomLeft, bottomRight) {\n        return 'M' + ' ' + rect.x + ' ' + (topLeft + rect.y) +\n            ' Q ' + rect.x + ' ' + rect.y + ' ' + (rect.x + topLeft) + ' ' +\n            rect.y + ' ' + 'L' + ' ' + (rect.x + rect.width - topRight) + ' ' + rect.y +\n            ' Q ' + (rect.x + rect.width) + ' ' + rect.y + ' ' +\n            (rect.x + rect.width) + ' ' + (rect.y + topRight) + ' ' + 'L ' +\n            (rect.x + rect.width) + ' ' + (rect.y + rect.height - bottomRight)\n            + ' Q ' + (rect.x + rect.width) + ' ' + (rect.y + rect.height) + ' ' + (rect.x + rect.width - bottomRight) + ' ' +\n            (rect.y + rect.height) + ' ' + 'L ' + (rect.x + bottomLeft) + ' ' + (rect.y + rect.height) + ' Q ' + rect.x + ' ' +\n            (rect.y + rect.height) + ' ' + rect.x + ' ' + (rect.y + rect.height - bottomLeft) + ' ' + 'L' + ' ' + rect.x + ' ' +\n            (topLeft + rect.y) + ' ' + 'Z';\n    };\n    return ColumnBase;\n}());\nexport { ColumnBase };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}