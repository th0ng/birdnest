{"ast":null,"code":"var _jsxFileName = \"/Users/thonghoangdanh/FullStack/birdnest/src/components/Table.jsx\";\nimport React from 'react';\nimport birdnestService from '../services/birdnest';\nimport { useEffect } from 'react';\n\n//constructor for data to show in the table\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction dataConstructor(serialNumber, positionX, positionY, pilotInformation) {\n  this.serialNumber = serialNumber;\n  this.positionX = positionX;\n  this.positionY = positionY;\n  this.distance = Math.hypot(positionX, positionY);\n  this.pilotInformation = pilotInformation;\n}\n;\n\n//table function to be exported\nconst Table = _ref => {\n  let {\n    data\n  } = _ref;\n  const dataArray = [];\n  for (const drone of data) {\n    birdnestService.getPilotInformation(drone.children[0].value).then(information => {\n      const newData = new dataConstructor(drone.children[0].value, drone.children[8].value, drone.children[7].value, information);\n      dataArray.unshift({\n        data: newData,\n        time: Date.now()\n      });\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  // delete data after 10 minutes\n  // setInterval(() => {\n  //   let time = Date.now();\n  //   for (const item of tableData) {\n  //     if (time > item.time + 6000) {\n  //       tableData.splice(tableData.indexOf(item), 1);\n  //     }\n  //   };\n  // }, 6000);\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Index\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Serial Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Distance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: dataArray.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.data.serialNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.data.distance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","birdnestService","useEffect","dataConstructor","serialNumber","positionX","positionY","pilotInformation","distance","Math","hypot","Table","data","dataArray","drone","getPilotInformation","children","value","then","information","newData","unshift","time","Date","now","catch","error","console","map","item","index"],"sources":["/Users/thonghoangdanh/FullStack/birdnest/src/components/Table.jsx"],"sourcesContent":["import React from 'react';\nimport birdnestService from '../services/birdnest';\nimport { useEffect } from 'react';\n\n//constructor for data to show in the table\nfunction dataConstructor(serialNumber, positionX, positionY, pilotInformation ) {\n  this.serialNumber = serialNumber;\n  this.positionX = positionX;\n  this.positionY = positionY;\n  this.distance = Math.hypot(positionX, positionY);\n  this.pilotInformation = pilotInformation;\n};\n\n//table function to be exported\nconst Table = ({ data }) => {\n  const dataArray = [];\n  for (const drone of data) {\n    birdnestService\n      .getPilotInformation(drone.children[0].value)\n      .then((information) => {\n        const newData = new dataConstructor(\n          drone.children[0].value,\n          drone.children[8].value,\n          drone.children[7].value,\n          information,\n        );\n        dataArray.unshift({\n          data: newData,\n          time: Date.now()\n        });\n      }).catch((error) => {console.error(error)});\n  }\n\n  // delete data after 10 minutes\n  // setInterval(() => {\n  //   let time = Date.now();\n  //   for (const item of tableData) {\n  //     if (time > item.time + 6000) {\n  //       tableData.splice(tableData.indexOf(item), 1);\n  //     }\n  //   };\n  // }, 6000);\n\n  return (\n    <table>\n      <thead>\n      <tr>\n        <th>Index</th>\n        <th>Serial Number</th>\n        <th>Distance</th>\n      </tr>\n      </thead>\n      <tbody>\n      {dataArray.map((item, index) =>\n      <tr>\n        <td>{index + 1}</td>\n        <td>{item.data.serialNumber}</td>\n        <td>{item.data.distance}</td>\n      </tr>\n      )}\n      </tbody>\n    </table>\n  )\n};\n\nexport default Table;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,eAAe,MAAM,sBAAsB;AAClD,SAASC,SAAS,QAAQ,OAAO;;AAEjC;AAAA;AACA,SAASC,eAAe,CAACC,YAAY,EAAEC,SAAS,EAAEC,SAAS,EAAEC,gBAAgB,EAAG;EAC9E,IAAI,CAACH,YAAY,GAAGA,YAAY;EAChC,IAAI,CAACC,SAAS,GAAGA,SAAS;EAC1B,IAAI,CAACC,SAAS,GAAGA,SAAS;EAC1B,IAAI,CAACE,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACL,SAAS,EAAEC,SAAS,CAAC;EAChD,IAAI,CAACC,gBAAgB,GAAGA,gBAAgB;AAC1C;AAAC;;AAED;AACA,MAAMI,KAAK,GAAG,QAAc;EAAA,IAAb;IAAEC;EAAK,CAAC;EACrB,MAAMC,SAAS,GAAG,EAAE;EACpB,KAAK,MAAMC,KAAK,IAAIF,IAAI,EAAE;IACxBX,eAAe,CACZc,mBAAmB,CAACD,KAAK,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,CAC5CC,IAAI,CAAEC,WAAW,IAAK;MACrB,MAAMC,OAAO,GAAG,IAAIjB,eAAe,CACjCW,KAAK,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACC,KAAK,EACvBH,KAAK,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACC,KAAK,EACvBH,KAAK,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACC,KAAK,EACvBE,WAAW,CACZ;MACDN,SAAS,CAACQ,OAAO,CAAC;QAChBT,IAAI,EAAEQ,OAAO;QACbE,IAAI,EAAEC,IAAI,CAACC,GAAG;MAChB,CAAC,CAAC;IACJ,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;MAACC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IAAA,CAAC,CAAC;EAC/C;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAA,wBACE;MAAA,uBACA;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAc,eACd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAsB,eACtB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAiB;MAAA;QAAA;QAAA;QAAA;MAAA;IACd;MAAA;MAAA;MAAA;IAAA,QACG,eACR;MAAA,UACCb,SAAS,CAACe,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC3B;QAAA,wBACE;UAAA,UAAKA,KAAK,GAAG;QAAC;UAAA;UAAA;UAAA;QAAA,QAAM,eACpB;UAAA,UAAKD,IAAI,CAACjB,IAAI,CAACR;QAAY;UAAA;UAAA;UAAA;QAAA,QAAM,eACjC;UAAA,UAAKyB,IAAI,CAACjB,IAAI,CAACJ;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QAC1B;IACJ;MAAA;MAAA;MAAA;IAAA,QACO;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEZ,CAAC;AAAC,KAjDIG,KAAK;AAmDX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}