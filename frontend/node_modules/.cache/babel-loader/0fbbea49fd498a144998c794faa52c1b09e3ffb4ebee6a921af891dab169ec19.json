{"ast":null,"code":"import { createTemplate, measureElementRect, logBase, removeElement } from '../utils/helper';\nimport { ChartLocation, stringToNumber, appendElement, withIn } from '../utils/helper';\nimport { Rect } from '@syncfusion/ej2-svg-base';\nimport { getPoint } from '../utils/helper';\nimport { createElement, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { annotationRender } from '../model/constants';\nimport { DataUtil } from '@syncfusion/ej2-data';\n/**\n * Annotation Module handles the Annotation for chart and accumulation series.\n */\nvar AnnotationBase = /** @class */function () {\n  /**\n   * Constructor for chart and accumulation annotation\n   *\n   * @param control\n   */\n  function AnnotationBase(control) {\n    this.control = control;\n  }\n  /**\n   * Method to render the annotation for chart and accumulation series.\n   *\n   * @private\n   * @param annotation\n   * @param index\n   */\n  AnnotationBase.prototype.render = function (annotation, index) {\n    this.isChart = this.control.getModuleName() === 'chart';\n    this.annotation = annotation;\n    var childElement = createTemplate(createElement('div', {\n      id: this.control.element.id + '_Annotation_' + index,\n      styles: 'position: absolute; z-index: 1' //by default z-index set for annotation elements\n    }), index, annotation.content, this.control);\n    return childElement;\n  };\n  /**\n   * Method to calculate the location for annotation - coordinate unit as pixel.\n   *\n   * @private\n   * @param location\n   */\n  AnnotationBase.prototype.setAnnotationPixelValue = function (location) {\n    var rect = this.annotation.region === 'Chart' ? new Rect(0, 0, this.control.availableSize.width, this.control.availableSize.height) : this.isChart ? this.control.chartAxisLayoutPanel.seriesClipRect : this.control.series[0].accumulationBound;\n    location.x = (typeof this.annotation.x !== 'string' ? typeof this.annotation.x === 'number' ? this.annotation.x : 0 : stringToNumber(this.annotation.x, rect.width)) + rect.x;\n    location.y = (typeof this.annotation.y === 'number' ? this.annotation.y : stringToNumber(this.annotation.y, rect.height)) + rect.y;\n    return true;\n  };\n  /**\n   * Method to calculate the location for annotation - coordinate unit as point.\n   *\n   * @private\n   * @param location\n   */\n  AnnotationBase.prototype.setAnnotationPointValue = function (location) {\n    var symbolLocation = new ChartLocation(0, 0);\n    if (this.isChart) {\n      var chart = this.control;\n      var annotation = this.annotation;\n      var xAxisName = annotation.xAxisName;\n      var yAxisName = annotation.yAxisName;\n      var isInverted = chart.requireInvertedAxis;\n      var stockChart = this.control.stockChart;\n      var xAxis = void 0;\n      var yAxis = void 0;\n      var xValue = void 0;\n      for (var _i = 0, _a = chart.axisCollections; _i < _a.length; _i++) {\n        var axis = _a[_i];\n        if (xAxisName === axis.name || xAxisName == null && axis.name === 'primaryXAxis') {\n          xAxis = axis;\n          if (xAxis.valueType.indexOf('Category') > -1) {\n            var xAnnotation = xAxis.valueType === 'DateTimeCategory' ? annotation.x.getTime().toString() : annotation.x;\n            if (xAxis.labels.indexOf(xAnnotation) < 0) {\n              return false;\n            } else {\n              xValue = xAxis.labels.indexOf(xAnnotation);\n            }\n          } else if (xAxis.valueType === 'DateTime') {\n            var option = {\n              skeleton: 'full',\n              type: 'dateTime'\n            };\n            xValue = typeof this.annotation.x === 'object' || typeof new Date(this.annotation.x) === 'object' ? Date.parse(chart.intl.getDateParser(option)(chart.intl.getDateFormat(option)(new Date(DataUtil.parse.parseJson({\n              val: annotation.x\n            }).val)))) : 0;\n          } else {\n            xValue = +annotation.x;\n          }\n        } else if (yAxisName === axis.name || yAxisName == null && axis.name === 'primaryYAxis') {\n          yAxis = axis;\n        }\n      }\n      if (xAxis && yAxis && withIn(xAxis.valueType === 'Logarithmic' ? logBase(xValue, xAxis.logBase) : xValue, xAxis.visibleRange) && withIn(yAxis.valueType === 'Logarithmic' ? logBase(+annotation.y, yAxis.logBase) : +annotation.y, yAxis.visibleRange)) {\n        symbolLocation = getPoint(xValue, +annotation.y, xAxis, yAxis, isInverted);\n        location.x = symbolLocation.x + (isInverted ? yAxis.rect.x : xAxis.rect.x);\n        // for stockchart, stockchart's toolbar height and title size is added for annotation content\n        location.y = symbolLocation.y + (isInverted ? xAxis.rect.y : yAxis.rect.y) + (stockChart && stockChart.enablePeriodSelector ? stockChart.toolbarHeight + stockChart.titleSize.height : 0);\n      } else {\n        return false;\n      }\n      return true;\n    } else {\n      return this.setAccumulationPointValue(location);\n    }\n  };\n  /**\n   * To process the annotation for accumulation chart\n   *\n   * @param annotation\n   * @param index\n   * @param parentElement\n   */\n  AnnotationBase.prototype.processAnnotation = function (annotation, index, parentElement) {\n    var chart = this.control;\n    var location = new ChartLocation(0, 0);\n    var annotationElement = this.render(annotation, index);\n    var annotationRendered = function () {\n      annotationElement.style.transform = 'translate(-50%, -50%)';\n    };\n    annotationRendered.bind(location, this);\n    if (this['setAnnotation' + annotation.coordinateUnits + 'Value'](location)) {\n      this.setElementStyle(location, annotationElement, parentElement);\n    } else if (this.control.redraw) {\n      removeElement(annotationElement.id);\n    }\n    updateBlazorTemplate((this.control.element.id + 'Annotation' + index).replace(/[^a-zA-Z0-9]/g, ''), 'ContentTemplate', chart.stockChart ? chart.stockChart.annotations[index] : this.control.annotations[index], undefined, annotationRendered);\n  };\n  /**\n   * Method to calculate the location for annotation - coordinate unit as point in accumulation chart.\n   *\n   * @private\n   * @param location\n   */\n  AnnotationBase.prototype.setAccumulationPointValue = function (location) {\n    var accumulation = this.control;\n    var point;\n    for (var _i = 0, _a = accumulation.visibleSeries[0].points; _i < _a.length; _i++) {\n      var accPoint = _a[_i];\n      if (typeof accPoint.x === 'object') {\n        if (Date.parse(accPoint.x) === Date.parse(this.annotation.x) && accPoint.y === this.annotation.y) {\n          point = accPoint;\n          break;\n        }\n      } else {\n        if (accPoint.x == this.annotation.x && accPoint.y == this.annotation.y) {\n          point = accPoint;\n          break;\n        }\n      }\n    }\n    if (point && point.visible) {\n      location.x = point.symbolLocation.x;\n      location.y = point.symbolLocation.y;\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /**\n   * Method to set the element style for accumulation / chart annotation.\n   *\n   * @private\n   * @param location\n   * @param element\n   * @param parentElement\n   */\n  AnnotationBase.prototype.setElementStyle = function (location, element, parentElement) {\n    var elementRect = measureElementRect(element, this.control.redraw);\n    var argsData = {\n      cancel: false,\n      name: annotationRender,\n      content: element,\n      location: location\n    };\n    this.control.trigger(annotationRender, argsData);\n    if (!argsData.cancel) {\n      argsData.content.style.left = this.setAlignmentValue(this.annotation.horizontalAlignment, elementRect.width, argsData.location.x) + 'px';\n      argsData.content.style.top = this.setAlignmentValue(this.annotation.verticalAlignment, elementRect.height, argsData.location.y) + 'px';\n      argsData.content.setAttribute('aria-label', this.annotation.description || 'Annotation');\n      appendElement(argsData.content, parentElement, this.control.redraw, true, 'left', 'top');\n    }\n  };\n  /**\n   * Method to calculate the alignment value for annotation.\n   *\n   * @private\n   * @param alignment\n   * @param size\n   * @param value\n   */\n  AnnotationBase.prototype.setAlignmentValue = function (alignment, size, value) {\n    switch (alignment) {\n      case 'Top':\n      case 'Near':\n        value -= size;\n        break;\n      case 'Bottom':\n      case 'Far':\n        value += 0;\n        break;\n      case 'Middle':\n      case 'Center':\n        value -= size / 2;\n        break;\n    }\n    return value;\n  };\n  return AnnotationBase;\n}();\nexport { AnnotationBase };","map":{"version":3,"names":["createTemplate","measureElementRect","logBase","removeElement","ChartLocation","stringToNumber","appendElement","withIn","Rect","getPoint","createElement","updateBlazorTemplate","annotationRender","DataUtil","AnnotationBase","control","prototype","render","annotation","index","isChart","getModuleName","childElement","id","element","styles","content","setAnnotationPixelValue","location","rect","region","availableSize","width","height","chartAxisLayoutPanel","seriesClipRect","series","accumulationBound","x","y","setAnnotationPointValue","symbolLocation","chart","xAxisName","yAxisName","isInverted","requireInvertedAxis","stockChart","xAxis","yAxis","xValue","_i","_a","axisCollections","length","axis","name","valueType","indexOf","xAnnotation","getTime","toString","labels","option","skeleton","type","Date","parse","intl","getDateParser","getDateFormat","parseJson","val","visibleRange","enablePeriodSelector","toolbarHeight","titleSize","setAccumulationPointValue","processAnnotation","parentElement","annotationElement","annotationRendered","style","transform","bind","coordinateUnits","setElementStyle","redraw","replace","annotations","undefined","accumulation","point","visibleSeries","points","accPoint","visible","elementRect","argsData","cancel","trigger","left","setAlignmentValue","horizontalAlignment","top","verticalAlignment","setAttribute","description","alignment","size","value"],"sources":["/Users/thonghoangdanh/FullStack/birdnest/node_modules/@syncfusion/ej2-charts/src/common/annotation/annotation.js"],"sourcesContent":["import { createTemplate, measureElementRect, logBase, removeElement } from '../utils/helper';\nimport { ChartLocation, stringToNumber, appendElement, withIn } from '../utils/helper';\nimport { Rect } from '@syncfusion/ej2-svg-base';\nimport { getPoint } from '../utils/helper';\nimport { createElement, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { annotationRender } from '../model/constants';\nimport { DataUtil } from '@syncfusion/ej2-data';\n/**\n * Annotation Module handles the Annotation for chart and accumulation series.\n */\nvar AnnotationBase = /** @class */ (function () {\n    /**\n     * Constructor for chart and accumulation annotation\n     *\n     * @param control\n     */\n    function AnnotationBase(control) {\n        this.control = control;\n    }\n    /**\n     * Method to render the annotation for chart and accumulation series.\n     *\n     * @private\n     * @param annotation\n     * @param index\n     */\n    AnnotationBase.prototype.render = function (annotation, index) {\n        this.isChart = this.control.getModuleName() === 'chart';\n        this.annotation = annotation;\n        var childElement = createTemplate(createElement('div', {\n            id: this.control.element.id + '_Annotation_' + index,\n            styles: 'position: absolute; z-index: 1' //by default z-index set for annotation elements\n        }), index, annotation.content, this.control);\n        return childElement;\n    };\n    /**\n     * Method to calculate the location for annotation - coordinate unit as pixel.\n     *\n     * @private\n     * @param location\n     */\n    AnnotationBase.prototype.setAnnotationPixelValue = function (location) {\n        var rect = this.annotation.region === 'Chart' ?\n            new Rect(0, 0, this.control.availableSize.width, this.control.availableSize.height) :\n            this.isChart ?\n                this.control.chartAxisLayoutPanel.seriesClipRect :\n                this.control.series[0].accumulationBound;\n        location.x = ((typeof this.annotation.x !== 'string') ?\n            ((typeof this.annotation.x === 'number') ? this.annotation.x : 0) :\n            stringToNumber(this.annotation.x, rect.width)) + rect.x;\n        location.y = ((typeof this.annotation.y === 'number') ? this.annotation.y :\n            stringToNumber(this.annotation.y, rect.height)) + rect.y;\n        return true;\n    };\n    /**\n     * Method to calculate the location for annotation - coordinate unit as point.\n     *\n     * @private\n     * @param location\n     */\n    AnnotationBase.prototype.setAnnotationPointValue = function (location) {\n        var symbolLocation = new ChartLocation(0, 0);\n        if (this.isChart) {\n            var chart = this.control;\n            var annotation = this.annotation;\n            var xAxisName = annotation.xAxisName;\n            var yAxisName = annotation.yAxisName;\n            var isInverted = chart.requireInvertedAxis;\n            var stockChart = this.control.stockChart;\n            var xAxis = void 0;\n            var yAxis = void 0;\n            var xValue = void 0;\n            for (var _i = 0, _a = chart.axisCollections; _i < _a.length; _i++) {\n                var axis = _a[_i];\n                if (xAxisName === axis.name || (xAxisName == null && axis.name === 'primaryXAxis')) {\n                    xAxis = axis;\n                    if (xAxis.valueType.indexOf('Category') > -1) {\n                        var xAnnotation = xAxis.valueType === 'DateTimeCategory' ? (annotation.x.getTime()).toString() :\n                            annotation.x;\n                        if (xAxis.labels.indexOf(xAnnotation) < 0) {\n                            return false;\n                        }\n                        else {\n                            xValue = xAxis.labels.indexOf(xAnnotation);\n                        }\n                    }\n                    else if (xAxis.valueType === 'DateTime') {\n                        var option = { skeleton: 'full', type: 'dateTime' };\n                        xValue = (typeof this.annotation.x === 'object' || typeof new Date(this.annotation.x) === 'object') ?\n                            Date.parse(chart.intl.getDateParser(option)(chart.intl.getDateFormat(option)(new Date(DataUtil.parse.parseJson({ val: annotation.x }).val)))) : 0;\n                    }\n                    else {\n                        xValue = +annotation.x;\n                    }\n                }\n                else if (yAxisName === axis.name || (yAxisName == null && axis.name === 'primaryYAxis')) {\n                    yAxis = axis;\n                }\n            }\n            if (xAxis && yAxis && withIn(xAxis.valueType === 'Logarithmic' ? logBase(xValue, xAxis.logBase) : xValue, xAxis.visibleRange) && withIn(yAxis.valueType === 'Logarithmic' ? logBase(+annotation.y, yAxis.logBase) : +annotation.y, yAxis.visibleRange)) {\n                symbolLocation = getPoint(xValue, +annotation.y, xAxis, yAxis, isInverted);\n                location.x = symbolLocation.x + (isInverted ? yAxis.rect.x : xAxis.rect.x);\n                // for stockchart, stockchart's toolbar height and title size is added for annotation content\n                location.y = symbolLocation.y + (isInverted ? xAxis.rect.y : yAxis.rect.y) +\n                    ((stockChart && stockChart.enablePeriodSelector) ? stockChart.toolbarHeight + stockChart.titleSize.height : 0);\n            }\n            else {\n                return false;\n            }\n            return true;\n        }\n        else {\n            return this.setAccumulationPointValue(location);\n        }\n    };\n    /**\n     * To process the annotation for accumulation chart\n     *\n     * @param annotation\n     * @param index\n     * @param parentElement\n     */\n    AnnotationBase.prototype.processAnnotation = function (annotation, index, parentElement) {\n        var chart = this.control;\n        var location = new ChartLocation(0, 0);\n        var annotationElement = this.render(annotation, index);\n        var annotationRendered = function () {\n            annotationElement.style.transform = 'translate(-50%, -50%)';\n        };\n        annotationRendered.bind(location, this);\n        if (this['setAnnotation' + annotation.coordinateUnits + 'Value'](location)) {\n            this.setElementStyle(location, annotationElement, parentElement);\n        }\n        else if (this.control.redraw) {\n            removeElement(annotationElement.id);\n        }\n        updateBlazorTemplate((this.control.element.id + 'Annotation' + index).replace(/[^a-zA-Z0-9]/g, ''), 'ContentTemplate', chart.stockChart ? chart.stockChart.annotations[index] : this.control.annotations[index], undefined, annotationRendered);\n    };\n    /**\n     * Method to calculate the location for annotation - coordinate unit as point in accumulation chart.\n     *\n     * @private\n     * @param location\n     */\n    AnnotationBase.prototype.setAccumulationPointValue = function (location) {\n        var accumulation = this.control;\n        var point;\n        for (var _i = 0, _a = accumulation.visibleSeries[0].points; _i < _a.length; _i++) {\n            var accPoint = _a[_i];\n            if (typeof accPoint.x === 'object') {\n                if (Date.parse(accPoint.x) === Date.parse(this.annotation.x) &&\n                    accPoint.y === this.annotation.y) {\n                    point = accPoint;\n                    break;\n                }\n            }\n            else {\n                if (accPoint.x == this.annotation.x && accPoint.y == this.annotation.y) {\n                    point = accPoint;\n                    break;\n                }\n            }\n        }\n        if (point && point.visible) {\n            location.x = point.symbolLocation.x;\n            location.y = point.symbolLocation.y;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Method to set the element style for accumulation / chart annotation.\n     *\n     * @private\n     * @param location\n     * @param element\n     * @param parentElement\n     */\n    AnnotationBase.prototype.setElementStyle = function (location, element, parentElement) {\n        var elementRect = measureElementRect(element, this.control.redraw);\n        var argsData = {\n            cancel: false, name: annotationRender, content: element,\n            location: location\n        };\n        this.control.trigger(annotationRender, argsData);\n        if (!argsData.cancel) {\n            argsData.content.style.left = this.setAlignmentValue(this.annotation.horizontalAlignment, elementRect.width, argsData.location.x) + 'px';\n            argsData.content.style.top = this.setAlignmentValue(this.annotation.verticalAlignment, elementRect.height, argsData.location.y) + 'px';\n            argsData.content.setAttribute('aria-label', this.annotation.description || 'Annotation');\n            appendElement(argsData.content, parentElement, this.control.redraw, true, 'left', 'top');\n        }\n    };\n    /**\n     * Method to calculate the alignment value for annotation.\n     *\n     * @private\n     * @param alignment\n     * @param size\n     * @param value\n     */\n    AnnotationBase.prototype.setAlignmentValue = function (alignment, size, value) {\n        switch (alignment) {\n            case 'Top':\n            case 'Near':\n                value -= size;\n                break;\n            case 'Bottom':\n            case 'Far':\n                value += 0;\n                break;\n            case 'Middle':\n            case 'Center':\n                value -= (size / 2);\n                break;\n        }\n        return value;\n    };\n    return AnnotationBase;\n}());\nexport { AnnotationBase };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}