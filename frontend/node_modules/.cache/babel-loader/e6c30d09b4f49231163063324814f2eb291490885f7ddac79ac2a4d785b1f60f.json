{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable jsdoc/require-returns */\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n/* eslint-disable valid-jsdoc */\n/* eslint-disable jsdoc/require-param */\nimport { Series } from '../series/chart-series';\nimport { TechnicalAnalysis } from './indicator-base';\n/**\n * `StochasticIndicator` module is used to render stochastic indicator.\n */\nvar StochasticIndicator = /** @class */function (_super) {\n  __extends(StochasticIndicator, _super);\n  function StochasticIndicator() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Defines the collection of series that represents the stochastic indicator\n   *\n   * @private\n   */\n  StochasticIndicator.prototype.initSeriesCollection = function (indicator, chart) {\n    _super.prototype.initSeriesCollection.call(this, indicator, chart);\n    var periodLine = new Series(indicator, 'targetSeries', {}, true);\n    this.setSeriesProperties(periodLine, indicator, 'PeriodLine', indicator.periodLine.color, indicator.periodLine.width, chart);\n    if (indicator.showZones) {\n      var upperSeries = new Series(indicator, 'targetSeries', {}, true);\n      this.setSeriesProperties(upperSeries, indicator, 'UpperLine', indicator.upperLine.color, indicator.upperLine.width, chart);\n      var lowerSeries = new Series(indicator, 'targetSeries', {}, true);\n      this.setSeriesProperties(lowerSeries, indicator, 'LowerLine', indicator.lowerLine.color, indicator.lowerLine.width, chart);\n    }\n  };\n  /**\n   * Defines the predictions based on stochastic approach\n   *\n   * @private\n   */\n  StochasticIndicator.prototype.initDataSource = function (indicator, chart) {\n    var signalCollection = [];\n    var upperCollection = [];\n    var lowerCollection = [];\n    var periodCollection = [];\n    var source = [];\n    //prepare data\n    var validData = indicator.points;\n    if (validData.length && validData.length >= indicator.period) {\n      if (indicator.showZones) {\n        for (var i = 0; i < validData.length; i++) {\n          upperCollection.push(this.getDataPoint(validData[i].x, indicator.overBought, validData[i], indicator.targetSeries[2], upperCollection.length));\n          lowerCollection.push(this.getDataPoint(validData[i].x, indicator.overSold, validData[i], indicator.targetSeries[3], lowerCollection.length));\n        }\n      }\n      source = this.calculatePeriod(indicator.period, indicator.kPeriod, validData, indicator.targetSeries[1]);\n      periodCollection = this.smaCalculation(indicator.period, indicator.kPeriod, source, indicator.targetSeries[1]);\n      signalCollection = this.smaCalculation(indicator.period + indicator.kPeriod - 1, indicator.dPeriod, source, indicator.targetSeries[0]);\n    }\n    this.setSeriesRange(signalCollection, indicator, indicator.targetSeries[0]);\n    this.setSeriesRange(periodCollection, indicator, indicator.targetSeries[1]);\n    if (indicator.showZones) {\n      this.setSeriesRange(upperCollection, indicator, indicator.targetSeries[2]);\n      this.setSeriesRange(lowerCollection, indicator, indicator.targetSeries[3]);\n    }\n  };\n  /**\n   * Calculates the SMA Values\n   *\n   * @private\n   */\n  StochasticIndicator.prototype.smaCalculation = function (period, kPeriod, data, sourceSeries) {\n    var pointCollection = [];\n    if (data.length >= period + kPeriod) {\n      var count = period + (kPeriod - 1);\n      var temp = [];\n      var values = [];\n      for (var i = 0; i < data.length; i++) {\n        var value = Number(data[i].y);\n        temp.push(value);\n      }\n      var length_1 = temp.length;\n      while (length_1 >= count) {\n        var sum = 0;\n        for (var i = period - 1; i < period + kPeriod - 1; i++) {\n          sum = sum + temp[i];\n        }\n        sum = sum / kPeriod;\n        values.push(sum.toFixed(2));\n        temp.splice(0, 1);\n        length_1 = temp.length;\n      }\n      var len = count - 1;\n      for (var i = 0; i < data.length; i++) {\n        if (!(i < len)) {\n          pointCollection.push(this.getDataPoint(data[i].x, Number(values[i - len]), data[i], sourceSeries, pointCollection.length));\n          data[i].y = Number(values[i - len]);\n        }\n      }\n    }\n    return pointCollection;\n  };\n  /**\n   * Calculates the period line values.\n   *\n   * @private\n   */\n  StochasticIndicator.prototype.calculatePeriod = function (period, kPeriod, data, series) {\n    var lowValues = [];\n    var highValues = [];\n    var closeValues = [];\n    var modifiedSource = [];\n    for (var j = 0; j < data.length; j++) {\n      lowValues[j] = data[j].low;\n      highValues[j] = data[j].high;\n      closeValues[j] = data[j].close;\n    }\n    if (data.length > period) {\n      var mins = [];\n      var maxs = [];\n      for (var i = 0; i < period - 1; ++i) {\n        maxs.push(0);\n        mins.push(0);\n        modifiedSource.push(this.getDataPoint(data[i].x, data[i].close, data[i], series, modifiedSource.length));\n      }\n      for (var i = period - 1; i < data.length; ++i) {\n        var min = Number.MAX_VALUE;\n        var max = Number.MIN_VALUE;\n        for (var j = 0; j < period; ++j) {\n          min = Math.min(min, lowValues[i - j]);\n          max = Math.max(max, highValues[i - j]);\n        }\n        maxs.push(max);\n        mins.push(min);\n      }\n      for (var i = period - 1; i < data.length; ++i) {\n        var top_1 = 0;\n        var bottom = 0;\n        top_1 += closeValues[i] - mins[i];\n        bottom += maxs[i] - mins[i];\n        modifiedSource.push(this.getDataPoint(data[i].x, top_1 / bottom * 100, data[i], series, modifiedSource.length));\n      }\n    }\n    return modifiedSource;\n  };\n  /**\n   * To destroy the Stocastic Indicator.\n   *\n   * @returns {void}\n   * @private\n   */\n  StochasticIndicator.prototype.destroy = function () {\n    /**\n     * Destroys the stochastic indicator\n     */\n  };\n  /**\n   * Get module name.\n   */\n  StochasticIndicator.prototype.getModuleName = function () {\n    /**\n     * Returns the module name of the indicator.\n     */\n    return 'StochasticIndicator';\n  };\n  return StochasticIndicator;\n}(TechnicalAnalysis);\nexport { StochasticIndicator };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Series","TechnicalAnalysis","StochasticIndicator","_super","apply","arguments","initSeriesCollection","indicator","chart","call","periodLine","setSeriesProperties","color","width","showZones","upperSeries","upperLine","lowerSeries","lowerLine","initDataSource","signalCollection","upperCollection","lowerCollection","periodCollection","source","validData","points","length","period","i","push","getDataPoint","x","overBought","targetSeries","overSold","calculatePeriod","kPeriod","smaCalculation","dPeriod","setSeriesRange","data","sourceSeries","pointCollection","count","temp","values","value","Number","y","length_1","sum","toFixed","splice","len","series","lowValues","highValues","closeValues","modifiedSource","j","low","high","close","mins","maxs","min","MAX_VALUE","max","MIN_VALUE","Math","top_1","bottom","destroy","getModuleName"],"sources":["/Users/thonghoangdanh/FullStack/birdnest/node_modules/@syncfusion/ej2-charts/src/chart/technical-indicators/stochastic-indicator.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable jsdoc/require-returns */\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n/* eslint-disable valid-jsdoc */\n/* eslint-disable jsdoc/require-param */\nimport { Series } from '../series/chart-series';\nimport { TechnicalAnalysis } from './indicator-base';\n/**\n * `StochasticIndicator` module is used to render stochastic indicator.\n */\nvar StochasticIndicator = /** @class */ (function (_super) {\n    __extends(StochasticIndicator, _super);\n    function StochasticIndicator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Defines the collection of series that represents the stochastic indicator\n     *\n     * @private\n     */\n    StochasticIndicator.prototype.initSeriesCollection = function (indicator, chart) {\n        _super.prototype.initSeriesCollection.call(this, indicator, chart);\n        var periodLine = new Series(indicator, 'targetSeries', {}, true);\n        this.setSeriesProperties(periodLine, indicator, 'PeriodLine', indicator.periodLine.color, indicator.periodLine.width, chart);\n        if (indicator.showZones) {\n            var upperSeries = new Series(indicator, 'targetSeries', {}, true);\n            this.setSeriesProperties(upperSeries, indicator, 'UpperLine', indicator.upperLine.color, indicator.upperLine.width, chart);\n            var lowerSeries = new Series(indicator, 'targetSeries', {}, true);\n            this.setSeriesProperties(lowerSeries, indicator, 'LowerLine', indicator.lowerLine.color, indicator.lowerLine.width, chart);\n        }\n    };\n    /**\n     * Defines the predictions based on stochastic approach\n     *\n     * @private\n     */\n    StochasticIndicator.prototype.initDataSource = function (indicator, chart) {\n        var signalCollection = [];\n        var upperCollection = [];\n        var lowerCollection = [];\n        var periodCollection = [];\n        var source = [];\n        //prepare data\n        var validData = indicator.points;\n        if (validData.length && validData.length >= indicator.period) {\n            if (indicator.showZones) {\n                for (var i = 0; i < validData.length; i++) {\n                    upperCollection.push(this.getDataPoint(validData[i].x, indicator.overBought, validData[i], indicator.targetSeries[2], upperCollection.length));\n                    lowerCollection.push(this.getDataPoint(validData[i].x, indicator.overSold, validData[i], indicator.targetSeries[3], lowerCollection.length));\n                }\n            }\n            source = this.calculatePeriod(indicator.period, indicator.kPeriod, validData, indicator.targetSeries[1]);\n            periodCollection = this.smaCalculation(indicator.period, indicator.kPeriod, source, indicator.targetSeries[1]);\n            signalCollection = this.smaCalculation(indicator.period + indicator.kPeriod - 1, indicator.dPeriod, source, indicator.targetSeries[0]);\n        }\n        this.setSeriesRange(signalCollection, indicator, indicator.targetSeries[0]);\n        this.setSeriesRange(periodCollection, indicator, indicator.targetSeries[1]);\n        if (indicator.showZones) {\n            this.setSeriesRange(upperCollection, indicator, indicator.targetSeries[2]);\n            this.setSeriesRange(lowerCollection, indicator, indicator.targetSeries[3]);\n        }\n    };\n    /**\n     * Calculates the SMA Values\n     *\n     * @private\n     */\n    StochasticIndicator.prototype.smaCalculation = function (period, kPeriod, data, sourceSeries) {\n        var pointCollection = [];\n        if (data.length >= period + kPeriod) {\n            var count = period + (kPeriod - 1);\n            var temp = [];\n            var values = [];\n            for (var i = 0; i < data.length; i++) {\n                var value = Number(data[i].y);\n                temp.push(value);\n            }\n            var length_1 = temp.length;\n            while (length_1 >= count) {\n                var sum = 0;\n                for (var i = period - 1; i < (period + kPeriod - 1); i++) {\n                    sum = sum + temp[i];\n                }\n                sum = sum / kPeriod;\n                values.push(sum.toFixed(2));\n                temp.splice(0, 1);\n                length_1 = temp.length;\n            }\n            var len = count - 1;\n            for (var i = 0; i < data.length; i++) {\n                if (!(i < len)) {\n                    pointCollection.push(this.getDataPoint(data[i].x, Number(values[i - len]), data[i], sourceSeries, pointCollection.length));\n                    data[i].y = Number((values[i - len]));\n                }\n            }\n        }\n        return pointCollection;\n    };\n    /**\n     * Calculates the period line values.\n     *\n     * @private\n     */\n    StochasticIndicator.prototype.calculatePeriod = function (period, kPeriod, data, series) {\n        var lowValues = [];\n        var highValues = [];\n        var closeValues = [];\n        var modifiedSource = [];\n        for (var j = 0; j < data.length; j++) {\n            lowValues[j] = data[j].low;\n            highValues[j] = data[j].high;\n            closeValues[j] = data[j].close;\n        }\n        if (data.length > period) {\n            var mins = [];\n            var maxs = [];\n            for (var i = 0; i < period - 1; ++i) {\n                maxs.push(0);\n                mins.push(0);\n                modifiedSource.push(this.getDataPoint(data[i].x, data[i].close, data[i], series, modifiedSource.length));\n            }\n            for (var i = period - 1; i < data.length; ++i) {\n                var min = Number.MAX_VALUE;\n                var max = Number.MIN_VALUE;\n                for (var j = 0; j < period; ++j) {\n                    min = Math.min(min, lowValues[i - j]);\n                    max = Math.max(max, highValues[i - j]);\n                }\n                maxs.push(max);\n                mins.push(min);\n            }\n            for (var i = period - 1; i < data.length; ++i) {\n                var top_1 = 0;\n                var bottom = 0;\n                top_1 += closeValues[i] - mins[i];\n                bottom += maxs[i] - mins[i];\n                modifiedSource.push(this.getDataPoint(data[i].x, (top_1 / bottom) * 100, data[i], series, modifiedSource.length));\n            }\n        }\n        return modifiedSource;\n    };\n    /**\n     * To destroy the Stocastic Indicator.\n     *\n     * @returns {void}\n     * @private\n     */\n    StochasticIndicator.prototype.destroy = function () {\n        /**\n         * Destroys the stochastic indicator\n         */\n    };\n    /**\n     * Get module name.\n     */\n    StochasticIndicator.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the indicator.\n         */\n        return 'StochasticIndicator';\n    };\n    return StochasticIndicator;\n}(TechnicalAnalysis));\nexport { StochasticIndicator };\n"],"mappings":"AAAA,IAAIA,SAAS,GAAI,IAAI,IAAI,IAAI,CAACA,SAAS,IAAM,YAAY;EACrD,IAAIC,aAAa,GAAG,UAAUC,CAAC,EAAEC,CAAC,EAAE;IAChCF,aAAa,GAAGG,MAAM,CAACC,cAAc,IAChC;MAAEC,SAAS,EAAE;IAAG,CAAC,YAAYC,KAAK,IAAI,UAAUL,CAAC,EAAEC,CAAC,EAAE;MAAED,CAAC,CAACI,SAAS,GAAGH,CAAC;IAAE,CAAE,IAC5E,UAAUD,CAAC,EAAEC,CAAC,EAAE;MAAE,KAAK,IAAIK,CAAC,IAAIL,CAAC,EAAE,IAAIA,CAAC,CAACM,cAAc,CAACD,CAAC,CAAC,EAAEN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IAAE,CAAC;IAC9E,OAAOP,aAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;EAC9B,CAAC;EACD,OAAO,UAAUD,CAAC,EAAEC,CAAC,EAAE;IACnBF,aAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;IACnB,SAASO,EAAE,GAAG;MAAE,IAAI,CAACC,WAAW,GAAGT,CAAC;IAAE;IACtCA,CAAC,CAACU,SAAS,GAAGT,CAAC,KAAK,IAAI,GAAGC,MAAM,CAACS,MAAM,CAACV,CAAC,CAAC,IAAIO,EAAE,CAACE,SAAS,GAAGT,CAAC,CAACS,SAAS,EAAE,IAAIF,EAAE,EAAE,CAAC;EACxF,CAAC;AACL,CAAC,EAAG;AACJ;AACA;AACA;AACA;AACA;AACA,SAASI,MAAM,QAAQ,wBAAwB;AAC/C,SAASC,iBAAiB,QAAQ,kBAAkB;AACpD;AACA;AACA;AACA,IAAIC,mBAAmB,GAAG,aAAe,UAAUC,MAAM,EAAE;EACvDjB,SAAS,CAACgB,mBAAmB,EAAEC,MAAM,CAAC;EACtC,SAASD,mBAAmB,GAAG;IAC3B,OAAOC,MAAM,KAAK,IAAI,IAAIA,MAAM,CAACC,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,IAAI,IAAI;EACnE;EACA;AACJ;AACA;AACA;AACA;EACIH,mBAAmB,CAACJ,SAAS,CAACQ,oBAAoB,GAAG,UAAUC,SAAS,EAAEC,KAAK,EAAE;IAC7EL,MAAM,CAACL,SAAS,CAACQ,oBAAoB,CAACG,IAAI,CAAC,IAAI,EAAEF,SAAS,EAAEC,KAAK,CAAC;IAClE,IAAIE,UAAU,GAAG,IAAIV,MAAM,CAACO,SAAS,EAAE,cAAc,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC;IAChE,IAAI,CAACI,mBAAmB,CAACD,UAAU,EAAEH,SAAS,EAAE,YAAY,EAAEA,SAAS,CAACG,UAAU,CAACE,KAAK,EAAEL,SAAS,CAACG,UAAU,CAACG,KAAK,EAAEL,KAAK,CAAC;IAC5H,IAAID,SAAS,CAACO,SAAS,EAAE;MACrB,IAAIC,WAAW,GAAG,IAAIf,MAAM,CAACO,SAAS,EAAE,cAAc,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC;MACjE,IAAI,CAACI,mBAAmB,CAACI,WAAW,EAAER,SAAS,EAAE,WAAW,EAAEA,SAAS,CAACS,SAAS,CAACJ,KAAK,EAAEL,SAAS,CAACS,SAAS,CAACH,KAAK,EAAEL,KAAK,CAAC;MAC1H,IAAIS,WAAW,GAAG,IAAIjB,MAAM,CAACO,SAAS,EAAE,cAAc,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC;MACjE,IAAI,CAACI,mBAAmB,CAACM,WAAW,EAAEV,SAAS,EAAE,WAAW,EAAEA,SAAS,CAACW,SAAS,CAACN,KAAK,EAAEL,SAAS,CAACW,SAAS,CAACL,KAAK,EAAEL,KAAK,CAAC;IAC9H;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIN,mBAAmB,CAACJ,SAAS,CAACqB,cAAc,GAAG,UAAUZ,SAAS,EAAEC,KAAK,EAAE;IACvE,IAAIY,gBAAgB,GAAG,EAAE;IACzB,IAAIC,eAAe,GAAG,EAAE;IACxB,IAAIC,eAAe,GAAG,EAAE;IACxB,IAAIC,gBAAgB,GAAG,EAAE;IACzB,IAAIC,MAAM,GAAG,EAAE;IACf;IACA,IAAIC,SAAS,GAAGlB,SAAS,CAACmB,MAAM;IAChC,IAAID,SAAS,CAACE,MAAM,IAAIF,SAAS,CAACE,MAAM,IAAIpB,SAAS,CAACqB,MAAM,EAAE;MAC1D,IAAIrB,SAAS,CAACO,SAAS,EAAE;QACrB,KAAK,IAAIe,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,SAAS,CAACE,MAAM,EAAEE,CAAC,EAAE,EAAE;UACvCR,eAAe,CAACS,IAAI,CAAC,IAAI,CAACC,YAAY,CAACN,SAAS,CAACI,CAAC,CAAC,CAACG,CAAC,EAAEzB,SAAS,CAAC0B,UAAU,EAAER,SAAS,CAACI,CAAC,CAAC,EAAEtB,SAAS,CAAC2B,YAAY,CAAC,CAAC,CAAC,EAAEb,eAAe,CAACM,MAAM,CAAC,CAAC;UAC9IL,eAAe,CAACQ,IAAI,CAAC,IAAI,CAACC,YAAY,CAACN,SAAS,CAACI,CAAC,CAAC,CAACG,CAAC,EAAEzB,SAAS,CAAC4B,QAAQ,EAAEV,SAAS,CAACI,CAAC,CAAC,EAAEtB,SAAS,CAAC2B,YAAY,CAAC,CAAC,CAAC,EAAEZ,eAAe,CAACK,MAAM,CAAC,CAAC;QAChJ;MACJ;MACAH,MAAM,GAAG,IAAI,CAACY,eAAe,CAAC7B,SAAS,CAACqB,MAAM,EAAErB,SAAS,CAAC8B,OAAO,EAAEZ,SAAS,EAAElB,SAAS,CAAC2B,YAAY,CAAC,CAAC,CAAC,CAAC;MACxGX,gBAAgB,GAAG,IAAI,CAACe,cAAc,CAAC/B,SAAS,CAACqB,MAAM,EAAErB,SAAS,CAAC8B,OAAO,EAAEb,MAAM,EAAEjB,SAAS,CAAC2B,YAAY,CAAC,CAAC,CAAC,CAAC;MAC9Gd,gBAAgB,GAAG,IAAI,CAACkB,cAAc,CAAC/B,SAAS,CAACqB,MAAM,GAAGrB,SAAS,CAAC8B,OAAO,GAAG,CAAC,EAAE9B,SAAS,CAACgC,OAAO,EAAEf,MAAM,EAAEjB,SAAS,CAAC2B,YAAY,CAAC,CAAC,CAAC,CAAC;IAC1I;IACA,IAAI,CAACM,cAAc,CAACpB,gBAAgB,EAAEb,SAAS,EAAEA,SAAS,CAAC2B,YAAY,CAAC,CAAC,CAAC,CAAC;IAC3E,IAAI,CAACM,cAAc,CAACjB,gBAAgB,EAAEhB,SAAS,EAAEA,SAAS,CAAC2B,YAAY,CAAC,CAAC,CAAC,CAAC;IAC3E,IAAI3B,SAAS,CAACO,SAAS,EAAE;MACrB,IAAI,CAAC0B,cAAc,CAACnB,eAAe,EAAEd,SAAS,EAAEA,SAAS,CAAC2B,YAAY,CAAC,CAAC,CAAC,CAAC;MAC1E,IAAI,CAACM,cAAc,CAAClB,eAAe,EAAEf,SAAS,EAAEA,SAAS,CAAC2B,YAAY,CAAC,CAAC,CAAC,CAAC;IAC9E;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIhC,mBAAmB,CAACJ,SAAS,CAACwC,cAAc,GAAG,UAAUV,MAAM,EAAES,OAAO,EAAEI,IAAI,EAAEC,YAAY,EAAE;IAC1F,IAAIC,eAAe,GAAG,EAAE;IACxB,IAAIF,IAAI,CAACd,MAAM,IAAIC,MAAM,GAAGS,OAAO,EAAE;MACjC,IAAIO,KAAK,GAAGhB,MAAM,IAAIS,OAAO,GAAG,CAAC,CAAC;MAClC,IAAIQ,IAAI,GAAG,EAAE;MACb,IAAIC,MAAM,GAAG,EAAE;MACf,KAAK,IAAIjB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGY,IAAI,CAACd,MAAM,EAAEE,CAAC,EAAE,EAAE;QAClC,IAAIkB,KAAK,GAAGC,MAAM,CAACP,IAAI,CAACZ,CAAC,CAAC,CAACoB,CAAC,CAAC;QAC7BJ,IAAI,CAACf,IAAI,CAACiB,KAAK,CAAC;MACpB;MACA,IAAIG,QAAQ,GAAGL,IAAI,CAAClB,MAAM;MAC1B,OAAOuB,QAAQ,IAAIN,KAAK,EAAE;QACtB,IAAIO,GAAG,GAAG,CAAC;QACX,KAAK,IAAItB,CAAC,GAAGD,MAAM,GAAG,CAAC,EAAEC,CAAC,GAAID,MAAM,GAAGS,OAAO,GAAG,CAAE,EAAER,CAAC,EAAE,EAAE;UACtDsB,GAAG,GAAGA,GAAG,GAAGN,IAAI,CAAChB,CAAC,CAAC;QACvB;QACAsB,GAAG,GAAGA,GAAG,GAAGd,OAAO;QACnBS,MAAM,CAAChB,IAAI,CAACqB,GAAG,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;QAC3BP,IAAI,CAACQ,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;QACjBH,QAAQ,GAAGL,IAAI,CAAClB,MAAM;MAC1B;MACA,IAAI2B,GAAG,GAAGV,KAAK,GAAG,CAAC;MACnB,KAAK,IAAIf,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGY,IAAI,CAACd,MAAM,EAAEE,CAAC,EAAE,EAAE;QAClC,IAAI,EAAEA,CAAC,GAAGyB,GAAG,CAAC,EAAE;UACZX,eAAe,CAACb,IAAI,CAAC,IAAI,CAACC,YAAY,CAACU,IAAI,CAACZ,CAAC,CAAC,CAACG,CAAC,EAAEgB,MAAM,CAACF,MAAM,CAACjB,CAAC,GAAGyB,GAAG,CAAC,CAAC,EAAEb,IAAI,CAACZ,CAAC,CAAC,EAAEa,YAAY,EAAEC,eAAe,CAAChB,MAAM,CAAC,CAAC;UAC1Hc,IAAI,CAACZ,CAAC,CAAC,CAACoB,CAAC,GAAGD,MAAM,CAAEF,MAAM,CAACjB,CAAC,GAAGyB,GAAG,CAAC,CAAE;QACzC;MACJ;IACJ;IACA,OAAOX,eAAe;EAC1B,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIzC,mBAAmB,CAACJ,SAAS,CAACsC,eAAe,GAAG,UAAUR,MAAM,EAAES,OAAO,EAAEI,IAAI,EAAEc,MAAM,EAAE;IACrF,IAAIC,SAAS,GAAG,EAAE;IAClB,IAAIC,UAAU,GAAG,EAAE;IACnB,IAAIC,WAAW,GAAG,EAAE;IACpB,IAAIC,cAAc,GAAG,EAAE;IACvB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGnB,IAAI,CAACd,MAAM,EAAEiC,CAAC,EAAE,EAAE;MAClCJ,SAAS,CAACI,CAAC,CAAC,GAAGnB,IAAI,CAACmB,CAAC,CAAC,CAACC,GAAG;MAC1BJ,UAAU,CAACG,CAAC,CAAC,GAAGnB,IAAI,CAACmB,CAAC,CAAC,CAACE,IAAI;MAC5BJ,WAAW,CAACE,CAAC,CAAC,GAAGnB,IAAI,CAACmB,CAAC,CAAC,CAACG,KAAK;IAClC;IACA,IAAItB,IAAI,CAACd,MAAM,GAAGC,MAAM,EAAE;MACtB,IAAIoC,IAAI,GAAG,EAAE;MACb,IAAIC,IAAI,GAAG,EAAE;MACb,KAAK,IAAIpC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,MAAM,GAAG,CAAC,EAAE,EAAEC,CAAC,EAAE;QACjCoC,IAAI,CAACnC,IAAI,CAAC,CAAC,CAAC;QACZkC,IAAI,CAAClC,IAAI,CAAC,CAAC,CAAC;QACZ6B,cAAc,CAAC7B,IAAI,CAAC,IAAI,CAACC,YAAY,CAACU,IAAI,CAACZ,CAAC,CAAC,CAACG,CAAC,EAAES,IAAI,CAACZ,CAAC,CAAC,CAACkC,KAAK,EAAEtB,IAAI,CAACZ,CAAC,CAAC,EAAE0B,MAAM,EAAEI,cAAc,CAAChC,MAAM,CAAC,CAAC;MAC5G;MACA,KAAK,IAAIE,CAAC,GAAGD,MAAM,GAAG,CAAC,EAAEC,CAAC,GAAGY,IAAI,CAACd,MAAM,EAAE,EAAEE,CAAC,EAAE;QAC3C,IAAIqC,GAAG,GAAGlB,MAAM,CAACmB,SAAS;QAC1B,IAAIC,GAAG,GAAGpB,MAAM,CAACqB,SAAS;QAC1B,KAAK,IAAIT,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGhC,MAAM,EAAE,EAAEgC,CAAC,EAAE;UAC7BM,GAAG,GAAGI,IAAI,CAACJ,GAAG,CAACA,GAAG,EAAEV,SAAS,CAAC3B,CAAC,GAAG+B,CAAC,CAAC,CAAC;UACrCQ,GAAG,GAAGE,IAAI,CAACF,GAAG,CAACA,GAAG,EAAEX,UAAU,CAAC5B,CAAC,GAAG+B,CAAC,CAAC,CAAC;QAC1C;QACAK,IAAI,CAACnC,IAAI,CAACsC,GAAG,CAAC;QACdJ,IAAI,CAAClC,IAAI,CAACoC,GAAG,CAAC;MAClB;MACA,KAAK,IAAIrC,CAAC,GAAGD,MAAM,GAAG,CAAC,EAAEC,CAAC,GAAGY,IAAI,CAACd,MAAM,EAAE,EAAEE,CAAC,EAAE;QAC3C,IAAI0C,KAAK,GAAG,CAAC;QACb,IAAIC,MAAM,GAAG,CAAC;QACdD,KAAK,IAAIb,WAAW,CAAC7B,CAAC,CAAC,GAAGmC,IAAI,CAACnC,CAAC,CAAC;QACjC2C,MAAM,IAAIP,IAAI,CAACpC,CAAC,CAAC,GAAGmC,IAAI,CAACnC,CAAC,CAAC;QAC3B8B,cAAc,CAAC7B,IAAI,CAAC,IAAI,CAACC,YAAY,CAACU,IAAI,CAACZ,CAAC,CAAC,CAACG,CAAC,EAAGuC,KAAK,GAAGC,MAAM,GAAI,GAAG,EAAE/B,IAAI,CAACZ,CAAC,CAAC,EAAE0B,MAAM,EAAEI,cAAc,CAAChC,MAAM,CAAC,CAAC;MACrH;IACJ;IACA,OAAOgC,cAAc;EACzB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIzD,mBAAmB,CAACJ,SAAS,CAAC2E,OAAO,GAAG,YAAY;IAChD;AACR;AACA;EAFQ,CAGH;EACD;AACJ;AACA;EACIvE,mBAAmB,CAACJ,SAAS,CAAC4E,aAAa,GAAG,YAAY;IACtD;AACR;AACA;IACQ,OAAO,qBAAqB;EAChC,CAAC;EACD,OAAOxE,mBAAmB;AAC9B,CAAC,CAACD,iBAAiB,CAAE;AACrB,SAASC,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}