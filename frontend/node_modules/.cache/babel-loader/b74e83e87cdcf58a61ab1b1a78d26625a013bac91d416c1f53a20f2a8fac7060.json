{"ast":null,"code":"var _jsxFileName = \"/Users/thonghoangdanh/FullStack/birdnest/src/components/Table.jsx\";\nimport React from 'react';\nimport birdnestService from '../services/birdnest';\nimport { useEffect } from 'react';\n\n//constructor for data to show in the table\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction dataConstructor(serialNumber, positionX, positionY, pilotInformation) {\n  this.serialNumber = serialNumber;\n  this.positionX = positionX;\n  this.positionY = positionY;\n  this.distance = Math.hypot(positionX, positionY);\n  this.pilotInformation = pilotInformation;\n}\n;\n\n//function to push the data into array, with timestamp\nconst push = (array, value) => {\n  array.push({\n    value: value,\n    time: Date.now()\n  });\n};\n\n//table function to be exported\nconst Table = _ref => {\n  let {\n    data\n  } = _ref;\n  const tableData = [];\n  for (const x of data) {\n    console.log(x);\n    birdnestService.getPilotInformation(x.children[0].value).then(data => {\n      let newData = new dataConstructor(x.children[0].value, x.children[8].value, x.children[7].value, data);\n      push(tableData, newData);\n    });\n  }\n\n  // delete data after 10 minutes\n  setInterval(() => {\n    let time = Date.now();\n    for (const item of tableData) {\n      if (time > item.time + 6000) {\n        tableData.splice(tableData.indexOf(item), 1);\n      }\n    }\n    ;\n  }, 6000);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Index\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Serial Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Distance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: tableData.map((item, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: i\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.value.serialNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.value.distance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","birdnestService","useEffect","dataConstructor","serialNumber","positionX","positionY","pilotInformation","distance","Math","hypot","push","array","value","time","Date","now","Table","data","tableData","x","console","log","getPilotInformation","children","then","newData","setInterval","item","splice","indexOf","map","i"],"sources":["/Users/thonghoangdanh/FullStack/birdnest/src/components/Table.jsx"],"sourcesContent":["import React from 'react';\nimport birdnestService from '../services/birdnest';\nimport { useEffect } from 'react';\n\n//constructor for data to show in the table\nfunction dataConstructor(serialNumber, positionX, positionY, pilotInformation ) {\n  this.serialNumber = serialNumber;\n  this.positionX = positionX;\n  this.positionY = positionY;\n  this.distance = Math.hypot(positionX, positionY);\n  this.pilotInformation = pilotInformation;\n};\n\n//function to push the data into array, with timestamp\nconst push = (array, value) => {\n  array.push({\n     value: value,\n     time: Date.now()\n  });\n};\n\n//table function to be exported\nconst Table = ({ data }) => {\n\n  const tableData = [];\n\n  for (const x of data) {\n    console.log(x);\n    birdnestService\n      .getPilotInformation(x.children[0].value)\n      .then((data) => {\n        let newData = new dataConstructor(\n          x.children[0].value,\n          x.children[8].value,\n          x.children[7].value,\n          data,\n        );\n        push(tableData, newData);\n      })\n\n  }\n\n  // delete data after 10 minutes\n  setInterval(() => {\n    let time = Date.now();\n    for (const item of tableData) {\n      if (time > item.time + 6000) {\n        tableData.splice(tableData.indexOf(item), 1);\n      }\n    };\n  }, 6000);\n\n\n  return (\n    <table>\n      <thead>\n      <tr>\n        <th>Index</th>\n        <th>Serial Number</th>\n        <th>Distance</th>\n      </tr>\n      </thead>\n      <tbody>\n      {tableData.map((item, i) =>\n      <tr>\n        <td>{i}</td>\n        <td>{item.value.serialNumber}</td>\n        <td>{item.value.distance}</td>\n      </tr>\n      )}\n      </tbody>\n    </table>\n  )\n};\n\nexport default Table;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,eAAe,MAAM,sBAAsB;AAClD,SAASC,SAAS,QAAQ,OAAO;;AAEjC;AAAA;AACA,SAASC,eAAe,CAACC,YAAY,EAAEC,SAAS,EAAEC,SAAS,EAAEC,gBAAgB,EAAG;EAC9E,IAAI,CAACH,YAAY,GAAGA,YAAY;EAChC,IAAI,CAACC,SAAS,GAAGA,SAAS;EAC1B,IAAI,CAACC,SAAS,GAAGA,SAAS;EAC1B,IAAI,CAACE,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACL,SAAS,EAAEC,SAAS,CAAC;EAChD,IAAI,CAACC,gBAAgB,GAAGA,gBAAgB;AAC1C;AAAC;;AAED;AACA,MAAMI,IAAI,GAAG,CAACC,KAAK,EAAEC,KAAK,KAAK;EAC7BD,KAAK,CAACD,IAAI,CAAC;IACRE,KAAK,EAAEA,KAAK;IACZC,IAAI,EAAEC,IAAI,CAACC,GAAG;EACjB,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,MAAMC,KAAK,GAAG,QAAc;EAAA,IAAb;IAAEC;EAAK,CAAC;EAErB,MAAMC,SAAS,GAAG,EAAE;EAEpB,KAAK,MAAMC,CAAC,IAAIF,IAAI,EAAE;IACpBG,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;IACdnB,eAAe,CACZsB,mBAAmB,CAACH,CAAC,CAACI,QAAQ,CAAC,CAAC,CAAC,CAACX,KAAK,CAAC,CACxCY,IAAI,CAAEP,IAAI,IAAK;MACd,IAAIQ,OAAO,GAAG,IAAIvB,eAAe,CAC/BiB,CAAC,CAACI,QAAQ,CAAC,CAAC,CAAC,CAACX,KAAK,EACnBO,CAAC,CAACI,QAAQ,CAAC,CAAC,CAAC,CAACX,KAAK,EACnBO,CAAC,CAACI,QAAQ,CAAC,CAAC,CAAC,CAACX,KAAK,EACnBK,IAAI,CACL;MACDP,IAAI,CAACQ,SAAS,EAAEO,OAAO,CAAC;IAC1B,CAAC,CAAC;EAEN;;EAEA;EACAC,WAAW,CAAC,MAAM;IAChB,IAAIb,IAAI,GAAGC,IAAI,CAACC,GAAG,EAAE;IACrB,KAAK,MAAMY,IAAI,IAAIT,SAAS,EAAE;MAC5B,IAAIL,IAAI,GAAGc,IAAI,CAACd,IAAI,GAAG,IAAI,EAAE;QAC3BK,SAAS,CAACU,MAAM,CAACV,SAAS,CAACW,OAAO,CAACF,IAAI,CAAC,EAAE,CAAC,CAAC;MAC9C;IACF;IAAC;EACH,CAAC,EAAE,IAAI,CAAC;EAGR,oBACE;IAAA,wBACE;MAAA,uBACA;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAc,eACd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAsB,eACtB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAiB;MAAA;QAAA;QAAA;QAAA;MAAA;IACd;MAAA;MAAA;MAAA;IAAA,QACG,eACR;MAAA,UACCT,SAAS,CAACY,GAAG,CAAC,CAACH,IAAI,EAAEI,CAAC,kBACvB;QAAA,wBACE;UAAA,UAAKA;QAAC;UAAA;UAAA;UAAA;QAAA,QAAM,eACZ;UAAA,UAAKJ,IAAI,CAACf,KAAK,CAACT;QAAY;UAAA;UAAA;UAAA;QAAA,QAAM,eAClC;UAAA,UAAKwB,IAAI,CAACf,KAAK,CAACL;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QAC3B;IACJ;MAAA;MAAA;MAAA;IAAA,QACO;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEZ,CAAC;AAAC,KAnDIS,KAAK;AAqDX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}