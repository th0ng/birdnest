{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { firstToLowerCase } from '../../common/utils/helper';\nimport { TechnicalAnalysis } from './indicator-base';\n/**\n * `TmaIndicator` module is used to render TMA indicator.\n */\nvar TmaIndicator = /** @class */function (_super) {\n  __extends(TmaIndicator, _super);\n  function TmaIndicator() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Defines the predictions based on TMA approach\n   *\n   * @private\n   */\n  TmaIndicator.prototype.initDataSource = function (indicator, chart) {\n    var tmaPoints = [];\n    var field = firstToLowerCase(indicator.field);\n    var xField = 'x';\n    //prepare data\n    var validData = indicator.points;\n    if (validData && validData.length && validData.length >= indicator.period) {\n      var signalSeries = indicator.targetSeries[0];\n      //prepare data\n      var validData_1 = indicator.points;\n      if (validData_1.length && validData_1.length >= indicator.period) {\n        var sum = 0;\n        var smaValues = [];\n        //sma values\n        var index = 0;\n        var length_1 = validData_1.length;\n        var period = indicator.period;\n        while (length_1 >= period) {\n          sum = 0;\n          index = validData_1.length - length_1;\n          for (var j = index; j < index + period; j++) {\n            sum = sum + validData_1[j][field];\n          }\n          sum = sum / period;\n          smaValues.push(sum);\n          length_1--;\n        }\n        //initial values\n        for (var k = 0; k < period - 1; k++) {\n          sum = 0;\n          for (var j = 0; j < k + 1; j++) {\n            sum = sum + validData_1[j][field];\n          }\n          sum = sum / (k + 1);\n          smaValues.splice(k, 0, sum);\n        }\n        index = indicator.period;\n        while (index <= smaValues.length) {\n          sum = 0;\n          for (var j = index - indicator.period; j < index; j++) {\n            sum = sum + smaValues[j];\n          }\n          sum = sum / indicator.period;\n          tmaPoints.push(this.getDataPoint(validData_1[index - 1][xField], sum, validData_1[index - 1], signalSeries, tmaPoints.length));\n          index++;\n        }\n      }\n    }\n    this.setSeriesRange(tmaPoints, indicator);\n  };\n  /**\n   * To destroy the TMA indicator.\n   *\n   * @returns {void}\n   * @private\n   */\n  TmaIndicator.prototype.destroy = function () {\n    /**\n     * Destroys the TMA Indicator\n     */\n  };\n  /**\n   * Get module name.\n   */\n  TmaIndicator.prototype.getModuleName = function () {\n    /**\n     * Returns the module name of the series\n     */\n    return 'TmaIndicator';\n  };\n  return TmaIndicator;\n}(TechnicalAnalysis);\nexport { TmaIndicator };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","firstToLowerCase","TechnicalAnalysis","TmaIndicator","_super","apply","arguments","initDataSource","indicator","chart","tmaPoints","field","xField","validData","points","length","period","signalSeries","targetSeries","validData_1","sum","smaValues","index","length_1","j","push","k","splice","getDataPoint","setSeriesRange","destroy","getModuleName"],"sources":["/Users/thonghoangdanh/FullStack/birdnest/node_modules/@syncfusion/ej2-charts/src/chart/technical-indicators/tma-indicator.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { firstToLowerCase } from '../../common/utils/helper';\nimport { TechnicalAnalysis } from './indicator-base';\n/**\n * `TmaIndicator` module is used to render TMA indicator.\n */\nvar TmaIndicator = /** @class */ (function (_super) {\n    __extends(TmaIndicator, _super);\n    function TmaIndicator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Defines the predictions based on TMA approach\n     *\n     * @private\n     */\n    TmaIndicator.prototype.initDataSource = function (indicator, chart) {\n        var tmaPoints = [];\n        var field = firstToLowerCase(indicator.field);\n        var xField = 'x';\n        //prepare data\n        var validData = indicator.points;\n        if (validData && validData.length && validData.length >= indicator.period) {\n            var signalSeries = indicator.targetSeries[0];\n            //prepare data\n            var validData_1 = indicator.points;\n            if (validData_1.length && validData_1.length >= indicator.period) {\n                var sum = 0;\n                var smaValues = [];\n                //sma values\n                var index = 0;\n                var length_1 = validData_1.length;\n                var period = indicator.period;\n                while (length_1 >= period) {\n                    sum = 0;\n                    index = validData_1.length - length_1;\n                    for (var j = index; j < index + period; j++) {\n                        sum = sum + validData_1[j][field];\n                    }\n                    sum = sum / period;\n                    smaValues.push(sum);\n                    length_1--;\n                }\n                //initial values\n                for (var k = 0; k < period - 1; k++) {\n                    sum = 0;\n                    for (var j = 0; j < k + 1; j++) {\n                        sum = sum + validData_1[j][field];\n                    }\n                    sum = sum / (k + 1);\n                    smaValues.splice(k, 0, sum);\n                }\n                index = indicator.period;\n                while (index <= smaValues.length) {\n                    sum = 0;\n                    for (var j = index - indicator.period; j < index; j++) {\n                        sum = sum + smaValues[j];\n                    }\n                    sum = sum / indicator.period;\n                    tmaPoints.push(this.getDataPoint(validData_1[index - 1][xField], sum, validData_1[index - 1], signalSeries, tmaPoints.length));\n                    index++;\n                }\n            }\n        }\n        this.setSeriesRange(tmaPoints, indicator);\n    };\n    /**\n     * To destroy the TMA indicator.\n     *\n     * @returns {void}\n     * @private\n     */\n    TmaIndicator.prototype.destroy = function () {\n        /**\n         * Destroys the TMA Indicator\n         */\n    };\n    /**\n     * Get module name.\n     */\n    TmaIndicator.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the series\n         */\n        return 'TmaIndicator';\n    };\n    return TmaIndicator;\n}(TechnicalAnalysis));\nexport { TmaIndicator };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}