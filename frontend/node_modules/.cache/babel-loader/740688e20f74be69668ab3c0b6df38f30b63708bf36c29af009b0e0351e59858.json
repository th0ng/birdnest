{"ast":null,"code":"var _jsxFileName = \"/Users/thonghoangdanh/FullStack/birdnest/src/components/Body.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport birdnestService from '../services/birdnest';\n\n//construction for drone data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction droneConstructor(serialNumber, positionX, positionY, closestDistance, pilotInformation) {\n  this.serialNumber = serialNumber;\n  this.positionX = positionX;\n  this.positionY = positionY;\n  this.closestDistance = closestDistance;\n  this.pilotInformation = pilotInformation;\n}\n;\nconst Body = _ref => {\n  _s();\n  let {\n    drones\n  } = _ref;\n  //device data\n  const device = drones.children[0];\n  //drones data\n  const dronesData = drones.children[1].children;\n  const [violatingDrones, setViolatingDrones] = useState([]);\n\n  //Looping through the data\n  for (const drone of dronesData) {\n    //Check if the position is in the no-fly zone\n    const distance = Math.hypot(Math.abs(drone.children[8].value - 250000), Math.abs(drone.children[7].value - 250000));\n    if (distance < 100000) {\n      //Check if there's already that drone in the array, if so update the timestamp, else update the array with the new drone\n      const found = violatingDrones.find(e => e.serialNumber === drone.children[0].value);\n      if (found) {\n        const index = violatingDrones.indexOf(found);\n        const updatedClosestDistance = distance < found.data.distance ? distance : found.data.distance;\n        const updatedDrone = {\n          data: new droneConstructor(found.serialNumber, drone.children[8].value, drone.chldren[7].value, updatedClosestDistance, found.pilotInformation),\n          time: Date.now()\n        };\n        setViolatingDrones(...violatingDrones.slice(0, index), updatedDrone, ...violatingDrones.slice(index + 1));\n      } else {\n        birdnestService.getPilotInformation(drone.children[0].value).then(pilotInformation => {\n          const newViolatingDrone = {\n            data: new droneConstructor(drone.children[0].value, drone.children[8].value, drone.children[7].value, distance, pilotInformation),\n            time: Date.now()\n          };\n          setViolatingDrones([newViolatingDrone].concat(violatingDrones));\n        });\n      }\n    }\n  }\n  ;\n  console.log(violatingDrones);\n  setInterval(() => {\n    var time = Date.now();\n    var updatedDronesArray = violatingDrones.filter(d => d.time + 600000 > time);\n    setViolatingDrones(updatedDronesArray);\n  }, 1000);\n  console.log(violatingDrones);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex w-full mb-5 font-mono\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col w-1/2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-bold text-xl text-indigo-500\",\n          children: \"Device:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-medium text-base\",\n          children: [\"Device ID: \", device.attributes.deviceId, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this), \"Started Time: \", new Date(device.children[1].value).toTimeString() + ' on ' + new Date(device.children[1].value).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex w-1/2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex w-full mt-5 font-mono\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Serial number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Closest distance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Pilot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: violatingDrones.map(drone => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: drone.time.toLocaleDateString\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: drone.data.serialNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: drone.data.distance\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Pilot's informatin here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Body, \"lUQb2JShSOJX0k+7s/aJ70AH4BU=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","useState","birdnestService","droneConstructor","serialNumber","positionX","positionY","closestDistance","pilotInformation","Body","drones","device","children","dronesData","violatingDrones","setViolatingDrones","drone","distance","Math","hypot","abs","value","found","find","e","index","indexOf","updatedClosestDistance","data","updatedDrone","chldren","time","Date","now","slice","getPilotInformation","then","newViolatingDrone","concat","console","log","setInterval","updatedDronesArray","filter","d","attributes","deviceId","toTimeString","toLocaleDateString","map"],"sources":["/Users/thonghoangdanh/FullStack/birdnest/src/components/Body.jsx"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport birdnestService from '../services/birdnest';\n\n//construction for drone data\nfunction droneConstructor(serialNumber, positionX, positionY, closestDistance, pilotInformation ) {\n  this.serialNumber = serialNumber;\n  this.positionX = positionX;\n  this.positionY = positionY;\n  this.closestDistance = closestDistance;\n  this.pilotInformation = pilotInformation;\n};\n\n\nconst Body = ({ drones }) => {\n  //device data\n  const device = drones.children[0];\n  //drones data\n  const dronesData = drones.children[1].children;\n\n  const [violatingDrones, setViolatingDrones] = useState([]);\n\n  //Looping through the data\n  for (const drone of dronesData) {\n    //Check if the position is in the no-fly zone\n    const distance = Math.hypot(Math.abs(drone.children[8].value - 250000), Math.abs(drone.children[7].value - 250000))\n    if (distance < 100000 ) {\n      //Check if there's already that drone in the array, if so update the timestamp, else update the array with the new drone\n      const found = violatingDrones.find(e => e.serialNumber === drone.children[0].value);\n      if (found) {\n        const index = violatingDrones.indexOf(found);\n\n        const updatedClosestDistance = distance < found.data.distance ? distance : found.data.distance;\n\n        const updatedDrone = {\n          data: new droneConstructor(found.serialNumber, drone.children[8].value, drone.chldren[7].value, updatedClosestDistance, found.pilotInformation),\n          time: Date.now()\n        };\n        setViolatingDrones(...violatingDrones.slice(0, index), updatedDrone, ...violatingDrones.slice(index + 1));\n      } else {\n        birdnestService\n          .getPilotInformation(drone.children[0].value)\n          .then((pilotInformation) => {\n            const newViolatingDrone = {\n              data: new droneConstructor(\n                drone.children[0].value,\n                drone.children[8].value,\n                drone.children[7].value,\n                distance,\n                pilotInformation,\n              ),\n              time: Date.now()\n            };\n            setViolatingDrones([newViolatingDrone].concat(violatingDrones));\n          });\n      }\n    }\n  };\n\n  console.log(violatingDrones);\n\n  setInterval(() => {\n    var time = Date.now();\n    var updatedDronesArray = violatingDrones.filter(d =>\n      d.time + 600000 > time);\n    setViolatingDrones(updatedDronesArray);\n  }, 1000);\n\n  console.log(violatingDrones);\n  return (\n    <>\n      <div className='flex w-full mb-5 font-mono'>\n        <div className='flex flex-col w-1/2'>\n          <h2 className='font-bold text-xl text-indigo-500'>Device:</h2>\n          <p className='font-medium text-base'>\n          Device ID: {device.attributes.deviceId}\n          <br />\n          Started Time: {\n            new Date(device.children[1].value).toTimeString()\n            + ' on '\n            + new Date(device.children[1].value).toLocaleDateString()\n          }\n          </p>\n        </div>\n        <div className='flex w-1/2'>\n\n        </div>\n      </div>\n      <div className='flex w-full mt-5 font-mono'>\n        <table>\n          <thead>\n            <th>Time</th>\n            <th>Serial number</th>\n            <th>Closest distance</th>\n            <th>Pilot</th>\n          </thead>\n          <tbody>\n            {violatingDrones.map((drone) =>\n              <tr>\n                <td>{drone.time.toLocaleDateString}</td>\n                <td>{drone.data.serialNumber}</td>\n                <td>{drone.data.distance}</td>\n                <td>Pilot's informatin here</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n}\n\nexport default Body;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}