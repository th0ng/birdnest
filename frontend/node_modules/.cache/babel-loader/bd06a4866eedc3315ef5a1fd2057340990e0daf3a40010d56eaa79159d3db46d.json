{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-inferrable-types */\n/**\n * Selection src file\n */\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Selection Module handles the selection for chart.\n *\n * @private\n */\nvar BaseSelection = /** @class */function () {\n  function BaseSelection(control) {\n    this.control = control;\n  }\n  /**\n   * To create selection styles for series\n   *\n   * @returns {void}\n   */\n  BaseSelection.prototype.seriesStyles = function () {\n    var seriesclass;\n    var style = document.getElementById(this.styleId);\n    var pattern = '{}';\n    var fill;\n    var opacity;\n    var selectionPattern = this.control.selectionPattern;\n    var highlightPattern = this.control.highlightPattern;\n    if (this.styleId.indexOf('highlight') > 0 && this.control.highlightColor !== '' || isNullOrUndefined(style) || selectionPattern !== 'None' || highlightPattern !== 'None') {\n      style = document.createElement('style');\n      style.setAttribute('id', this.styleId);\n      for (var _i = 0, _a = this.control.visibleSeries; _i < _a.length; _i++) {\n        var series = _a[_i];\n        var visibleSeries = this.control.visibleSeries[series.index] || this.control.visibleSeries[series.index];\n        if (this.styleId.indexOf('highlight') > 0 && this.control.highlightColor !== '' || (!isNullOrUndefined(selectionPattern) || !isNullOrUndefined(highlightPattern)) && (selectionPattern !== 'None' || highlightPattern !== 'None')) {\n          var patternName = this.styleId.indexOf('highlight') > 0 ? highlightPattern : selectionPattern;\n          if (visibleSeries.type === 'Pie' || visibleSeries.type === 'Funnel' || visibleSeries.type === 'Pyramid') {\n            for (var i = 0; i < visibleSeries.points.length; i++) {\n              opacity = visibleSeries.opacity;\n              fill = this.pattern(this.control, visibleSeries.points[i].color, series.index, patternName, opacity);\n              pattern = '{ fill:' + fill + '}';\n            }\n          } else if (visibleSeries.type) {\n            opacity = visibleSeries.opacity;\n            fill = this.pattern(this.control, this.styleId.indexOf('highlight') > 0 && this.control.highlightColor !== '' ? this.control.highlightColor : visibleSeries.pointColorMapping !== '' || this.control.rangeColorSettings && this.control.rangeColorSettings.length > 1 ? visibleSeries.points[0].color : visibleSeries.interior, series.index, patternName, opacity);\n            pattern = '{ fill:' + fill + '}';\n          }\n        }\n        seriesclass = series.selectionStyle || this.styleId + '_series_' + series.index + ',' + '.' + this.styleId + '_series_' + series.index + '> *';\n        if (this.control.highlightMode === 'None' && this.control.legendSettings.enableHighlight) {\n          style.innerHTML += '.' + this.styleId + '_series_' + series.index + '> *' + ' { stroke-width:' + 3 + ';} ';\n        }\n        pattern = pattern.indexOf('None') > -1 ? '{}' : pattern;\n        style.innerHTML += series.selectionStyle ? '' : '.' + seriesclass + pattern;\n      }\n      var unSelectOpacity = 0.3;\n      if (isNullOrUndefined(this.control.selectionModule) && this.control.selectionMode === 'None' && this.control.highlightColor !== '') {\n        unSelectOpacity = 1;\n      }\n      style.innerHTML += '.' + this.unselected + ' { opacity:' + unSelectOpacity + ';} ';\n      document.body.appendChild(style);\n    }\n  };\n  /**\n   * To create the pattern for series/points\n   *\n   * @param chart\n   * @param color\n   * @param index\n   * @param patternName\n   * @param opacity\n   * @param chart\n   * @param color\n   * @param index\n   * @param patternName\n   * @param opacity\n   * @param chart\n   * @param color\n   * @param index\n   * @param patternName\n   * @param opacity\n   * @param chart\n   * @param color\n   * @param index\n   * @param patternName\n   * @param opacity\n   * @param chart\n   * @param color\n   * @param index\n   * @param patternName\n   * @param opacity\n   */\n  BaseSelection.prototype.pattern = function (chart, color, index, patternName, opacity) {\n    var backgroundColor = '#ffffff';\n    var svg = chart.svgObject;\n    var pathOptions = [];\n    var patternGroup = {\n      'id': chart.element.id + '_' + patternName + '_Selection' + '_' + index,\n      'patternUnits': 'userSpaceOnUse'\n    };\n    var heightStr = 'height';\n    var widthStr = 'width';\n    var width = 10;\n    var height = 12;\n    var patternNum = 6;\n    var turquoiseNum = 17;\n    var turstrokewidth = 1;\n    var starNum = 21;\n    var circleNum = 9;\n    var tileNum = 18;\n    var strokeWidth = 1;\n    var bubNum = 20;\n    switch (patternName) {\n      case 'Dots':\n        patternGroup[heightStr] = patternGroup[widthStr] = patternNum;\n        patternGroup[widthStr] = patternNum;\n        pathOptions[0] = {\n          'x': 0,\n          'y': 0,\n          'width': 7,\n          'height': 7,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity,\n          'name': 'rect'\n        };\n        pathOptions[1] = {\n          'cx': 3,\n          'cy': 3,\n          'r': 2,\n          'stroke-width': 1,\n          'fill': color,\n          'name': 'circle'\n        };\n        break;\n      case 'Pacman':\n        patternGroup[heightStr] = '18.384';\n        patternGroup[widthStr] = '17.917';\n        pathOptions[0] = {\n          'name': 'rect',\n          'x': 0,\n          'y': 0,\n          'width': 17.917,\n          'height': 18.384,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'path',\n          'd': 'M9.081,9.194l5.806-3.08c-0.812-1.496-2.403-3.052-4.291-3.052H8.835C6.138,3.063,3,6.151,3,8.723v1.679   c0,2.572,3.138,5.661,5.835,5.661h1.761c2.085,0,3.835-1.76,4.535-3.514L9.081,9.194z',\n          'stroke-width': 1,\n          'stroke': color,\n          'fill': color\n        };\n        break;\n      case 'Chessboard':\n        patternGroup[heightStr] = patternGroup[widthStr] = width;\n        pathOptions[0] = {\n          'x': 0,\n          'y': 0,\n          'width': width,\n          'height': width,\n          'fill': backgroundColor,\n          'opacity': opacity,\n          'name': 'rect'\n        };\n        pathOptions[1] = {\n          'x': 0,\n          'y': 0,\n          'width': 5,\n          'height': 5,\n          'fill': color,\n          'opacity': opacity,\n          'name': 'rect'\n        };\n        pathOptions[2] = {\n          'x': 5,\n          'y': 5,\n          'width': 5,\n          'height': 5,\n          'fill': color,\n          'opacity': opacity,\n          'name': 'rect'\n        };\n        break;\n      case 'Crosshatch':\n        patternGroup[heightStr] = patternGroup[widthStr] = '8';\n        pathOptions[0] = {\n          'x': 0,\n          'y': 0,\n          'width': 8,\n          'height': 8,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity,\n          'name': 'rect'\n        };\n        pathOptions[1] = {\n          'd': 'M0 0L8 8ZM8 0L0 8Z',\n          'stroke-width': 1,\n          'stroke': color,\n          'name': 'path'\n        };\n        break;\n      case 'DiagonalForward':\n        patternGroup[heightStr] = patternGroup[widthStr] = patternNum;\n        pathOptions[0] = {\n          'x': 0,\n          'y': 0,\n          'width': patternNum,\n          'height': patternNum,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity,\n          'name': 'rect'\n        };\n        pathOptions[1] = {\n          'd': 'M 3 -3 L 9 3 M 6 6 L 0 0 M 3 9 L -3 3',\n          'stroke-width': 2,\n          'stroke': color,\n          'name': 'path'\n        };\n        break;\n      case 'DiagonalBackward':\n        patternGroup[heightStr] = patternGroup[widthStr] = patternNum;\n        pathOptions[0] = {\n          'x': 0,\n          'y': 0,\n          'width': patternNum,\n          'height': patternNum,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity,\n          'name': 'rect'\n        };\n        pathOptions[1] = {\n          'd': 'M 3 -3 L -3 3 M 0 6 L 6 0 M 9 3 L 3 9',\n          'stroke-width': 2,\n          'stroke': color,\n          'name': 'path'\n        };\n        break;\n      case 'Grid':\n        patternGroup[heightStr] = patternGroup[widthStr] = patternNum;\n        pathOptions[0] = {\n          'name': 'rect',\n          'x': 0,\n          'y': 0,\n          'width': patternNum,\n          'height': patternNum,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'path',\n          'd': 'M1 3.5L11 3.5 M0 3.5L11 3.5 M0 7.5L11 7.5 M0 11.5L11 11.5 M5.5 0L5.5 12 M11.5 0L11.5 12Z',\n          'stroke-width': 1,\n          'stroke': color\n        };\n        break;\n      case 'Turquoise':\n        patternGroup[heightStr] = patternGroup[widthStr] = turquoiseNum;\n        pathOptions[0] = {\n          'name': 'rect',\n          'x': 0,\n          'y': 0,\n          'width': turquoiseNum,\n          'height': turquoiseNum,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'path',\n          'd': 'M0.5739999999999998,2.643a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n          'stroke-width': turstrokewidth,\n          'stroke-miterlimit': width,\n          'stroke': color,\n          'fill': color\n        };\n        pathOptions[2] = {\n          'name': 'path',\n          'd': 'M11.805,2.643a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n          'stroke-width': turstrokewidth,\n          'stroke-miterlimit': width,\n          'stroke': color,\n          'fill': color\n        };\n        pathOptions[3] = {\n          'name': 'path',\n          'd': 'M6.19,2.643a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n          'stroke-width': turstrokewidth,\n          'stroke-miterlimit': width,\n          'stroke': color,\n          'fill': color\n        };\n        pathOptions[4] = {\n          'name': 'path',\n          'd': 'M11.805,8.217a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n          'stroke-width': turstrokewidth,\n          'stroke-miterlimit': width,\n          'stroke': color,\n          'fill': color\n        };\n        pathOptions[5] = {\n          'name': 'path',\n          'd': 'M6.19,8.217a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n          'stroke-width': turstrokewidth,\n          'stroke-miterlimit': width,\n          'stroke': color,\n          'fill': color\n        };\n        pathOptions[6] = {\n          'name': 'path',\n          'd': 'M11.805,13.899a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n          'stroke-width': turstrokewidth,\n          'stroke-miterlimit': width,\n          'stroke': color,\n          'fill': color\n        };\n        pathOptions[7] = {\n          'name': 'path',\n          'd': 'M6.19,13.899a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n          'stroke-width': turstrokewidth,\n          'stroke-miterlimit': width,\n          'stroke': color,\n          'fill': color\n        };\n        break;\n      case 'Star':\n        patternGroup[heightStr] = patternGroup[widthStr] = starNum;\n        pathOptions[0] = {\n          'name': 'rect',\n          'x': 0,\n          'y': 0,\n          'width': starNum,\n          'height': starNum,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'path',\n          'd': 'M15.913,18.59L10.762 12.842 5.613 18.75 8.291 11.422 0.325 9.91 8.154 8.33 5.337 0.91 10.488 6.658 15.637 0.75 12.959 8.078 20.925 9.59 13.096 11.17 z',\n          'stroke-width': 1,\n          'stroke': color,\n          'fill': color\n        };\n        break;\n      case 'Triangle':\n        patternGroup[heightStr] = patternGroup[widthStr] = width;\n        pathOptions[0] = {\n          'name': 'rect',\n          'x': 0,\n          'y': 0,\n          'width': width,\n          'height': width,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'path',\n          'd': 'M4.987,0L7.48 4.847 9.974 9.694 4.987 9.694 0 9.694 2.493 4.847 z',\n          'stroke-width': 1,\n          'stroke': color,\n          'fill': color\n        };\n        break;\n      case 'Circle':\n        patternGroup[heightStr] = patternGroup[widthStr] = circleNum;\n        pathOptions[0] = {\n          'name': 'rect',\n          'x': 0,\n          'y': 0,\n          'width': circleNum,\n          'height': circleNum,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'circle',\n          'cx': 5.125,\n          'cy': 3.875,\n          'r': 3.625,\n          'stroke-width': 1,\n          'fill': color\n        };\n        break;\n      case 'Tile':\n        patternGroup[heightStr] = patternGroup[widthStr] = tileNum;\n        pathOptions[0] = {\n          'name': 'rect',\n          'x': 0,\n          'y': 0,\n          'width': tileNum,\n          'height': tileNum,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'path',\n          'd': 'M0,9L0 0 9 0 z',\n          'stroke-width': strokeWidth,\n          'stroke': color,\n          'fill': color\n        };\n        pathOptions[2] = {\n          'name': 'path',\n          'd': 'M9,9L9 0 18 0 z',\n          'stroke-width': strokeWidth,\n          'stroke': color,\n          'fill': color\n        };\n        pathOptions[3] = {\n          'name': 'path',\n          'd': 'M0,18L0 9 9 9 z',\n          'stroke-width': strokeWidth,\n          'stroke': color,\n          'fill': color\n        };\n        pathOptions[4] = {\n          'name': 'path',\n          'd': 'M9,18L9 9 18 9 z',\n          'stroke-width': strokeWidth,\n          'stroke': color,\n          'fill': color\n        };\n        break;\n      case 'HorizontalDash':\n        patternGroup[heightStr] = patternGroup[widthStr] = height;\n        pathOptions[0] = {\n          'name': 'rect',\n          'x': 0,\n          'y': 0,\n          'width': height,\n          'height': height,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'path',\n          'd': 'M0,1.5 L10 1.5 M0,5.5 L10 5.5 M0,9.5 L10 9.5 z',\n          'stroke-width': 1,\n          'stroke': color,\n          'fill': color\n        };\n        break;\n      case 'VerticalDash':\n        patternGroup[heightStr] = patternGroup[widthStr] = height;\n        pathOptions[0] = {\n          'name': 'rect',\n          'x': 0,\n          'y': 0,\n          'width': height,\n          'height': height,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'path',\n          'd': 'M1.5,0 L1.5 10 M5.5,0 L5.5 10 M9.5,0 L9.5 10 z',\n          'stroke-width': 1,\n          'stroke': color,\n          'fill': color\n        };\n        break;\n      case 'Rectangle':\n        patternGroup[heightStr] = patternGroup[widthStr] = height;\n        pathOptions[0] = {\n          'name': 'rect',\n          'width': height,\n          'height': height,\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'rect',\n          'x': 1,\n          'y': 2,\n          'width': 4,\n          'height': 9,\n          'fill': color,\n          'opacity': opacity\n        };\n        pathOptions[2] = {\n          'name': 'rect',\n          'x': 7,\n          'y': 2,\n          'width': 4,\n          'height': 9,\n          'fill': color,\n          'opacity': opacity\n        };\n        break;\n      case 'Box':\n        patternGroup[heightStr] = patternGroup[widthStr] = width;\n        pathOptions[0] = {\n          'name': 'rect',\n          'width': 13,\n          'height': 13,\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'rect',\n          'x': 1.5,\n          'y': 1.5,\n          'width': width,\n          'height': 9,\n          'fill': color,\n          'opacity': opacity\n        };\n        break;\n      case 'HorizontalStripe':\n        patternGroup[heightStr] = height;\n        patternGroup[widthStr] = width;\n        pathOptions[0] = {\n          'name': 'rect',\n          'x': 0,\n          'y': 0,\n          'width': width,\n          'height': height,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'path',\n          'd': 'M0,0.5 L10 0.5 M0,4.5 L10 4.5 M0,8.5 L10 8.5 z',\n          'stroke-width': 1,\n          'stroke': color,\n          'fill': color\n        };\n        break;\n      case 'VerticalStripe':\n        patternGroup[heightStr] = width;\n        patternGroup[widthStr] = height;\n        pathOptions[0] = {\n          'name': 'rect',\n          'x': 0,\n          'y': 0,\n          'width': height,\n          'height': width,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'path',\n          'd': 'M0.5,0 L0.5 10 M4.5,0 L4.5 10 M8.5,0 L8.5 10 z',\n          'stroke-width': 1,\n          'stroke': color,\n          'fill': color\n        };\n        break;\n      case 'Bubble':\n        patternGroup[heightStr] = patternGroup[widthStr] = bubNum;\n        pathOptions[0] = {\n          'name': 'rect',\n          'x': 0,\n          'y': 0,\n          'width': bubNum,\n          'height': bubNum,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'circle',\n          'cx': 5.217,\n          'cy': 11.325,\n          'r': 3.429,\n          'stroke-width': 1,\n          'fill': '#D0A6D1'\n        };\n        pathOptions[2] = {\n          'name': 'circle',\n          'cx': 13.328,\n          'cy': 6.24,\n          'r': 4.884,\n          'stroke-width': 1,\n          'fill': color\n        };\n        pathOptions[3] = {\n          'name': 'circle',\n          'cx': 13.277,\n          'cy': 14.66,\n          'r': 3.018,\n          'stroke-width': 1,\n          'fill': '#D0A6D1'\n        };\n        break;\n    }\n    var svgRenderer = chart.svgRenderer || chart.renderer;\n    var pattern = svgRenderer.createPattern(patternGroup, 'pattern');\n    this.loadPattern(chart, pathOptions, pattern, svgRenderer);\n    svg.appendChild(pattern);\n    return 'url(#' + chart.element.id + '_' + patternName + '_' + 'Selection' + '_' + index + ')';\n  };\n  /**\n   * To load the pattern into svg\n   *\n   * @param chart\n   * @param options\n   * @param pattern\n   * @param svgRenderer\n   * @param chart\n   * @param options\n   * @param pattern\n   * @param svgRenderer\n   * @param chart\n   * @param options\n   * @param pattern\n   * @param svgRenderer\n   * @param chart\n   * @param options\n   * @param pattern\n   * @param svgRenderer\n   */\n  BaseSelection.prototype.loadPattern = function (chart, options, pattern, svgRenderer) {\n    var i;\n    for (i = 0; i < options.length; i++) {\n      // eslint-disable-next-line @typescript-eslint/ban-types\n      var path = svgRenderer.createPattern(options[i], options[i].name);\n      pattern.appendChild(path);\n    }\n  };\n  /**\n   * To concat indexes\n   *\n   * @param userIndexes\n   * @param localIndexes\n   * @param userIndexes\n   * @param localIndexes\n   */\n  BaseSelection.prototype.concatIndexes = function (userIndexes, localIndexes) {\n    return userIndexes.concat(localIndexes);\n  };\n  /**\n   * Selected points series visibility checking on legend click\n   *\n   * @param selectedIndexes\n   */\n  BaseSelection.prototype.checkVisibility = function (selectedIndexes, chart) {\n    if (chart === void 0) {\n      chart = null;\n    }\n    if (!selectedIndexes) {\n      return false;\n    }\n    var visible = false;\n    var uniqueSeries = [];\n    for (var _i = 0, selectedIndexes_1 = selectedIndexes; _i < selectedIndexes_1.length; _i++) {\n      var index = selectedIndexes_1[_i];\n      if (uniqueSeries.indexOf(index.series) === -1) {\n        uniqueSeries.push(index.series);\n      }\n    }\n    for (var _a = 0, uniqueSeries_1 = uniqueSeries; _a < uniqueSeries_1.length; _a++) {\n      var index = uniqueSeries_1[_a];\n      if (chart != null && chart.rangeColorSettings && chart.rangeColorSettings.length > 0 && chart.rangeColorSettings[0].colors.length > 0) {\n        if (this.control.series[0].visible) {\n          visible = true;\n          break;\n        }\n      } else {\n        if (this.control.series[index].visible) {\n          visible = true;\n          break;\n        }\n      }\n    }\n    return visible;\n  };\n  /**\n   * To add svg element style class\n   *\n   * @param element\n   * @param className\n   * @param element\n   * @param className\n   * @private\n   */\n  BaseSelection.prototype.addSvgClass = function (element, className) {\n    var elementClassName = element.getAttribute('class') || '';\n    elementClassName += elementClassName !== '' ? ' ' : '';\n    if (elementClassName.indexOf(className) === -1) {\n      element.setAttribute('class', elementClassName + className);\n    }\n  };\n  /**\n   * To remove svg element style class\n   *\n   * @param element\n   * @param className\n   * @param element\n   * @param className\n   * @private\n   */\n  BaseSelection.prototype.removeSvgClass = function (element, className) {\n    var elementClassName = element.getAttribute('class') || '';\n    if (elementClassName.indexOf(className) > -1) {\n      element.setAttribute('class', elementClassName.replace(className, ''));\n    }\n  };\n  /**\n   * To get children from parent element\n   *\n   * @param parent\n   */\n  BaseSelection.prototype.getChildren = function (parent) {\n    var children = [];\n    for (var i = 0; i < parent.childNodes.length; i++) {\n      if (parent.childNodes[i].tagName !== 'defs') {\n        children.push(parent.childNodes[i]);\n      }\n    }\n    return children;\n  };\n  return BaseSelection;\n}();\nexport { BaseSelection };","map":{"version":3,"names":["isNullOrUndefined","BaseSelection","control","prototype","seriesStyles","seriesclass","style","document","getElementById","styleId","pattern","fill","opacity","selectionPattern","highlightPattern","indexOf","highlightColor","createElement","setAttribute","_i","_a","visibleSeries","length","series","index","patternName","type","i","points","color","pointColorMapping","rangeColorSettings","interior","selectionStyle","highlightMode","legendSettings","enableHighlight","innerHTML","unSelectOpacity","selectionModule","selectionMode","unselected","body","appendChild","chart","backgroundColor","svg","svgObject","pathOptions","patternGroup","element","id","heightStr","widthStr","width","height","patternNum","turquoiseNum","turstrokewidth","starNum","circleNum","tileNum","strokeWidth","bubNum","svgRenderer","renderer","createPattern","loadPattern","options","path","name","concatIndexes","userIndexes","localIndexes","concat","checkVisibility","selectedIndexes","visible","uniqueSeries","selectedIndexes_1","push","uniqueSeries_1","colors","addSvgClass","className","elementClassName","getAttribute","removeSvgClass","replace","getChildren","parent","children","childNodes","tagName"],"sources":["/Users/thonghoangdanh/FullStack/birdnest/node_modules/@syncfusion/ej2-charts/src/common/user-interaction/selection.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-inferrable-types */\n/**\n * Selection src file\n */\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Selection Module handles the selection for chart.\n *\n * @private\n */\nvar BaseSelection = /** @class */ (function () {\n    function BaseSelection(control) {\n        this.control = control;\n    }\n    /**\n     * To create selection styles for series\n     *\n     * @returns {void}\n     */\n    BaseSelection.prototype.seriesStyles = function () {\n        var seriesclass;\n        var style = document.getElementById(this.styleId);\n        var pattern = '{}';\n        var fill;\n        var opacity;\n        var selectionPattern = this.control.selectionPattern;\n        var highlightPattern = this.control.highlightPattern;\n        if ((this.styleId.indexOf('highlight') > 0 && this.control.highlightColor !== '') || isNullOrUndefined(style) || selectionPattern !== 'None' || highlightPattern !== 'None') {\n            style = document.createElement('style');\n            style.setAttribute('id', this.styleId);\n            for (var _i = 0, _a = this.control.visibleSeries; _i < _a.length; _i++) {\n                var series = _a[_i];\n                var visibleSeries = this.control.visibleSeries[series.index] ||\n                    this.control.visibleSeries[series.index];\n                if ((this.styleId.indexOf('highlight') > 0 && this.control.highlightColor !== '') || (!isNullOrUndefined(selectionPattern) || !isNullOrUndefined(highlightPattern)) &&\n                    (selectionPattern !== 'None' || highlightPattern !== 'None')) {\n                    var patternName = this.styleId.indexOf('highlight') > 0 ? highlightPattern : selectionPattern;\n                    if (visibleSeries.type === 'Pie' || visibleSeries.type === 'Funnel' ||\n                        visibleSeries.type === 'Pyramid') {\n                        for (var i = 0; i < visibleSeries.points.length; i++) {\n                            opacity = visibleSeries.opacity;\n                            fill = this.pattern(this.control, (visibleSeries.points[i]).color, series.index, patternName, opacity);\n                            pattern = '{ fill:' + fill + '}';\n                        }\n                    }\n                    else if (visibleSeries.type) {\n                        opacity = visibleSeries.opacity;\n                        fill = this.pattern(this.control, (this.styleId.indexOf('highlight') > 0 && this.control.highlightColor !== '') ? this.control.highlightColor :\n                            (visibleSeries.pointColorMapping !== '' || (this.control.rangeColorSettings && this.control.rangeColorSettings.length > 1)) ? (visibleSeries.points[0]).color\n                                : visibleSeries.interior, series.index, patternName, opacity);\n                        pattern = '{ fill:' + fill + '}';\n                    }\n                }\n                seriesclass = series.selectionStyle || this.styleId + '_series_' + series.index + ',' + '.' +\n                    this.styleId + '_series_' + series.index + '> *';\n                if (this.control.highlightMode === 'None' && this.control.legendSettings.enableHighlight) {\n                    style.innerHTML += '.' + this.styleId + '_series_' + series.index + '> *' + ' { stroke-width:' + (3) + ';} ';\n                }\n                pattern = (pattern.indexOf('None') > -1) ? '{}' : pattern;\n                style.innerHTML += series.selectionStyle ? '' : '.' + seriesclass + pattern;\n            }\n            var unSelectOpacity = 0.3;\n            if (isNullOrUndefined(this.control.selectionModule) && this.control.selectionMode === 'None' && this.control.highlightColor !== '') {\n                unSelectOpacity = 1;\n            }\n            style.innerHTML += '.' + this.unselected + ' { opacity:' + (unSelectOpacity) + ';} ';\n            document.body.appendChild(style);\n        }\n    };\n    /**\n     * To create the pattern for series/points\n     *\n     * @param chart\n     * @param color\n     * @param index\n     * @param patternName\n     * @param opacity\n     * @param chart\n     * @param color\n     * @param index\n     * @param patternName\n     * @param opacity\n     * @param chart\n     * @param color\n     * @param index\n     * @param patternName\n     * @param opacity\n     * @param chart\n     * @param color\n     * @param index\n     * @param patternName\n     * @param opacity\n     * @param chart\n     * @param color\n     * @param index\n     * @param patternName\n     * @param opacity\n     */\n    BaseSelection.prototype.pattern = function (chart, color, index, patternName, opacity) {\n        var backgroundColor = '#ffffff';\n        var svg = chart.svgObject;\n        var pathOptions = [];\n        var patternGroup = {\n            'id': chart.element.id + '_' + patternName + '_Selection' + '_' + index, 'patternUnits': 'userSpaceOnUse'\n        };\n        var heightStr = 'height';\n        var widthStr = 'width';\n        var width = 10;\n        var height = 12;\n        var patternNum = 6;\n        var turquoiseNum = 17;\n        var turstrokewidth = 1;\n        var starNum = 21;\n        var circleNum = 9;\n        var tileNum = 18;\n        var strokeWidth = 1;\n        var bubNum = 20;\n        switch (patternName) {\n            case 'Dots':\n                patternGroup[heightStr] = patternGroup[widthStr] = patternNum;\n                patternGroup[widthStr] = patternNum;\n                pathOptions[0] = {\n                    'x': 0, 'y': 0, 'width': 7, 'height': 7, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity, 'name': 'rect'\n                };\n                pathOptions[1] = {\n                    'cx': 3,\n                    'cy': 3,\n                    'r': 2,\n                    'stroke-width': 1,\n                    'fill': color,\n                    'name': 'circle'\n                };\n                break;\n            case 'Pacman':\n                patternGroup[heightStr] = '18.384';\n                patternGroup[widthStr] = '17.917';\n                pathOptions[0] = {\n                    'name': 'rect', 'x': 0, 'y': 0, 'width': 17.917, 'height': 18.384,\n                    'transform': 'translate(0,0)', 'fill': backgroundColor, 'opacity': opacity\n                };\n                pathOptions[1] = {\n                    'name': 'path', 'd': 'M9.081,9.194l5.806-3.08c-0.812-1.496-2.403-3.052-4.291-3.052H8.835C6.138,3.063,3,6.151,3,8.723v1.679   c0,2.572,3.138,5.661,5.835,5.661h1.761c2.085,0,3.835-1.76,4.535-3.514L9.081,9.194z', 'stroke-width': 1, 'stroke': color, 'fill': color\n                };\n                break;\n            case 'Chessboard':\n                patternGroup[heightStr] = patternGroup[widthStr] = width;\n                pathOptions[0] = {\n                    'x': 0, 'y': 0, 'width': width, 'height': width, 'fill': backgroundColor, 'opacity': opacity,\n                    'name': 'rect'\n                };\n                pathOptions[1] = { 'x': 0, 'y': 0, 'width': 5, 'height': 5, 'fill': color, 'opacity': opacity, 'name': 'rect' };\n                pathOptions[2] = { 'x': 5, 'y': 5, 'width': 5, 'height': 5, 'fill': color, 'opacity': opacity, 'name': 'rect' };\n                break;\n            case 'Crosshatch':\n                patternGroup[heightStr] = patternGroup[widthStr] = '8';\n                pathOptions[0] = {\n                    'x': 0, 'y': 0, 'width': 8, 'height': 8, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity, 'name': 'rect'\n                };\n                pathOptions[1] = {\n                    'd': 'M0 0L8 8ZM8 0L0 8Z',\n                    'stroke-width': 1,\n                    'stroke': color,\n                    'name': 'path'\n                };\n                break;\n            case 'DiagonalForward':\n                patternGroup[heightStr] = patternGroup[widthStr] = patternNum;\n                pathOptions[0] = {\n                    'x': 0, 'y': 0, 'width': patternNum, 'height': patternNum, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity, 'name': 'rect'\n                };\n                pathOptions[1] = {\n                    'd': 'M 3 -3 L 9 3 M 6 6 L 0 0 M 3 9 L -3 3',\n                    'stroke-width': 2,\n                    'stroke': color,\n                    'name': 'path'\n                };\n                break;\n            case 'DiagonalBackward':\n                patternGroup[heightStr] = patternGroup[widthStr] = patternNum;\n                pathOptions[0] = {\n                    'x': 0, 'y': 0, 'width': patternNum, 'height': patternNum, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity, 'name': 'rect'\n                };\n                pathOptions[1] = {\n                    'd': 'M 3 -3 L -3 3 M 0 6 L 6 0 M 9 3 L 3 9',\n                    'stroke-width': 2,\n                    'stroke': color,\n                    'name': 'path'\n                };\n                break;\n            case 'Grid':\n                patternGroup[heightStr] = patternGroup[widthStr] = patternNum;\n                pathOptions[0] = {\n                    'name': 'rect', 'x': 0, 'y': 0, 'width': patternNum, 'height': patternNum, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity\n                };\n                pathOptions[1] = {\n                    'name': 'path',\n                    'd': 'M1 3.5L11 3.5 M0 3.5L11 3.5 M0 7.5L11 7.5 M0 11.5L11 11.5 M5.5 0L5.5 12 M11.5 0L11.5 12Z',\n                    'stroke-width': 1,\n                    'stroke': color\n                };\n                break;\n            case 'Turquoise':\n                patternGroup[heightStr] = patternGroup[widthStr] = turquoiseNum;\n                pathOptions[0] = {\n                    'name': 'rect', 'x': 0, 'y': 0, 'width': turquoiseNum, 'height': turquoiseNum, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity\n                };\n                pathOptions[1] = {\n                    'name': 'path', 'd': 'M0.5739999999999998,2.643a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n                    'stroke-width': turstrokewidth, 'stroke-miterlimit': width, 'stroke': color, 'fill': color\n                };\n                pathOptions[2] = {\n                    'name': 'path', 'd': 'M11.805,2.643a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n                    'stroke-width': turstrokewidth, 'stroke-miterlimit': width, 'stroke': color, 'fill': color\n                };\n                pathOptions[3] = {\n                    'name': 'path', 'd': 'M6.19,2.643a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n                    'stroke-width': turstrokewidth, 'stroke-miterlimit': width, 'stroke': color, 'fill': color\n                };\n                pathOptions[4] = {\n                    'name': 'path', 'd': 'M11.805,8.217a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n                    'stroke-width': turstrokewidth, 'stroke-miterlimit': width, 'stroke': color, 'fill': color\n                };\n                pathOptions[5] = {\n                    'name': 'path', 'd': 'M6.19,8.217a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n                    'stroke-width': turstrokewidth, 'stroke-miterlimit': width, 'stroke': color, 'fill': color\n                };\n                pathOptions[6] = {\n                    'name': 'path', 'd': 'M11.805,13.899a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n                    'stroke-width': turstrokewidth, 'stroke-miterlimit': width, 'stroke': color, 'fill': color\n                };\n                pathOptions[7] = {\n                    'name': 'path', 'd': 'M6.19,13.899a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n                    'stroke-width': turstrokewidth, 'stroke-miterlimit': width, 'stroke': color, 'fill': color\n                };\n                break;\n            case 'Star':\n                patternGroup[heightStr] = patternGroup[widthStr] = starNum;\n                pathOptions[0] = {\n                    'name': 'rect', 'x': 0, 'y': 0, 'width': starNum, 'height': starNum, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity\n                };\n                pathOptions[1] = {\n                    'name': 'path',\n                    'd': 'M15.913,18.59L10.762 12.842 5.613 18.75 8.291 11.422 0.325 9.91 8.154 8.33 5.337 0.91 10.488 6.658 15.637 0.75 12.959 8.078 20.925 9.59 13.096 11.17 z',\n                    'stroke-width': 1,\n                    'stroke': color,\n                    'fill': color\n                };\n                break;\n            case 'Triangle':\n                patternGroup[heightStr] = patternGroup[widthStr] = width;\n                pathOptions[0] = {\n                    'name': 'rect', 'x': 0, 'y': 0, 'width': width, 'height': width, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity\n                };\n                pathOptions[1] = {\n                    'name': 'path',\n                    'd': 'M4.987,0L7.48 4.847 9.974 9.694 4.987 9.694 0 9.694 2.493 4.847 z',\n                    'stroke-width': 1,\n                    'stroke': color,\n                    'fill': color\n                };\n                break;\n            case 'Circle':\n                patternGroup[heightStr] = patternGroup[widthStr] = circleNum;\n                pathOptions[0] = {\n                    'name': 'rect', 'x': 0, 'y': 0, 'width': circleNum, 'height': circleNum, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity\n                };\n                pathOptions[1] = {\n                    'name': 'circle',\n                    'cx': 5.125,\n                    'cy': 3.875,\n                    'r': 3.625,\n                    'stroke-width': 1,\n                    'fill': color\n                };\n                break;\n            case 'Tile':\n                patternGroup[heightStr] = patternGroup[widthStr] = tileNum;\n                pathOptions[0] = {\n                    'name': 'rect', 'x': 0, 'y': 0, 'width': tileNum, 'height': tileNum, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity\n                };\n                pathOptions[1] = { 'name': 'path', 'd': 'M0,9L0 0 9 0 z', 'stroke-width': strokeWidth, 'stroke': color, 'fill': color };\n                pathOptions[2] = { 'name': 'path', 'd': 'M9,9L9 0 18 0 z', 'stroke-width': strokeWidth, 'stroke': color, 'fill': color };\n                pathOptions[3] = { 'name': 'path', 'd': 'M0,18L0 9 9 9 z', 'stroke-width': strokeWidth, 'stroke': color, 'fill': color };\n                pathOptions[4] = { 'name': 'path', 'd': 'M9,18L9 9 18 9 z', 'stroke-width': strokeWidth, 'stroke': color, 'fill': color };\n                break;\n            case 'HorizontalDash':\n                patternGroup[heightStr] = patternGroup[widthStr] = height;\n                pathOptions[0] = {\n                    'name': 'rect', 'x': 0, 'y': 0, 'width': height, 'height': height, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity\n                };\n                pathOptions[1] = {\n                    'name': 'path', 'd': 'M0,1.5 L10 1.5 M0,5.5 L10 5.5 M0,9.5 L10 9.5 z', 'stroke-width': 1,\n                    'stroke': color, 'fill': color\n                };\n                break;\n            case 'VerticalDash':\n                patternGroup[heightStr] = patternGroup[widthStr] = height;\n                pathOptions[0] = {\n                    'name': 'rect', 'x': 0, 'y': 0, 'width': height, 'height': height, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity\n                };\n                pathOptions[1] = {\n                    'name': 'path', 'd': 'M1.5,0 L1.5 10 M5.5,0 L5.5 10 M9.5,0 L9.5 10 z', 'stroke-width': 1,\n                    'stroke': color, 'fill': color\n                };\n                break;\n            case 'Rectangle':\n                patternGroup[heightStr] = patternGroup[widthStr] = height;\n                pathOptions[0] = { 'name': 'rect', 'width': height, 'height': height, 'fill': backgroundColor, 'opacity': opacity };\n                pathOptions[1] = { 'name': 'rect', 'x': 1, 'y': 2, 'width': 4, 'height': 9, 'fill': color, 'opacity': opacity };\n                pathOptions[2] = { 'name': 'rect', 'x': 7, 'y': 2, 'width': 4, 'height': 9, 'fill': color, 'opacity': opacity };\n                break;\n            case 'Box':\n                patternGroup[heightStr] = patternGroup[widthStr] = width;\n                pathOptions[0] = { 'name': 'rect', 'width': 13, 'height': 13, 'fill': backgroundColor, 'opacity': opacity };\n                pathOptions[1] = {\n                    'name': 'rect', 'x': 1.5, 'y': 1.5, 'width': width, 'height': 9, 'fill': color,\n                    'opacity': opacity\n                };\n                break;\n            case 'HorizontalStripe':\n                patternGroup[heightStr] = height;\n                patternGroup[widthStr] = width;\n                pathOptions[0] = {\n                    'name': 'rect', 'x': 0, 'y': 0, 'width': width, 'height': height,\n                    'transform': 'translate(0,0)', 'fill': backgroundColor, 'opacity': opacity\n                };\n                pathOptions[1] = {\n                    'name': 'path', 'd': 'M0,0.5 L10 0.5 M0,4.5 L10 4.5 M0,8.5 L10 8.5 z', 'stroke-width': 1,\n                    'stroke': color, 'fill': color\n                };\n                break;\n            case 'VerticalStripe':\n                patternGroup[heightStr] = width;\n                patternGroup[widthStr] = height;\n                pathOptions[0] = {\n                    'name': 'rect', 'x': 0, 'y': 0, 'width': height, 'height': width, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity\n                };\n                pathOptions[1] = {\n                    'name': 'path', 'd': 'M0.5,0 L0.5 10 M4.5,0 L4.5 10 M8.5,0 L8.5 10 z', 'stroke-width': 1,\n                    'stroke': color, 'fill': color\n                };\n                break;\n            case 'Bubble':\n                patternGroup[heightStr] = patternGroup[widthStr] = bubNum;\n                pathOptions[0] = {\n                    'name': 'rect', 'x': 0, 'y': 0, 'width': bubNum, 'height': bubNum, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity\n                };\n                pathOptions[1] = { 'name': 'circle', 'cx': 5.217, 'cy': 11.325, 'r': 3.429, 'stroke-width': 1, 'fill': '#D0A6D1' };\n                pathOptions[2] = { 'name': 'circle', 'cx': 13.328, 'cy': 6.24, 'r': 4.884, 'stroke-width': 1, 'fill': color };\n                pathOptions[3] = {\n                    'name': 'circle', 'cx': 13.277, 'cy': 14.66, 'r': 3.018, 'stroke-width': 1,\n                    'fill': '#D0A6D1'\n                };\n                break;\n        }\n        var svgRenderer = (chart.svgRenderer || chart.renderer);\n        var pattern = svgRenderer.createPattern(patternGroup, 'pattern');\n        this.loadPattern(chart, pathOptions, pattern, svgRenderer);\n        svg.appendChild(pattern);\n        return 'url(#' + chart.element.id + '_' + patternName + '_' + 'Selection' + '_' + index + ')';\n    };\n    /**\n     * To load the pattern into svg\n     *\n     * @param chart\n     * @param options\n     * @param pattern\n     * @param svgRenderer\n     * @param chart\n     * @param options\n     * @param pattern\n     * @param svgRenderer\n     * @param chart\n     * @param options\n     * @param pattern\n     * @param svgRenderer\n     * @param chart\n     * @param options\n     * @param pattern\n     * @param svgRenderer\n     */\n    BaseSelection.prototype.loadPattern = function (chart, options, pattern, svgRenderer) {\n        var i;\n        for (i = 0; i < options.length; i++) {\n            // eslint-disable-next-line @typescript-eslint/ban-types\n            var path = svgRenderer.createPattern(options[i], options[i].name);\n            pattern.appendChild(path);\n        }\n    };\n    /**\n     * To concat indexes\n     *\n     * @param userIndexes\n     * @param localIndexes\n     * @param userIndexes\n     * @param localIndexes\n     */\n    BaseSelection.prototype.concatIndexes = function (userIndexes, localIndexes) {\n        return userIndexes.concat(localIndexes);\n    };\n    /**\n     * Selected points series visibility checking on legend click\n     *\n     * @param selectedIndexes\n     */\n    BaseSelection.prototype.checkVisibility = function (selectedIndexes, chart) {\n        if (chart === void 0) { chart = null; }\n        if (!selectedIndexes) {\n            return false;\n        }\n        var visible = false;\n        var uniqueSeries = [];\n        for (var _i = 0, selectedIndexes_1 = selectedIndexes; _i < selectedIndexes_1.length; _i++) {\n            var index = selectedIndexes_1[_i];\n            if (uniqueSeries.indexOf(index.series) === -1) {\n                uniqueSeries.push(index.series);\n            }\n        }\n        for (var _a = 0, uniqueSeries_1 = uniqueSeries; _a < uniqueSeries_1.length; _a++) {\n            var index = uniqueSeries_1[_a];\n            if (chart != null && chart.rangeColorSettings && chart.rangeColorSettings.length > 0 && chart.rangeColorSettings[0].colors.length > 0) {\n                if (this.control.series[0].visible) {\n                    visible = true;\n                    break;\n                }\n            }\n            else {\n                if (this.control.series[index].visible) {\n                    visible = true;\n                    break;\n                }\n            }\n        }\n        return visible;\n    };\n    /**\n     * To add svg element style class\n     *\n     * @param element\n     * @param className\n     * @param element\n     * @param className\n     * @private\n     */\n    BaseSelection.prototype.addSvgClass = function (element, className) {\n        var elementClassName = element.getAttribute('class') || '';\n        elementClassName += ((elementClassName !== '') ? ' ' : '');\n        if (elementClassName.indexOf(className) === -1) {\n            element.setAttribute('class', elementClassName + className);\n        }\n    };\n    /**\n     * To remove svg element style class\n     *\n     * @param element\n     * @param className\n     * @param element\n     * @param className\n     * @private\n     */\n    BaseSelection.prototype.removeSvgClass = function (element, className) {\n        var elementClassName = element.getAttribute('class') || '';\n        if (elementClassName.indexOf(className) > -1) {\n            element.setAttribute('class', elementClassName.replace(className, ''));\n        }\n    };\n    /**\n     * To get children from parent element\n     *\n     * @param parent\n     */\n    BaseSelection.prototype.getChildren = function (parent) {\n        var children = [];\n        for (var i = 0; i < parent.childNodes.length; i++) {\n            if (parent.childNodes[i].tagName !== 'defs') {\n                children.push(parent.childNodes[i]);\n            }\n        }\n        return children;\n    };\n    return BaseSelection;\n}());\nexport { BaseSelection };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}