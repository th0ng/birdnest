{"ast":null,"code":"var _jsxFileName = \"/Users/thonghoangdanh/FullStack/birdnest/src/components/Table.jsx\";\nimport React from 'react';\nimport birdnestService from '../services/birdnest';\nimport { useEffect } from 'react';\n\n//constructor for data to show in the table\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction dataConstructor(serialNumber, positionX, positionY) {\n  this.serialNumber = serialNumber;\n  this.positionX = positionX;\n  this.positionY = positionY;\n  this.distance = Math.hypot(positionX, positionY);\n}\n;\n\n//function to push the data into array, with timestamp\nconst push = (array, value) => {\n  array.push({\n    value: value,\n    time: Date.now()\n  });\n};\n\n//table function to be exported\nconst Table = _ref => {\n  let {\n    data\n  } = _ref;\n  const tableData = [];\n  for (const x of data) {\n    let newData = new dataConstructor(x.children[0].value, x.children[8].value, x.children[7].value);\n    push(tableData, newData);\n  }\n\n  // delete data after 10 minutes\n  setInterval(() => {\n    let time = Date.now();\n    for (const item of tableData) {\n      if (time > item.time + 6000) {\n        tableData.splice(tableData.indexOf(item), 1);\n      }\n    }\n    ;\n  }, 6000);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Index\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Serial Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Distance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), tableData.map((item, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: i\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.value.serialNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.value.distance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","birdnestService","useEffect","dataConstructor","serialNumber","positionX","positionY","distance","Math","hypot","push","array","value","time","Date","now","Table","data","tableData","x","newData","children","setInterval","item","splice","indexOf","map","i"],"sources":["/Users/thonghoangdanh/FullStack/birdnest/src/components/Table.jsx"],"sourcesContent":["import React from 'react';\nimport birdnestService from '../services/birdnest';\nimport { useEffect } from 'react';\n\n//constructor for data to show in the table\nfunction dataConstructor(serialNumber, positionX, positionY ) {\n  this.serialNumber = serialNumber;\n  this.positionX = positionX;\n  this.positionY = positionY;\n  this.distance = Math.hypot(positionX, positionY);\n};\n\n//function to push the data into array, with timestamp\nconst push = (array, value) => {\n  array.push({\n     value: value,\n     time: Date.now()\n  });\n};\n\n//table function to be exported\nconst Table = ({ data }) => {\n  const tableData = [];\n\n  for (const x of data) {\n    let newData = new dataConstructor(\n      x.children[0].value,\n      x.children[8].value,\n      x.children[7].value,\n    );\n    push(tableData, newData);\n  }\n\n  // delete data after 10 minutes\n  setInterval(() => {\n    let time = Date.now();\n    for (const item of tableData) {\n      if (time > item.time + 6000) {\n        tableData.splice(tableData.indexOf(item), 1);\n      }\n    };\n  }, 6000);\n\n\n  return (\n    <div>\n      <p>Table</p>\n      <table>\n        <tr>\n          <th>Index</th>\n          <th>Serial Number</th>\n          <th>Distance</th>\n        </tr>\n        {tableData.map((item, i) =>\n        <tr>\n          <td>{i}</td>\n          <td>{item.value.serialNumber}</td>\n          <td>{item.value.distance}</td>\n        </tr>\n        )}\n      </table>\n    </div>\n  )\n};\n\nexport default Table;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,eAAe,MAAM,sBAAsB;AAClD,SAASC,SAAS,QAAQ,OAAO;;AAEjC;AAAA;AACA,SAASC,eAAe,CAACC,YAAY,EAAEC,SAAS,EAAEC,SAAS,EAAG;EAC5D,IAAI,CAACF,YAAY,GAAGA,YAAY;EAChC,IAAI,CAACC,SAAS,GAAGA,SAAS;EAC1B,IAAI,CAACC,SAAS,GAAGA,SAAS;EAC1B,IAAI,CAACC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACJ,SAAS,EAAEC,SAAS,CAAC;AAClD;AAAC;;AAED;AACA,MAAMI,IAAI,GAAG,CAACC,KAAK,EAAEC,KAAK,KAAK;EAC7BD,KAAK,CAACD,IAAI,CAAC;IACRE,KAAK,EAAEA,KAAK;IACZC,IAAI,EAAEC,IAAI,CAACC,GAAG;EACjB,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,MAAMC,KAAK,GAAG,QAAc;EAAA,IAAb;IAAEC;EAAK,CAAC;EACrB,MAAMC,SAAS,GAAG,EAAE;EAEpB,KAAK,MAAMC,CAAC,IAAIF,IAAI,EAAE;IACpB,IAAIG,OAAO,GAAG,IAAIjB,eAAe,CAC/BgB,CAAC,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACT,KAAK,EACnBO,CAAC,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACT,KAAK,EACnBO,CAAC,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACT,KAAK,CACpB;IACDF,IAAI,CAACQ,SAAS,EAAEE,OAAO,CAAC;EAC1B;;EAEA;EACAE,WAAW,CAAC,MAAM;IAChB,IAAIT,IAAI,GAAGC,IAAI,CAACC,GAAG,EAAE;IACrB,KAAK,MAAMQ,IAAI,IAAIL,SAAS,EAAE;MAC5B,IAAIL,IAAI,GAAGU,IAAI,CAACV,IAAI,GAAG,IAAI,EAAE;QAC3BK,SAAS,CAACM,MAAM,CAACN,SAAS,CAACO,OAAO,CAACF,IAAI,CAAC,EAAE,CAAC,CAAC;MAC9C;IACF;IAAC;EACH,CAAC,EAAE,IAAI,CAAC;EAGR,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAY,eACZ;MAAA,wBACE;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAc,eACd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAsB,eACtB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAiB;MAAA;QAAA;QAAA;QAAA;MAAA,QACd,EACJL,SAAS,CAACQ,GAAG,CAAC,CAACH,IAAI,EAAEI,CAAC,kBACvB;QAAA,wBACE;UAAA,UAAKA;QAAC;UAAA;UAAA;UAAA;QAAA,QAAM,eACZ;UAAA,UAAKJ,IAAI,CAACX,KAAK,CAACR;QAAY;UAAA;UAAA;UAAA;QAAA,QAAM,eAClC;UAAA,UAAKmB,IAAI,CAACX,KAAK,CAACL;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QAC3B,CACJ;IAAA;MAAA;MAAA;MAAA;IAAA,QACK;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV,CAAC;AAAC,KA1CIS,KAAK;AA4CX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}