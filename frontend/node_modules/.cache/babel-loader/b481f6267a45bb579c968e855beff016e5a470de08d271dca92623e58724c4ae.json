{"ast":null,"code":"import _toConsumableArray from\"/Users/thonghoangdanh/FullStack/birdnest/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _createForOfIteratorHelper from\"/Users/thonghoangdanh/FullStack/birdnest/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _slicedToArray from\"/Users/thonghoangdanh/FullStack/birdnest/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from'react';import{useState,useEffect}from'react';import birdnestService from'../services/birdnest';//construction for drone data\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function droneConstructor(serialNumber,positionX,positionY,closestDistance,pilotInformation){this.serialNumber=serialNumber;this.positionX=positionX;this.positionY=positionY;this.closestDistance=closestDistance;this.pilotInformation=pilotInformation;};//Body\nvar Body=function Body(_ref){var drones=_ref.drones;//device data, stay static\nvar device=drones.children[0];//drones data, updated every 2 seconds\nvar dronesData=drones.children[1].children;//array to store the data\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),violatingDrones=_useState2[0],setViolatingDrones=_useState2[1];useEffect(function(){//Looping through the data\nvar _iterator=_createForOfIteratorHelper(dronesData),_step;try{var _loop=function _loop(){var drone=_step.value;//Check if the position is in the no-fly zone\nvar distance=Math.hypot(Math.abs(drone.children[8].value-250000),Math.abs(drone.children[7].value-250000));if(distance<100000){//Check if there's already that drone in the array, if so update the timestamp, else update the array with the new drone\nvar found=violatingDrones.find(function(obj){return obj.data.serialNumber===drone.children[0].value;});if(found){var updatedClosestDistance=distance<found.data.distance?distance:found.data.closestDistance;//Define the updated piece of data\nvar updatedDroneData=new droneConstructor(found.data.serialNumber,drone.children[8].value,drone.children[7].value,updatedClosestDistance,found.data.pilotInformation);var updatedDrone={data:updatedDroneData,time:Date.now()};var updatedDronesArray=violatingDrones.map(function(drone){return drone.data.serialNumber===updatedDrone.data.serialNumber?updatedDrone:drone;});setViolatingDrones(updatedDronesArray);}else{//If there's not the drone in the array, get the pilot information and make a new data by constructor, after that add new data to the array and update the array\nbirdnestService.getPilotInformation(drone.children[0].value).then(function(pilotInformation){var newViolatingDrone={data:new droneConstructor(drone.children[0].value,drone.children[8].value,drone.children[7].value,distance,pilotInformation),time:Date.now()};setViolatingDrones([newViolatingDrone].concat(_toConsumableArray(violatingDrones)));});}}};for(_iterator.s();!(_step=_iterator.n()).done;){_loop();}}catch(err){_iterator.e(err);}finally{_iterator.f();};},[drones]);//check for outtimed data every 1 minute using useEffect and Interval.\nuseEffect(function(){var interval=setInterval(function(){var time=Date.now();var updatedDronesArray=violatingDrones.filter(function(d){return d.time+600000>time;});setViolatingDrones(updatedDronesArray);},60000);// this will run the effect every 1 minute\nreturn function(){return clearInterval(interval);};// this will clear the interval when the component unmounts\n});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex w-full mb-5 font-mono\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col w-1/2\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"font-bold text-xl text-indigo-500 mb-5\",children:\"DEVICE INFORMATION\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"font-medium text-base\",children:[\"Device ID: \",device.attributes.deviceId,/*#__PURE__*/_jsx(\"br\",{}),\"Started Time: \",new Date(device.children[1].value).toTimeString()+' on '+new Date(device.children[1].value).toLocaleDateString()]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"w-full mt-5 font-mono\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"font-bold text-xl text-indigo-500 mb-5\",children:\"TABLE OF VIOLATING DRONES AND ITS PILOTS\"}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsxs(\"thead\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Serial number\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Closest distance\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Pilot\"})]}),/*#__PURE__*/_jsx(\"tbody\",{children:violatingDrones.map(function(drone){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:drone.data.serialNumber}),/*#__PURE__*/_jsx(\"td\",{children:drone.data.closestDistance}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Pilot's ID: \",drone.data.pilotInformation.pilotId]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Pilot's name: \",drone.data.pilotInformation.firstName,\" \",drone.data.pilotInformation.lastName]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Pilot's email: \",drone.data.pilotInformation.email]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Pilot's phonenumber: \",drone.data.pilotInformation.phoneNumber]})]})]});})})]})]})]});};export default Body;","map":{"version":3,"names":["React","useState","useEffect","birdnestService","droneConstructor","serialNumber","positionX","positionY","closestDistance","pilotInformation","Body","drones","device","children","dronesData","violatingDrones","setViolatingDrones","drone","distance","Math","hypot","abs","value","found","find","obj","data","updatedClosestDistance","updatedDroneData","updatedDrone","time","Date","now","updatedDronesArray","map","getPilotInformation","then","newViolatingDrone","interval","setInterval","filter","d","clearInterval","attributes","deviceId","toTimeString","toLocaleDateString","pilotId","firstName","lastName","email","phoneNumber"],"sources":["/Users/thonghoangdanh/FullStack/birdnest/src/components/Body.jsx"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport birdnestService from '../services/birdnest';\n\n//construction for drone data\nfunction droneConstructor(serialNumber, positionX, positionY, closestDistance, pilotInformation ) {\n  this.serialNumber = serialNumber;\n  this.positionX = positionX;\n  this.positionY = positionY;\n  this.closestDistance = closestDistance;\n  this.pilotInformation = pilotInformation;\n};\n\n//Body\nconst Body = ({ drones }) => {\n  //device data, stay static\n  const device = drones.children[0];\n  //drones data, updated every 2 seconds\n  const dronesData = drones.children[1].children;\n\n  //array to store the data\n  const [violatingDrones, setViolatingDrones] = useState([]);\n  useEffect(() => {\n    //Looping through the data\n    for (const drone of dronesData) {\n      //Check if the position is in the no-fly zone\n      const distance = Math.hypot(Math.abs(drone.children[8].value - 250000), Math.abs(drone.children[7].value - 250000));\n      if (distance < 100000 ) {\n        //Check if there's already that drone in the array, if so update the timestamp, else update the array with the new drone\n        const found = violatingDrones.find(obj => obj.data.serialNumber === drone.children[0].value);\n        if (found) {\n          const updatedClosestDistance = distance < found.data.distance ? distance : found.data.closestDistance;\n          //Define the updated piece of data\n          const updatedDroneData = new droneConstructor(\n            found.data.serialNumber,\n            drone.children[8].value,\n            drone.children[7].value,\n            updatedClosestDistance,\n            found.data.pilotInformation,\n          );\n          const updatedDrone = {\n            data: updatedDroneData,\n            time: Date.now()\n          };\n          const updatedDronesArray = violatingDrones.map(drone => drone.data.serialNumber === updatedDrone.data.serialNumber ? updatedDrone : drone );\n          setViolatingDrones(updatedDronesArray);\n        } else {\n          //If there's not the drone in the array, get the pilot information and make a new data by constructor, after that add new data to the array and update the array\n          birdnestService\n            .getPilotInformation(drone.children[0].value)\n            .then((pilotInformation) => {\n              const newViolatingDrone = {\n                data: new droneConstructor(\n                  drone.children[0].value,\n                  drone.children[8].value,\n                  drone.children[7].value,\n                  distance,\n                  pilotInformation,\n                ),\n                time: Date.now()\n              };\n              setViolatingDrones([newViolatingDrone, ...violatingDrones]);\n            });\n        }\n      }\n    };\n  },[drones]);\n\n  //check for outtimed data every 1 minute using useEffect and Interval.\n  useEffect(() => {\n    const interval = setInterval(() => {\n      var time = Date.now();\n      var updatedDronesArray = violatingDrones.filter(d =>\n      d.time + 600000 > time);\n      setViolatingDrones(updatedDronesArray);\n    }, 60000); // this will run the effect every 1 minute\n    return () => clearInterval(interval); // this will clear the interval when the component unmounts\n  });\n\n  return (\n    <>\n      <div className='flex w-full mb-5 font-mono'>\n        <div className='flex flex-col w-1/2'>\n          <h2 className='font-bold text-xl text-indigo-500 mb-5'>DEVICE INFORMATION</h2>\n          <p className='font-medium text-base'>\n          Device ID: {device.attributes.deviceId}\n          <br />\n          Started Time: {\n            new Date(device.children[1].value).toTimeString()\n            + ' on '\n            + new Date(device.children[1].value).toLocaleDateString()\n          }\n          </p>\n        </div>\n      </div>\n      <div className='w-full mt-5 font-mono'>\n        <h2 className='font-bold text-xl text-indigo-500 mb-5'>TABLE OF VIOLATING DRONES AND ITS PILOTS</h2>\n        <table>\n          <thead>\n            <th>Serial number</th>\n            <th>Closest distance</th>\n            <th>Pilot</th>\n          </thead>\n          <tbody>\n            {violatingDrones.map((drone) =>\n              <tr>\n                <td>{drone.data.serialNumber}</td>\n                <td>{drone.data.closestDistance}</td>\n                <td>\n                  <p>Pilot's ID: {drone.data.pilotInformation.pilotId}</p>\n                  <p>Pilot's name: {drone.data.pilotInformation.firstName} {drone.data.pilotInformation.lastName}</p>\n                  <p>Pilot's email: {drone.data.pilotInformation.email}</p>\n                  <p>Pilot's phonenumber: {drone.data.pilotInformation.phoneNumber}</p>\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n}\n\nexport default Body;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}