{"ast":null,"code":"import { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataUtil } from '@syncfusion/ej2-data';\nimport { subtractThickness, valueToCoefficient, sum, redrawElement, isBreakLabel, ChartLocation } from '../../common/utils/helper';\nimport { subArray, inside, appendChildElement, stringToNumber } from '../../common/utils/helper';\nimport { Thickness, logBase, createZoomingLabels, getElement } from '../../common/utils/helper';\nimport { Size, Rect, measureText, TextOption, PathOption } from '@syncfusion/ej2-svg-base';\nimport { textElement, textTrim, getRotatedRectangleCoordinates, isRotatedRectIntersect, isZoomSet } from '../../common/utils/helper';\n/**\n * Specifies the Cartesian Axis Layout.\n */\nvar axisPadding = 10;\nvar CartesianAxisLayoutPanel = /** @class */function () {\n  /** @private */\n  function CartesianAxisLayoutPanel(chartModule) {\n    this.chart = chartModule;\n    this.padding = 5;\n  }\n  /**\n   * Measure the axis size.\n   *\n   * @returns {void}\n   * @private\n   */\n  CartesianAxisLayoutPanel.prototype.measureAxis = function (rect) {\n    var chart = this.chart;\n    var chartAreaWidth = chart.chartArea.width ? stringToNumber(chart.chartArea.width, chart.availableSize.width) : null;\n    this.crossAt(chart);\n    this.seriesClipRect = new Rect(rect.x, rect.y, rect.width, rect.height);\n    this.initialClipRect = rect;\n    this.leftSize = 0;\n    this.rightSize = 0;\n    this.topSize = 0;\n    this.bottomSize = 0;\n    //Measure Axis size with initial Rect\n    this.measureRowAxis(chart, this.initialClipRect);\n    this.initialClipRect = subtractThickness(this.initialClipRect, new Thickness(this.leftSize, this.rightSize, 0, 0));\n    this.measureColumnAxis(chart, this.initialClipRect);\n    this.initialClipRect = subtractThickness(this.initialClipRect, new Thickness(0, 0, this.topSize, this.bottomSize));\n    if (!this.chart.delayRedraw) {\n      this.calculateAxisSize(this.initialClipRect);\n    }\n    this.leftSize = 0;\n    this.rightSize = 0;\n    this.topSize = 0;\n    this.bottomSize = 0;\n    //Measure Axis size with series Rect\n    this.measureRowAxis(chart, this.initialClipRect);\n    this.seriesClipRect = subtractThickness(this.seriesClipRect, new Thickness(this.leftSize, this.rightSize, 0, 0));\n    this.measureColumnAxis(chart, this.initialClipRect);\n    this.seriesClipRect = subtractThickness(this.seriesClipRect, new Thickness(0, 0, this.topSize, this.bottomSize));\n    if (chartAreaWidth) {\n      this.calculateFixedChartArea(chart, chartAreaWidth);\n    }\n    if (!this.chart.delayRedraw) {\n      chart.refreshAxis();\n      this.calculateAxisSize(this.seriesClipRect);\n    }\n  };\n  CartesianAxisLayoutPanel.prototype.calculateFixedChartArea = function (chart, chartAreaWidth) {\n    this.seriesClipRect.width = chartAreaWidth;\n    this.seriesClipRect.x = chart.availableSize.width - chart.margin.right - chartAreaWidth - (chart.legendSettings.position === \"Right\" ? chart.legendModule.legendBounds.width : 0);\n    for (var _i = 0, _a = chart.rows; _i < _a.length; _i++) {\n      var item = _a[_i];\n      this.seriesClipRect.x -= sum(item.farSizes);\n    }\n  };\n  CartesianAxisLayoutPanel.prototype.measureRowAxis = function (chart, rect) {\n    var row;\n    this.calculateRowSize(rect);\n    for (var _i = 0, _a = chart.rows; _i < _a.length; _i++) {\n      var item = _a[_i];\n      row = item;\n      row.nearSizes = [];\n      row.farSizes = [];\n      row.insideNearSizes = [];\n      row.insideFarSizes = [];\n      this.arrangeAxis(row);\n      this.measureDefinition(row, chart, new Size(chart.availableSize.width, row.computedHeight));\n      if (this.leftSize < sum(row.nearSizes)) {\n        this.leftSize = sum(row.nearSizes);\n      }\n      if (this.rightSize < sum(row.farSizes)) {\n        this.rightSize = sum(row.farSizes);\n      }\n    }\n  };\n  CartesianAxisLayoutPanel.prototype.measureColumnAxis = function (chart, rect) {\n    var column;\n    this.calculateColumnSize(rect);\n    for (var _i = 0, _a = chart.columns; _i < _a.length; _i++) {\n      var item = _a[_i];\n      column = item;\n      column.farSizes = [];\n      column.nearSizes = [];\n      column.insideNearSizes = [];\n      column.insideFarSizes = [];\n      this.arrangeAxis(column);\n      this.measureDefinition(column, chart, new Size(column.computedWidth, chart.availableSize.height));\n      if (this.bottomSize < sum(column.nearSizes)) {\n        this.bottomSize = sum(column.nearSizes);\n      }\n      if (this.topSize < sum(column.farSizes)) {\n        this.topSize = sum(column.farSizes);\n      }\n    }\n  };\n  /**\n   * Measure the column and row in chart.\n   *\n   * @returns {void}\n   * @private\n   */\n  CartesianAxisLayoutPanel.prototype.measureDefinition = function (definition, chart, size) {\n    var ele = 16; // scrollbar element height is 16.\n    for (var _i = 0, _a = definition.axes; _i < _a.length; _i++) {\n      var axis = _a[_i];\n      axis.scrollBarHeight = chart.scrollBarModule && chart.zoomModule && chart.zoomSettings.enableScrollbar && axis.enableScrollbarOnZooming && chart.zoomModule.isZoomed && (axis.zoomFactor < 1 || axis.zoomPosition > 0) ? ele : 0;\n      axis.scrollBarHeight = chart.scrollBarModule && (chart.zoomModule && chart.zoomSettings.enableScrollbar && axis.enableScrollbarOnZooming && chart.zoomModule.isZoomed && (axis.zoomFactor < 1 || axis.zoomPosition > 0) || axis.scrollbarSettings.enable) ? ele : 0;\n      axis.getModule(chart);\n      axis.baseModule.calculateRangeAndInterval(size, axis);\n      definition.computeSize(axis, axis.scrollBarHeight, definition, chart);\n    }\n    if (definition.farSizes.length > 0) {\n      definition.farSizes[definition.farSizes.length - 1] -= axisPadding;\n    }\n    if (definition.nearSizes.length > 0) {\n      definition.nearSizes[definition.nearSizes.length - 1] -= axisPadding;\n    }\n  };\n  /**\n   * Measure the axis.\n   *\n   * @returns {void}\n   * @private\n   */\n  CartesianAxisLayoutPanel.prototype.calculateAxisSize = function (rect) {\n    var chart = this.chart;\n    var row;\n    var column;\n    var definition;\n    var axis;\n    var nearCount = 0;\n    var farCount = 0;\n    var size = 0;\n    var x;\n    var y;\n    var axisOffset;\n    this.calculateRowSize(rect);\n    for (var i = 0, len = chart.rows.length; i < len; i++) {\n      row = chart.rows[i];\n      nearCount = 0;\n      farCount = 0;\n      for (var j = 0, len_1 = row.axes.length; j < len_1; j++) {\n        axis = row.axes[j];\n        axisOffset = axis.plotOffset;\n        if (axis.rect.height === 0) {\n          axis.rect.height = row.computedHeight;\n          size = 0;\n          for (var k = i + 1, len_2 = i + axis.span; k < len_2; k++) {\n            definition = chart.rows[k];\n            size += definition.computedHeight;\n          }\n          axis.rect.y = row.computedTop - size + (axis.plotOffsetTop ? axis.plotOffsetTop : axisOffset);\n          axis.rect.height = axis.rect.height + size - this.getAxisOffsetValue(axis.plotOffsetTop, axis.plotOffsetBottom, axis.plotOffset);\n          axis.rect.width = 0;\n        }\n        if (axis.isAxisOpposedPosition) {\n          if (axis.labelPosition === 'Inside' && axis.orientation === \"Vertical\") {\n            x = rect.x + rect.width - sum(subArray(row.insideFarSizes, farCount));\n          } else {\n            x = rect.x + rect.width + sum(subArray(row.farSizes, farCount));\n          }\n          axis.rect.x = axis.rect.x >= x ? axis.rect.x : x;\n          farCount++;\n        } else {\n          if (axis.labelPosition === 'Inside' && axis.orientation === \"Vertical\") {\n            x = rect.x + sum(subArray(row.insideNearSizes, nearCount));\n          } else {\n            x = rect.x - sum(subArray(row.nearSizes, nearCount));\n          }\n          axis.rect.x = axis.rect.x <= x ? axis.rect.x : x;\n          nearCount++;\n        }\n      }\n    }\n    this.calculateColumnSize(rect);\n    for (var i = 0, len = chart.columns.length; i < len; i++) {\n      column = chart.columns[i];\n      nearCount = 0;\n      farCount = 0;\n      for (var j = 0, len_3 = column.axes.length; j < len_3; j++) {\n        axis = column.axes[j];\n        axisOffset = axis.plotOffset;\n        if (axis.rect.width === 0) {\n          for (var k = i, len_4 = i + axis.span; k < len_4; k++) {\n            definition = chart.columns[k];\n            axis.rect.width += definition.computedWidth;\n          }\n          axis.rect.x = column.computedLeft + (axis.plotOffsetLeft ? axis.plotOffsetLeft : axisOffset);\n          axis.rect.width -= this.getAxisOffsetValue(axis.plotOffsetLeft, axis.plotOffsetRight, axis.plotOffset);\n          axis.rect.height = 0;\n        }\n        if (axis.isAxisOpposedPosition) {\n          if (axis.labelPosition === 'Inside' && axis.orientation === \"Horizontal\") {\n            y = rect.y + sum(subArray(column.insideFarSizes, farCount));\n          } else {\n            y = rect.y - sum(subArray(column.farSizes, farCount));\n          }\n          axis.rect.y = axis.rect.y <= y ? axis.rect.y : y;\n          farCount++;\n        } else {\n          if (axis.labelPosition === 'Inside' && axis.orientation === \"Horizontal\") {\n            y = rect.y + rect.height - sum(subArray(column.insideNearSizes, nearCount));\n          } else {\n            y = rect.y + rect.height + sum(subArray(column.nearSizes, nearCount));\n          }\n          axis.rect.y = axis.rect.y >= y ? axis.rect.y : y;\n          nearCount++;\n        }\n      }\n    }\n  };\n  /**\n   * Measure the axis.\n   *\n   * @returns {void}\n   * @private\n   */\n  CartesianAxisLayoutPanel.prototype.measure = function () {\n    var chart = this.chart;\n    var row;\n    var column;\n    var definition;\n    var actualIndex;\n    var span;\n    for (var _i = 0, _a = chart.axisCollections; _i < _a.length; _i++) {\n      var axis = _a[_i];\n      //definition.Axes = axis;\n      if (axis.orientation === 'Vertical') {\n        chart.verticalAxes.push(axis);\n        actualIndex = this.getActualRow(axis);\n        row = chart.rows[actualIndex];\n        this.pushAxis(row, axis);\n        span = actualIndex + axis.span > chart.rows.length ? chart.rows.length : actualIndex + axis.span;\n        for (var j = actualIndex + 1; j < span; j++) {\n          definition = chart.rows[j];\n          definition.axes[row.axes.length - 1] = axis;\n          chart.rows[j] = definition;\n        }\n        chart.rows[actualIndex] = row;\n      } else {\n        chart.horizontalAxes.push(axis);\n        actualIndex = this.getActualColumn(axis);\n        column = chart.columns[actualIndex];\n        this.pushAxis(column, axis);\n        span = actualIndex + axis.span > chart.columns.length ? chart.columns.length : actualIndex + axis.span;\n        for (var j = actualIndex + 1; j < span; j++) {\n          definition = chart.columns[j];\n          definition.axes[column.axes.length - 1] = axis;\n          chart.columns[j] = definition;\n        }\n        chart.columns[actualIndex] = column;\n      }\n      axis.isRTLEnabled = chart.enableRtl;\n      axis.setIsInversedAndOpposedPosition();\n    }\n  };\n  CartesianAxisLayoutPanel.prototype.getAxisOffsetValue = function (position1, position2, plotOffset) {\n    var rangeOffset = position1 ? position1 + (position2 ? position2 : plotOffset) : position2 ? position2 + plotOffset : 2 * plotOffset;\n    return rangeOffset;\n  };\n  CartesianAxisLayoutPanel.prototype.crossAt = function (chart) {\n    for (var _i = 0, _a = chart.axisCollections; _i < _a.length; _i++) {\n      var axis = _a[_i];\n      if (axis.crossesAt === null) {\n        continue;\n      }\n      if (!axis.crossesInAxis) {\n        if (chart.requireInvertedAxis) {\n          axis.crossInAxis = axis.orientation === 'Horizontal' ? chart.primaryXAxis : chart.primaryYAxis;\n        } else {\n          axis.crossInAxis = axis.orientation === 'Horizontal' ? chart.primaryYAxis : chart.primaryXAxis;\n        }\n        axis.crossAt = this.updateCrossAt(axis.crossInAxis, axis.crossesAt);\n        continue;\n      } else {\n        for (var i = 2, len = chart.axisCollections.length; i < len; i++) {\n          if (axis.crossesInAxis === chart.axisCollections[i].name) {\n            axis.crossInAxis = chart.axisCollections[i];\n            axis.crossAt = this.updateCrossAt(axis.crossInAxis, axis.crossesAt);\n            continue;\n          }\n        }\n      }\n    }\n  };\n  CartesianAxisLayoutPanel.prototype.updateCrossAt = function (axis, crossAt) {\n    switch (axis.valueType) {\n      case 'DateTime':\n        var option = {\n          skeleton: 'full',\n          type: 'dateTime'\n        };\n        var dateParser = this.chart.intl.getDateParser(option);\n        var dateFormatter = this.chart.intl.getDateFormat(option);\n        return Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({\n          val: crossAt\n        }).val))));\n      case 'Category':\n        return parseFloat(crossAt) ? parseFloat(crossAt) : axis.labels.indexOf(crossAt);\n      case 'Logarithmic':\n        return logBase(crossAt, axis.logBase);\n      default:\n        return crossAt;\n    }\n  };\n  CartesianAxisLayoutPanel.prototype.pushAxis = function (definition, axis) {\n    for (var i = 0, len = definition.axes.length; i <= len; i++) {\n      if (!definition.axes[i]) {\n        definition.axes[i] = axis;\n        break;\n      }\n    }\n  };\n  CartesianAxisLayoutPanel.prototype.arrangeAxis = function (definition) {\n    var axisCollection = [];\n    for (var i = 0, len = definition.axes.length; i <= len; i++) {\n      if (definition.axes[i]) {\n        axisCollection.push(definition.axes[i]);\n      }\n    }\n    definition.axes = axisCollection;\n  };\n  CartesianAxisLayoutPanel.prototype.getActualColumn = function (axis) {\n    var actualLength = this.chart.columns.length;\n    var pos = axis.columnIndex;\n    var result = pos >= actualLength ? actualLength - 1 : pos < 0 ? 0 : pos;\n    return result;\n  };\n  CartesianAxisLayoutPanel.prototype.getActualRow = function (axis) {\n    var actualLength = this.chart.rows.length;\n    var pos = axis.rowIndex;\n    var result = pos >= actualLength ? actualLength - 1 : pos < 0 ? 0 : pos;\n    return result;\n  };\n  /**\n   * Measure the row size.\n   *\n   * @returns {void}\n   */\n  CartesianAxisLayoutPanel.prototype.calculateRowSize = function (rect) {\n    /*! Calculate row size */\n    var chart = this.chart;\n    var row;\n    var rowTop = rect.y + rect.height;\n    var height = 0;\n    var remainingHeight = Math.max(0, rect.height);\n    for (var i = 0, len = chart.rows.length; i < len; i++) {\n      row = chart.rows[i];\n      if (row.height.indexOf('%') !== -1) {\n        height = Math.min(remainingHeight, rect.height * parseInt(row.height, 10) / 100);\n      } else {\n        height = Math.min(remainingHeight, parseInt(row.height, 10));\n      }\n      height = i !== len - 1 ? height : remainingHeight;\n      row.computedHeight = height;\n      rowTop -= height;\n      row.computedTop = rowTop;\n      remainingHeight -= height;\n    }\n  };\n  /**\n   * Measure the row size.\n   *\n   * @param {Rect} rect rect\n   * @returns {void}\n   */\n  CartesianAxisLayoutPanel.prototype.calculateColumnSize = function (rect) {\n    /*! Calculate column size */\n    var chart = this.chart;\n    var column;\n    var columnLeft = rect.x;\n    var width = 0;\n    var remainingWidth = Math.max(0, rect.width);\n    for (var i = 0, len = chart.columns.length; i < len; i++) {\n      column = chart.columns[i];\n      if (column.width.indexOf('%') !== -1) {\n        width = Math.min(remainingWidth, rect.width * parseInt(column.width, 10) / 100);\n      } else {\n        width = Math.min(remainingWidth, parseInt(column.width, 10));\n      }\n      width = i !== len - 1 ? width : remainingWidth;\n      column.computedWidth = width;\n      column.computedLeft = columnLeft;\n      columnLeft += width;\n      remainingWidth -= width;\n    }\n  };\n  /**\n   * To render the axis element.\n   *\n   * @returns {void}\n   * @private\n   */\n  // tslint:disable-next-line:max-func-body-length\n  CartesianAxisLayoutPanel.prototype.renderAxes = function () {\n    var chart = this.chart;\n    var axis;\n    var axisElement = chart.renderer.createGroup({\n      id: chart.element.id + 'AxisInsideCollection'\n    });\n    var axisLineElement = chart.renderer.createGroup({\n      id: chart.element.id + 'AxisOutsideCollection'\n    });\n    if (axisLineElement) {\n      axisLineElement.setAttribute('aria-hidden', 'true');\n    }\n    var outsideElement;\n    var isInside;\n    for (var i = 0, len = chart.axisCollections.length; i < len; i++) {\n      var axisVisibility = true;\n      axis = chart.axisCollections[i];\n      this.element = chart.renderer.createGroup({\n        id: chart.element.id + 'AxisGroup' + i + 'Inside'\n      });\n      if (this.element) {\n        this.element.setAttribute('aria-hidden', 'true');\n      }\n      outsideElement = chart.renderer.createGroup({\n        id: chart.element.id + 'AxisGroup' + i + 'Outside'\n      });\n      if (outsideElement) {\n        outsideElement.setAttribute('aria-hidden', 'true');\n      }\n      ;\n      for (var _i = 0, _a = axis.series; _i < _a.length; _i++) {\n        var series = _a[_i];\n        if (axis.name === series.yAxisName || axis.name === series.xAxisName) {\n          axisVisibility = series.visible;\n          if (!axisVisibility) {\n            continue;\n          } else {\n            break;\n          }\n        }\n      }\n      if (!axisVisibility) {\n        continue;\n      }\n      isInside = this.findAxisPosition(axis);\n      if (axis.orientation === 'Horizontal') {\n        axis.updateCrossValue();\n        if (axis.visible && axis.internalVisibility && axis.lineStyle.width > 0) {\n          this.drawAxisLine(axis, i, axis.plotOffset, 0, 0, 0, axis.plotOffsetLeft, axis.plotOffsetRight, isInside ? outsideElement : this.element, axis.updatedRect);\n        }\n        if (axis.majorGridLines.width > 0 || axis.majorTickLines.width > 0) {\n          this.drawXAxisGridLine(axis, i, isInside || axis.tickPosition === 'Inside' ? outsideElement : this.element, axis.updatedRect);\n        }\n        if (axis.visible && axis.internalVisibility) {\n          this.drawXAxisLabels(axis, i, isInside || axis.labelPosition === 'Inside' ? outsideElement : this.element, axis.placeNextToAxisLine ? axis.updatedRect : axis.rect);\n          this.drawXAxisBorder(axis, i, isInside || axis.labelPosition === 'Inside' ? outsideElement : this.element, axis.placeNextToAxisLine ? axis.updatedRect : axis.rect);\n          this.drawXAxisTitle(axis, i, isInside ? outsideElement : this.element, axis.placeNextToAxisLine ? axis.updatedRect : axis.rect);\n        }\n      } else {\n        axis.updateCrossValue();\n        if (axis.visible && axis.internalVisibility && axis.lineStyle.width > 0) {\n          this.drawAxisLine(axis, i, 0, axis.plotOffset, axis.plotOffsetBottom, axis.plotOffsetTop, 0, 0, isInside ? outsideElement : this.element, axis.updatedRect);\n        }\n        if (axis.majorGridLines.width > 0 || axis.majorTickLines.width > 0) {\n          this.drawYAxisGridLine(axis, i, isInside || axis.tickPosition === 'Inside' ? outsideElement : this.element, axis.updatedRect);\n        }\n        if (axis.visible && axis.internalVisibility) {\n          this.drawYAxisLabels(axis, i, isInside || axis.labelPosition === 'Inside' ? outsideElement : this.element, axis.placeNextToAxisLine ? axis.updatedRect : axis.rect);\n          this.drawYAxisBorder(axis, i, isInside || axis.labelPosition === 'Inside' ? outsideElement : this.element, axis.placeNextToAxisLine ? axis.updatedRect : axis.rect);\n          this.drawYAxisTitle(axis, i, isInside ? outsideElement : this.element, axis.placeNextToAxisLine ? axis.updatedRect : axis.rect);\n        }\n      }\n      if (!this.chart.enableCanvas) {\n        axisElement.appendChild(this.element);\n        if (outsideElement && outsideElement.childNodes.length > 0) {\n          axisLineElement.appendChild(outsideElement);\n        }\n      }\n      if (chart.scrollBarModule && (chart.zoomSettings.enableScrollbar && axis.enableScrollbarOnZooming || axis.scrollbarSettings.enable)) {\n        this.renderScrollbar(chart, axis);\n      }\n    }\n    this.element = chart.renderer.createGroup({\n      id: chart.element.id + 'DefinitionLine'\n    });\n    for (var j = 0, len = chart.rows.length; j < len; j++) {\n      var row = chart.rows[j];\n      if (row.border.color) {\n        this.drawBottomLine(row, j, true);\n      }\n    }\n    for (var j = 0, len = chart.columns.length; j < len; j++) {\n      var column = chart.columns[j];\n      if (column.border.color) {\n        this.drawBottomLine(column, j, false);\n      }\n    }\n    if (!this.chart.enableCanvas) {\n      axisElement.appendChild(this.element);\n    }\n    appendChildElement(chart.enableCanvas, chart.svgObject, axisElement, chart.redraw);\n    return axisLineElement;\n  };\n  /**\n   * To render the axis scrollbar\n   *\n   * @param {Chart} chart chart\n   * @param {Axis} axis axis\n   * @returns {void}\n   */\n  CartesianAxisLayoutPanel.prototype.renderScrollbar = function (chart, axis) {\n    var isZoomed = isNullOrUndefined(chart.zoomModule) ? false : chart.zoomModule.isZoomed;\n    if ((isZoomed && (axis.zoomFactor < 1 || axis.zoomPosition > 0) || axis.scrollbarSettings.enable && (axis.zoomFactor <= 1 || axis.zoomPosition >= 0)) && (!axis.zoomingScrollBar.isScrollUI || chart.visibleSeries[0].type.indexOf('Bar') >= 0)) {\n      if (!chart.scrollElement) {\n        chart.scrollElement = redrawElement(chart.redraw, chart.element.id + '_scrollElement') || createElement('div', {\n          id: chart.element.id + '_scrollElement'\n        });\n      }\n      appendChildElement(false, chart.scrollElement, axis.zoomingScrollBar.render(true), true);\n    } else if (axis.zoomFactor === 1 && axis.zoomPosition === 0 && axis.zoomingScrollBar.svgObject && !axis.scrollbarSettings.enable) {\n      axis.zoomingScrollBar.destroy();\n    }\n    if (axis.zoomingScrollBar.isScrollUI) {\n      axis.zoomingScrollBar.isScrollUI = false;\n    }\n  };\n  /**\n   * To find the axis position\n   *\n   * @param {Axis} axis axis\n   * @returns {boolean} axis position\n   */\n  CartesianAxisLayoutPanel.prototype.findAxisPosition = function (axis) {\n    return axis.crossAt !== null && axis.isInside(axis.crossInAxis.visibleRange);\n  };\n  /**\n   * To render the bootom line of the columns and rows\n   *\n   * @param {Row | Column} definition definition\n   * @param {number} index index\n   * @param {boolean} isRow isRow\n   * @returns {void}\n   */\n  CartesianAxisLayoutPanel.prototype.drawBottomLine = function (definition, index, isRow) {\n    var chart = this.chart;\n    var optionsLine = {};\n    var x1;\n    var x2;\n    var y1;\n    var y2;\n    var definitionName;\n    if (isRow) {\n      definition = definition;\n      y1 = y2 = definition.computedTop + definition.computedHeight;\n      x1 = this.seriesClipRect.x;\n      x2 = x1 + this.seriesClipRect.width;\n      definitionName = 'Row';\n    } else {\n      definition = definition;\n      x1 = x2 = definition.computedLeft;\n      y1 = this.seriesClipRect.y;\n      y2 = y1 + this.seriesClipRect.height;\n      definitionName = 'Column';\n    }\n    optionsLine = {\n      'id': chart.element.id + '_AxisBottom_' + definitionName + index,\n      x1: x1,\n      y1: y1,\n      x2: x2,\n      y2: y2,\n      'stroke-width': definition.border.width,\n      'stroke': definition.border.color\n    };\n    this.htmlObject = chart.renderer.drawLine(optionsLine);\n    this.element.appendChild(this.htmlObject);\n  };\n  /**\n   * To render the axis line\n   *\n   * @param {Axis} axis axis\n   * @param {number} index index\n   * @param {number} plotX plotX\n   * @param {number} plotY plotY\n   * @param {Element} parent parent\n   * @param {Rect} rect rect\n   * @returns {void}\n   */\n  CartesianAxisLayoutPanel.prototype.drawAxisLine = function (axis, index, plotX, plotY, plotBottom, plotTop, plotLeft, plotRight, parent, rect) {\n    var chart = this.chart;\n    var optionsLine = {};\n    var element = getElement(chart.element.id + 'AxisLine_' + index);\n    var direction = element ? element.getAttribute('d') : '';\n    element = null;\n    optionsLine = {\n      'id': chart.element.id + 'AxisLine_' + index,\n      'd': 'M ' + (rect.x - plotX - plotLeft) + ' ' + (rect.y - plotY - plotTop) + ' L ' + (rect.x + rect.width + plotX + plotRight) + ' ' + (rect.y + rect.height + plotY + plotBottom),\n      'stroke-dasharray': axis.lineStyle.dashArray,\n      'stroke-width': axis.lineStyle.width,\n      'stroke': axis.lineStyle.color || chart.themeStyle.axisLine\n    };\n    this.htmlObject = chart.renderer.drawPath(optionsLine);\n    appendChildElement(chart.enableCanvas, parent, this.htmlObject, chart.redraw, true, 'x', 'y', null, direction);\n  };\n  /**\n   * To render the yAxis grid line\n   *\n   * @param {Axis} axis axis\n   * @param {number} index index\n   * @param {Element} parent parent\n   * @param {Rect} rect rect\n   * @returns {void}\n   */\n  CartesianAxisLayoutPanel.prototype.drawYAxisGridLine = function (axis, index, parent, rect) {\n    var isLogAxis = axis.valueType === 'Logarithmic';\n    var isCategoryAxis = axis.valueType.indexOf('Category') > -1;\n    var tempInterval;\n    var pointY = 0;\n    var majorGrid = '';\n    var majorTick = '';\n    var minorGridDirection;\n    var isOpposed = axis.isAxisOpposedPosition;\n    var tickSize = isOpposed ? axis.majorTickLines.height : -axis.majorTickLines.height;\n    var axisLineSize = isOpposed ? axis.lineStyle.width * 0.5 : -axis.lineStyle.width * 0.5;\n    var ticksbwtLabel = axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks' ? 0.5 : 0;\n    var scrollBarHeight = isNullOrUndefined(axis.crossesAt) ? isOpposed ? axis.scrollBarHeight : -axis.scrollBarHeight : 0;\n    var isTickInside = axis.tickPosition === 'Inside';\n    var ticks = isTickInside ? rect.x - tickSize - axisLineSize : rect.x + tickSize + axisLineSize + scrollBarHeight;\n    var length = axis.visibleLabels.length;\n    var chartThemeStyle = this.chart.themeStyle;\n    if (axis.valueType.indexOf('Category') > -1 && axis.labelPlacement === 'BetweenTicks' && length > 0) {\n      length += 1;\n    }\n    var minorGridLines = axis.minorGridLines;\n    var minorTickLines = axis.minorTickLines;\n    //Gridlines\n    for (var i = 0; i < length; i++) {\n      tempInterval = !axis.visibleLabels[i] ? axis.visibleLabels[i - 1].value + axis.visibleRange.interval - ticksbwtLabel : axis.visibleLabels[i].value - ticksbwtLabel;\n      pointY = valueToCoefficient(tempInterval, axis) * rect.height;\n      pointY = pointY * -1 + (rect.y + rect.height);\n      if (pointY >= rect.y && rect.y + rect.height >= pointY) {\n        if (inside(tempInterval, axis.visibleRange) || this.isBorder(axis, i, pointY)) {\n          majorGrid = 'M ' + this.seriesClipRect.x + ' ' + pointY + ' L ' + (this.seriesClipRect.x + this.seriesClipRect.width) + ' ' + pointY;\n          this.renderGridLine(axis, index, majorGrid, axis.majorGridLines, '_MajorGridLine_', i, this.element, chartThemeStyle.majorGridLine, axis.majorGridLines.dashArray);\n        }\n        majorTick = 'M ' + (rect.x + axisLineSize + (isTickInside ? scrollBarHeight : 0)) + ' ' + pointY + ' L ' + ticks + ' ' + pointY;\n        this.renderGridLine(axis, index, majorTick, axis.majorTickLines, '_MajorTickLine_', i, parent, chartThemeStyle.majorTickLine);\n        if ((minorGridLines.width > 0 || minorTickLines.width > 0) && axis.minorTicksPerInterval > 0) {\n          if (i === 0 && isZoomSet(axis) && !isLogAxis && !isCategoryAxis) {\n            this.renderMinorGridOnZooming(axis, tempInterval, rect, i, index, chartThemeStyle, parent);\n          }\n          minorGridDirection = this.drawAxisMinorLine(axis, tempInterval, rect, i);\n          this.renderGridLine(axis, index, minorGridDirection[0], minorGridLines, '_MinorGridLine_', i, this.element, chartThemeStyle.minorGridLine, minorGridLines.dashArray);\n          this.renderGridLine(axis, index, minorGridDirection[1], minorTickLines, '_MinorTickLine_', i, parent, chartThemeStyle.minorTickLine);\n          if (i === length - 1 && isZoomSet(axis) && isLogAxis && !isCategoryAxis) {\n            this.renderMinorGridOnZooming(axis, tempInterval + axis.visibleRange.interval, rect, i, index, chartThemeStyle, parent);\n          }\n        }\n      }\n    }\n  };\n  /**\n   * To check the border of the axis\n   *\n   * @param {Axis} axis axis\n   * @param {number} index index\n   * @param {number} value value\n   * @returns {boolean} check the border of the axis\n   */\n  CartesianAxisLayoutPanel.prototype.isBorder = function (axis, index, value) {\n    var border = this.chart.chartArea.border;\n    var rect = this.seriesClipRect;\n    var orientation = axis.orientation;\n    var start = orientation === 'Horizontal' ? rect.x : rect.y;\n    var size = orientation === 'Horizontal' ? rect.width : rect.height;\n    var startIndex = orientation === 'Horizontal' ? 0 : axis.visibleLabels.length - 1;\n    var endIndex = orientation === 'Horizontal' ? axis.visibleLabels.length - 1 : 0;\n    if (axis.plotOffset > 0) {\n      return true;\n    } else if ((value === start || value === start + size) && (border.width <= 0 || border.color === 'transparent')) {\n      return true;\n    } else if (value !== start && index === startIndex || value !== start + size && index === endIndex) {\n      return true;\n    }\n    return false;\n  };\n  /**\n   * To render the yAxis label\n   *\n   * @param {Axis} axis axis\n   * @param {number} index index\n   * @param {Element} parent parent\n   * @param {Rect} rect rect\n   * @returns {void}\n   * @private\n   */\n  CartesianAxisLayoutPanel.prototype.drawYAxisLabels = function (axis, index, parent, rect) {\n    var chart = this.chart;\n    var label;\n    var pointX = 0;\n    var pointY = 0;\n    var elementSize;\n    var labelSpace = axis.labelPadding;\n    var options;\n    var isAxisBreakLabel;\n    var isLabelInside = axis.labelPosition === 'Inside';\n    var isOpposed = axis.isAxisOpposedPosition;\n    var tickSpace = axis.labelPosition === axis.tickPosition ? axis.majorTickLines.height : 0;\n    var padding = tickSpace + labelSpace + axis.lineStyle.width * 0.5;\n    var angle = axis.angle % 360;\n    var isVerticalAngle = angle === -90 || angle === 90 || angle === 270 || angle === -270;\n    padding += isVerticalAngle ? isLabelInside ? 5 : -5 : 0;\n    padding = isOpposed ? padding : -padding;\n    var labelElement = chart.renderer.createGroup({\n      id: chart.element.id + 'AxisLabels' + index\n    });\n    var scrollBarHeight = isNullOrUndefined(axis.crossesAt) ? axis.scrollBarHeight * (isOpposed ? 1 : -1) : 0;\n    var textHeight;\n    var textPadding;\n    var maxLineWidth;\n    var pixel = 10;\n    var isInverse = axis.isAxisInverse;\n    var previousEnd = isInverse ? rect.y : rect.y + rect.height;\n    var labelPadding;\n    var intervalLength;\n    var labelHeight;\n    var yAxisLabelX;\n    var isLabelOnAxisLineLeft = !isOpposed && !isLabelInside || isOpposed && isLabelInside;\n    if (isLabelInside) {\n      labelPadding = !isLabelOnAxisLineLeft ? -padding : padding;\n    } else {\n      labelPadding = !isLabelOnAxisLineLeft ? -padding + scrollBarHeight : padding + scrollBarHeight;\n    }\n    var sizeWidth = [];\n    var breakLabelSizeWidth = [];\n    axis.visibleLabels.map(function (item) {\n      sizeWidth.push(item.size['width']);\n      breakLabelSizeWidth.push(item.breakLabelSize['width']);\n    });\n    var LabelMaxWidth = Math.max.apply(Math, sizeWidth);\n    var breakLabelMaxWidth = Math.max.apply(Math, breakLabelSizeWidth);\n    for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\n      label = axis.visibleLabels[i];\n      isAxisBreakLabel = isBreakLabel(axis.visibleLabels[i].originalText);\n      elementSize = isAxisBreakLabel ? axis.visibleLabels[i].breakLabelSize : axis.visibleLabels[i].size;\n      pointY = valueToCoefficient(axis.visibleLabels[i].value, axis) * rect.height + (chart.stockChart ? 7 : 0);\n      pointY = Math.floor(pointY * -1 + (rect.y + rect.height));\n      textHeight = elementSize.height / 8 * axis.visibleLabels[i].text.length / 2;\n      textPadding = elementSize.height / 4 * 3 + 3;\n      intervalLength = rect.height / axis.visibleLabels.length;\n      labelHeight = (axis.labelIntersectAction === 'Trim' || axis.labelIntersectAction === 'Wrap') && angle !== 0 && elementSize.width > intervalLength ? intervalLength : elementSize.width;\n      pointY = isAxisBreakLabel ? axis.labelPosition === 'Inside' ? pointY - elementSize.height / 2 - textHeight + textPadding : pointY - textHeight : axis.labelPosition === 'Inside' ? pointY + textPadding : pointY;\n      if (axis.labelPosition === 'Inside' && (i === 0 && !axis.isInversed || i === len - 1 && axis.isInversed)) {\n        if (chart.stockChart) {\n          pointY -= textPadding;\n        } else {\n          pointY -= textPadding + labelHeight / 2;\n        }\n      }\n      if (axis.majorGridLines.width > axis.majorTickLines.width) {\n        maxLineWidth = axis.majorGridLines.width;\n      } else {\n        maxLineWidth = axis.majorTickLines.width;\n      }\n      if (axis.labelStyle.textAlignment === 'Far') {\n        pointY = pointY - maxLineWidth - pixel;\n      } else if (axis.labelStyle.textAlignment === 'Near') {\n        pointY = pointY + maxLineWidth + pixel;\n      } else if (axis.labelStyle.textAlignment === 'Center') {\n        // eslint-disable-next-line no-self-assign\n        pointY = pointY;\n      }\n      // label X value adjustment (Start)\n      if (isLabelInside) {\n        yAxisLabelX = labelPadding + (angle === 0 ? elementSize.width : isAxisBreakLabel ? breakLabelMaxWidth : LabelMaxWidth) / 2;\n      } else {\n        yAxisLabelX = labelPadding - (angle === 0 ? elementSize.width : isAxisBreakLabel ? breakLabelMaxWidth : LabelMaxWidth) / 2;\n      }\n      pointX = isOpposed ? rect.x - yAxisLabelX : rect.x + yAxisLabelX;\n      if (isVerticalAngle) {\n        pointX += isOpposed ? -10 : 10;\n      }\n      yAxisLabelX = labelPadding;\n      options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY, 'middle', label.text, '', 'middle');\n      switch (axis.edgeLabelPlacement) {\n        case 'None':\n          break;\n        case 'Hide':\n          if ((i === 0 || isInverse && i === len - 1) && options.y > rect.y || (i === len - 1 || isInverse && i === 0) && options.y - elementSize.height * 0.5 < rect.y) {\n            options.text = '';\n          }\n          break;\n        case 'Shift':\n          if ((i === 0 || isInverse && i === len - 1) && options.y > rect.y) {\n            options.y = pointY = rect.y + rect.height;\n          } else if ((i === len - 1 || isInverse && i === 0) && options.y - elementSize.height * 0.5 < rect.y) {\n            options.y = pointY = rect.y + elementSize.height * 0.5;\n          }\n          break;\n      }\n      // ------- Hide Calculation (Start) -------------\n      var previousYValue = options.y;\n      var currentYValue = options.y - labelHeight;\n      if (isAxisBreakLabel) {\n        previousYValue = options.y - labelHeight / 2;\n        currentYValue = options.y + labelHeight / 2;\n      }\n      if ((angle === 90 || angle === 270) && axis.labelIntersectAction === 'Hide' && i !== 0 && (!isInverse ? previousYValue >= previousEnd : currentYValue <= previousEnd)) {\n        continue;\n      }\n      previousEnd = isInverse ? previousYValue : currentYValue;\n      // ------- Hide Calculation (End) -------------\n      options.transform = 'rotate(' + angle + ',' + pointX + ',' + pointY + ')';\n      textElement(chart.renderer, options, label.labelStyle, label.labelStyle.color || chart.themeStyle.axisLabel, labelElement, false, chart.redraw, true, true, null, null, null, null, chart.enableCanvas);\n    }\n    if (!this.chart.enableCanvas) {\n      if (!chart.delayRedraw) {\n        appendChildElement(chart.enableCanvas, parent, labelElement, chart.redraw);\n      } else if (axis.visible && axis.internalVisibility) {\n        this.createZoomingLabel(this.chart, labelElement, axis, index, rect);\n      }\n    }\n  };\n  /**\n   * To get X value based on lineBreakAlignment for Y axis line break labels only.\n   *\n   * @param {number} x text x position\n   * @param {Axis} axis y axis values\n   * @param {number} textWidth axis label width\n   * @returns {number} returns suitable axis label x position\n   */\n  CartesianAxisLayoutPanel.prototype.getAxisLabelXvalue = function (x, axis, textWidth) {\n    var anchor = axis.lineBreakAlignment;\n    var isLabelInside = axis.labelPosition === 'Inside';\n    var isOpposed = axis.isAxisOpposedPosition;\n    if (isOpposed && isLabelInside || !isOpposed && !isLabelInside) {\n      return anchor === 'Right' ? x : anchor === 'Center' ? x - textWidth / 2 : x - textWidth;\n    } else {\n      return anchor === 'Left' ? x : anchor === 'Center' ? x + textWidth / 2 : x + textWidth;\n    }\n  };\n  /**\n   * To render the yAxis label border.\n   *\n   * @param {Axis} axis axis\n   * @param {number} index index\n   * @param {Element} parent parent\n   * @param {Rect} rect rect\n   * @returns {void}\n   */\n  CartesianAxisLayoutPanel.prototype.drawYAxisBorder = function (axis, index, parent, rect) {\n    if (axis.border.width > 0) {\n      var startY = void 0;\n      var pointY = void 0;\n      var scrollBarHeight = axis.labelPosition === 'Outside' ? axis.scrollBarHeight : 0;\n      var isOpposed = axis.isAxisOpposedPosition;\n      scrollBarHeight = (isOpposed ? 1 : -1) * scrollBarHeight;\n      var gap = rect.height / axis.visibleRange.delta * (axis.valueType === 'DateTime' ? axis.dateTimeInterval : axis.visibleRange.interval);\n      var endY = void 0;\n      var length_1 = axis.maxLabelSize.width + 10 + (axis.tickPosition === axis.labelPosition ? axis.majorTickLines.height : 0);\n      var labelBorder = '';\n      var ticksbwtLabel = axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks' ? -0.5 : 0;\n      var endX = isOpposed && axis.labelPosition === 'Inside' || !isOpposed && axis.labelPosition === 'Outside' ? rect.x - length_1 + scrollBarHeight : rect.x + length_1 + scrollBarHeight;\n      for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\n        pointY = valueToCoefficient(axis.visibleLabels[i].value + ticksbwtLabel, axis);\n        pointY = (axis.isAxisInverse ? 1 - pointY : pointY) * rect.height;\n        if (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') {\n          startY = pointY * -1 + (rect.y + rect.height);\n          endY = pointY * -1 - gap + (rect.y + rect.height);\n        } else {\n          startY = pointY * -1 + gap / 2 + (rect.y + rect.height);\n          endY = pointY * -1 - gap / 2 + (rect.y + rect.height);\n        }\n        switch (axis.border.type) {\n          case 'Rectangle':\n          case 'WithoutTopBorder':\n            if (startY > rect.y + rect.height) {\n              labelBorder += 'M' + ' ' + endX + ' ' + (rect.y + rect.height) + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n            } else if (Math.floor(rect.y) > endY) {\n              labelBorder += 'M' + ' ' + (rect.x + scrollBarHeight) + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + rect.y + ' ';\n            } else {\n              labelBorder += 'M' + ' ' + (rect.x + scrollBarHeight) + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n              if (i === axis.visibleLabels.length - 1) {\n                labelBorder += 'M' + ' ' + (rect.x + scrollBarHeight) + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n              }\n            }\n            break;\n          case 'WithoutTopandBottomBorder':\n            if (!(startY > rect.y + rect.height) && !(endY < Math.floor(rect.y))) {\n              labelBorder += 'M' + ' ' + (rect.x + scrollBarHeight) + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' + 'M' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + (rect.x + scrollBarHeight) + ' ' + endY;\n            }\n            break;\n        }\n      }\n      labelBorder += axis.border.type === 'Rectangle' ? 'M' + ' ' + (rect.x + scrollBarHeight) + ' ' + rect.y + ' ' + 'L' + ' ' + (rect.x + scrollBarHeight) + ' ' + (rect.y + rect.height) + ' ' : '';\n      if (labelBorder !== '') {\n        this.createAxisBorderElement(axis, index, labelBorder, parent);\n      }\n    }\n    if (axis.multiLevelLabels.length > 0 && this.chart.multiLevelLabelModule) {\n      this.chart.multiLevelLabelModule.renderYAxisMultiLevelLabels(axis, index, parent, rect);\n    }\n  };\n  /**\n   * To render the yAxis title\n   *\n   * @param {Axis} axis axis\n   * @param {number} index index\n   * @param {Element} parent parent\n   * @param {Rect} rect rect\n   * @returns {void}\n   */\n  CartesianAxisLayoutPanel.prototype.drawYAxisTitle = function (axis, index, parent, rect) {\n    if (axis.title) {\n      var chart = this.chart;\n      var isOpposed = axis.isAxisOpposedPosition;\n      var labelRotation = isOpposed ? 90 : -90;\n      var padding = (axis.tickPosition === 'Inside' ? 0 : axis.majorTickLines.height + axis.titlePadding) + (axis.labelPosition === 'Inside' ? 0 : axis.maxLabelSize.width + axis.multiLevelLabelHeight + this.padding);\n      padding = isOpposed ? padding + axis.scrollBarHeight : -padding - axis.scrollBarHeight;\n      var x = rect.x + padding;\n      var y = rect.y + rect.height * 0.5;\n      var titleSize = axis.titleSize.height * (axis.titleCollection.length - 1);\n      var options = new TextOption(chart.element.id + '_AxisTitle_' + index, x, y - axis.labelPadding - titleSize, 'middle', axis.titleCollection, 'rotate(' + labelRotation + ',' + x + ',' + y + ')', null, labelRotation);\n      var element = textElement(chart.renderer, options, axis.titleStyle, axis.titleStyle.color || chart.themeStyle.axisTitle, parent, null, null, null, null, null, null, null, null, chart.enableCanvas);\n      element.setAttribute('aria-hidden', 'true');\n    }\n  };\n  /**\n   * xAxis grid line calculation performed here\n   *\n   * @param {Axis} axis axis\n   * @param {number} index index\n   * @param {Element} parent parent\n   * @param {Rect} rect rect\n   * @returns {void}\n   */\n  CartesianAxisLayoutPanel.prototype.drawXAxisGridLine = function (axis, index, parent, rect) {\n    var isLogAxis = axis.valueType === 'Logarithmic';\n    var isCategoryAxis = axis.valueType.indexOf('Category') > -1;\n    var tempInterval;\n    var pointX = 0;\n    var majorGrid = '';\n    var majorTick = '';\n    var minorDirection;\n    var isOpposed = axis.isAxisOpposedPosition;\n    var tickSize = isOpposed ? -axis.majorTickLines.height : axis.majorTickLines.height;\n    var axisLineSize = isOpposed ? -axis.lineStyle.width * 0.5 : axis.lineStyle.width * 0.5;\n    var scrollBarHeight = isNullOrUndefined(axis.crossesAt) ? isOpposed ? -axis.scrollBarHeight : axis.scrollBarHeight : 0;\n    var ticksbwtLabel = axis.valueType.indexOf('Category') > -1 && axis.labelPlacement === 'BetweenTicks' ? 0.5 : 0;\n    var length = axis.visibleLabels.length;\n    var isTickInside = axis.tickPosition === 'Inside';\n    var ticks = isTickInside ? rect.y - tickSize - axisLineSize : rect.y + tickSize + axisLineSize + scrollBarHeight;\n    var chartThemeStyle = this.chart.themeStyle;\n    if (axis.valueType.indexOf('Category') > -1 && length > 0 && axis.labelPlacement === 'BetweenTicks') {\n      length += 1;\n    }\n    //Gridlines\n    for (var i = 0; i < length; i++) {\n      if (axis.valueType !== 'DateTimeCategory') {\n        tempInterval = axis.visibleLabels[i] ? axis.visibleLabels[i].value - ticksbwtLabel : axis.visibleLabels[i - 1].value + axis.visibleRange.interval - ticksbwtLabel;\n      } else {\n        tempInterval = axis.visibleLabels[i] ? axis.visibleLabels[i].value - ticksbwtLabel : axis.visibleRange.max;\n      }\n      pointX = valueToCoefficient(tempInterval, axis) * rect.width + rect.x;\n      if (pointX >= rect.x && rect.x + rect.width >= pointX) {\n        if (inside(tempInterval, axis.visibleRange) || this.isBorder(axis, i, pointX)) {\n          majorGrid = 'M ' + pointX + ' ' + (this.seriesClipRect.y + this.seriesClipRect.height) + ' L ' + pointX + ' ' + this.seriesClipRect.y;\n          this.renderGridLine(axis, index, majorGrid, axis.majorGridLines, '_MajorGridLine_', i, this.element, chartThemeStyle.majorGridLine, axis.majorGridLines.dashArray);\n        }\n        majorTick = 'M ' + pointX + ' ' + (rect.y + axisLineSize + (isTickInside ? scrollBarHeight : 0)) + ' L ' + pointX + ' ' + ticks;\n        this.renderGridLine(axis, index, majorTick, axis.majorTickLines, '_MajorTickLine_', i, parent, chartThemeStyle.majorTickLine);\n        if (axis.minorTicksPerInterval > 0 && (axis.minorGridLines.width > 0 || axis.minorTickLines.width > 0)) {\n          if (i === 0 && isZoomSet(axis) && !isLogAxis && !isCategoryAxis) {\n            this.renderMinorGridOnZooming(axis, tempInterval, rect, i, index, chartThemeStyle, parent);\n          }\n          minorDirection = this.drawAxisMinorLine(axis, tempInterval, rect, i);\n          this.renderGridLine(axis, index, minorDirection[0], axis.minorGridLines, '_MinorGridLine_', i, this.element, chartThemeStyle.minorGridLine, axis.minorGridLines.dashArray);\n          this.renderGridLine(axis, index, minorDirection[1], axis.minorTickLines, '_MinorTickLine_', i, parent, chartThemeStyle.minorTickLine);\n          if (i === length - 1 && isZoomSet(axis) && isLogAxis && !isCategoryAxis) {\n            this.renderMinorGridOnZooming(axis, tempInterval + axis.visibleRange.interval, rect, i, index, chartThemeStyle, parent);\n          }\n        }\n      }\n    }\n  };\n  /**\n   * To render missing minor grid lines while zooming\n   *\n   * @param {Axis} axis axis\n   * @param {number} tempInterval tempInterval\n   * @param {Rect} rect rect\n   * @param {number} i i\n   * @param {number} index index\n   * @param {IThemeStyle} chartThemeStyle chartThemeStyle\n   * @param {Element} parent parent\n   * @returns {void}\n   */\n  CartesianAxisLayoutPanel.prototype.renderMinorGridOnZooming = function (axis, tempInterval, rect, i, index, chartThemeStyle, parent) {\n    var minorDirection = this.drawAxisMinorLine(axis, tempInterval, rect, i, true);\n    this.renderGridLine(axis, index, minorDirection[0], axis.minorGridLines, '_MinorGridLine_', -1, this.element, chartThemeStyle.minorGridLine, axis.minorGridLines.dashArray);\n    this.renderGridLine(axis, index, minorDirection[1], axis.minorTickLines, '_MinorTickLine_', -1, parent, chartThemeStyle.minorTickLine);\n  };\n  /**\n   * To calcualte the axis minor line\n   *\n   * @param {Axis} axis axis\n   * @param {number} tempInterval tempInterval\n   * @param {Rect} rect rect\n   * @param {number} labelIndex labelIndex\n   * @param {boolean} isFirstLabel isFirstLabel\n   * @returns {string[]} axis minor line path\n   */\n  CartesianAxisLayoutPanel.prototype.drawAxisMinorLine = function (axis, tempInterval, rect, labelIndex, isFirstLabel) {\n    var value = tempInterval;\n    var coor = 0;\n    var position = 0;\n    var range = axis.visibleRange;\n    var isTickInside = axis.tickPosition === 'Inside';\n    var direction = [];\n    var tickSize = axis.isAxisOpposedPosition ? -axis.minorTickLines.height : axis.minorTickLines.height;\n    var logStart;\n    var logEnd;\n    var logInterval = 1;\n    var logPosition = 1;\n    var ticksX = isTickInside ? rect.y - tickSize : rect.y + tickSize;\n    var ticksY = isTickInside ? rect.x + tickSize : rect.x - tickSize;\n    var minorGird = '';\n    var minorTick = '';\n    var isInverse = axis.isAxisInverse;\n    if (axis.valueType === 'Logarithmic') {\n      logStart = Math.pow(axis.logBase, value - range.interval);\n      logEnd = Math.pow(axis.logBase, value);\n      logInterval = (logEnd - logStart) / (axis.minorTicksPerInterval + 1);\n      logPosition = logStart + logInterval;\n    }\n    if (axis.orientation === 'Horizontal') {\n      for (var j = 0; j < axis.minorTicksPerInterval; j++) {\n        value = this.findLogNumeric(axis, logPosition, value, labelIndex, isFirstLabel);\n        logPosition += logInterval;\n        if (inside(value, range)) {\n          position = (value - range.min) / (range.max - range.min);\n          position = Math.ceil((isInverse ? 1 - position : position) * rect.width);\n          coor = Math.floor(position + rect.x);\n          minorGird = minorGird.concat('M' + ' ' + coor + ' ' + this.seriesClipRect.y + 'L ' + coor + ' ' + (this.seriesClipRect.y + this.seriesClipRect.height));\n          coor = Math.floor(position + rect.x);\n          minorTick = minorTick.concat('M' + ' ' + coor + ' ' + rect.y + 'L ' + coor + ' ' + (ticksX + axis.scrollBarHeight));\n        }\n      }\n    } else {\n      for (var j = 0; j < axis.minorTicksPerInterval; j++) {\n        value = this.findLogNumeric(axis, logPosition, value, labelIndex, isFirstLabel);\n        if (inside(value, range)) {\n          position = (value - range.min) / (range.max - range.min);\n          position = Math.ceil((isInverse ? 1 - position : position) * rect.height) * -1; // For inversed axis\n          coor = Math.floor(position + rect.y + rect.height);\n          minorGird = minorGird.concat('M' + ' ' + this.seriesClipRect.x + ' ' + coor + 'L ' + (this.seriesClipRect.x + this.seriesClipRect.width) + ' ' + coor + ' ');\n          coor = Math.floor(position + rect.y + rect.height);\n          minorTick = minorTick.concat('M' + ' ' + rect.x + ' ' + coor + 'L ' + (ticksY - axis.scrollBarHeight) + ' ' + coor + ' ');\n        }\n        logPosition += logInterval;\n      }\n    }\n    direction.push(minorGird);\n    direction.push(minorTick);\n    return direction;\n  };\n  /**\n   * To find the numeric value of the log\n   *\n   * @param {Axis} axis axis\n   * @param {number} logPosition logPosition\n   * @param {number} value value\n   * @param {number} labelIndex labelIndex\n   * @param {boolean} isFirstLabel isFirstLabel\n   * @returns {number} value\n   */\n  CartesianAxisLayoutPanel.prototype.findLogNumeric = function (axis, logPosition, value, labelIndex, isFirstLabel) {\n    var range = axis.visibleRange;\n    var tempValue;\n    if (axis.valueType === 'Logarithmic') {\n      value = logBase(logPosition, axis.logBase);\n    } else if (axis.valueType === 'DateTime') {\n      tempValue = axis.dateTimeInterval / (axis.minorTicksPerInterval + 1);\n      value = isFirstLabel ? value - tempValue : value + tempValue;\n    } else if (axis.valueType === 'DateTimeCategory') {\n      var padding = axis.labelPlacement === 'BetweenTicks' ? 0.5 : 0;\n      value += ((axis.visibleLabels[labelIndex + 1] ? axis.visibleLabels[labelIndex + 1].value - padding : axis.visibleRange.max) - (axis.visibleLabels[labelIndex] ? axis.visibleLabels[labelIndex].value - padding : axis.visibleRange.min)) / (axis.minorTicksPerInterval + 1);\n    } else {\n      tempValue = range.interval / (axis.minorTicksPerInterval + 1);\n      value = isFirstLabel ? value - tempValue : value + tempValue;\n    }\n    return value;\n  };\n  /**\n   * To render the xAxis Labels\n   *\n   * @param {Axis} axis axis\n   * @param {number} index index\n   * @param {Element} parent parent\n   * @param {Rect} rect rect\n   * @returns {void}\n   * @private\n   */\n  CartesianAxisLayoutPanel.prototype.drawXAxisLabels = function (axis, index, parent, rect) {\n    var chart = this.chart;\n    var pointX = 0;\n    var pointY = 0;\n    var labelSpace = axis.labelPadding;\n    var labelHeight;\n    var elementSize;\n    var labelPadding;\n    var anchor;\n    var pixel = 10;\n    var labelElement = chart.renderer.createGroup({\n      id: chart.element.id + 'AxisLabels' + index\n    });\n    var islabelInside = axis.labelPosition === 'Inside';\n    var isOpposed = axis.isAxisOpposedPosition;\n    var tickSpace = axis.labelPosition === axis.tickPosition ? axis.majorTickLines.height : 0;\n    var padding = tickSpace + labelSpace + axis.lineStyle.width * 0.5;\n    var angle = axis.angle % 360;\n    var isHorizontalAngle = angle === 0 || angle === -180 || angle === 180;\n    var options;\n    var labelWidth;\n    var isInverse = axis.isAxisInverse;\n    var previousEnd = isInverse ? rect.x + rect.width : rect.x;\n    var width = 0;\n    var length = axis.visibleLabels.length;\n    var intervalLength;\n    var label;\n    var isAxisBreakLabel;\n    var scrollBarHeight = axis.scrollbarSettings.enable || !islabelInside && isNullOrUndefined(axis.crossesAt) && (axis.zoomFactor < 1 || axis.zoomPosition > 0) ? axis.scrollBarHeight : 0;\n    var newPoints = [];\n    var isRotatedLabelIntersect = false;\n    padding += angle === 90 || angle === 270 || angle === -90 || angle === -270 ? islabelInside ? 5 : -5 : 0;\n    var isLabelUnderAxisLine = !isOpposed && !islabelInside || isOpposed && islabelInside;\n    var isEndAnchor = isLabelUnderAxisLine ? 360 >= angle && angle >= 180 || -1 >= angle && angle >= -180 : 1 <= angle && angle <= 180 || -181 >= angle && angle >= -360;\n    for (var i = 0, len = length; i < len; i++) {\n      label = axis.visibleLabels[i];\n      isAxisBreakLabel = isBreakLabel(label.originalText);\n      pointX = valueToCoefficient(label.value, axis) * rect.width + rect.x;\n      elementSize = label.size;\n      intervalLength = rect.width / length;\n      labelWidth = isAxisBreakLabel ? label.breakLabelSize.width : elementSize.width;\n      width = (axis.labelIntersectAction === 'Trim' || axis.labelIntersectAction === 'Wrap') && angle === 0 && labelWidth > intervalLength ? intervalLength : labelWidth;\n      labelHeight = elementSize.height / 4;\n      pointX -= isAxisBreakLabel || angle !== 0 ? 0 : width / 2;\n      // label X value adjustment for label rotation (Start)\n      if (angle !== 0) {\n        if (isAxisBreakLabel) {\n          pointX -= axis.lineBreakAlignment === 'Left' ? label.breakLabelSize.width / 2 : axis.lineBreakAlignment === 'Right' ? -(label.breakLabelSize.width / 2) : 0;\n        } else {\n          pointX -= angle === -90 || angle === 270 ? -labelHeight : angle === 90 || angle === -270 ? labelHeight : 0;\n        }\n      }\n      // label X value adjustment for label rotation (End)\n      if (axis.labelStyle.textAlignment === 'Far') {\n        pointX = pointX + width - pixel;\n      } else if (axis.labelStyle.textAlignment === 'Near') {\n        pointX = pointX - width + pixel;\n      } else if (axis.labelStyle.textAlignment === 'Center') {\n        // eslint-disable-next-line no-self-assign\n        pointX = pointX;\n      }\n      // For line break label alignment like left, right & center in angle 0\n      if (isAxisBreakLabel && axis.lineBreakAlignment !== 'Center' && angle === 0) {\n        pointX += axis.lineBreakAlignment === 'Left' ? -(width / 2) : width / 2;\n      }\n      var paddingForBreakLabel = isAxisBreakLabel ? isHorizontalAngle ? elementSize.height : label.breakLabelSize.width / 2 : 0;\n      padding = isAxisBreakLabel ? tickSpace + labelSpace + axis.lineStyle.width * 0.5 : padding;\n      // label Y value adjustment (Start)\n      if (islabelInside && angle) {\n        if (isAxisBreakLabel) {\n          pointY = isOpposed ? rect.y + padding + paddingForBreakLabel : rect.y - padding - paddingForBreakLabel;\n        } else {\n          pointY = isOpposed ? rect.y + padding + labelHeight : rect.y - padding - labelHeight;\n        }\n      } else {\n        if (isAxisBreakLabel) {\n          labelPadding = !isLabelUnderAxisLine ? -(padding + scrollBarHeight + paddingForBreakLabel) : padding + scrollBarHeight + (angle ? paddingForBreakLabel : 3 * labelHeight);\n        } else {\n          labelPadding = !isLabelUnderAxisLine ? -(padding + scrollBarHeight + (angle ? labelHeight : label.index > 1 ? 2 * labelHeight : 0)) : padding + scrollBarHeight + (angle ? 1 : 3) * labelHeight;\n        }\n        pointY = rect.y + labelPadding * label.index;\n      }\n      // label Y value adjustment (End)\n      if (isAxisBreakLabel) {\n        anchor = this.getAnchor(axis); // for break label self alignment\n      } else {\n        anchor = chart.enableRtl ? isEndAnchor ? '' : 'end' : chart.isRtlEnabled || isEndAnchor ? 'end' : '';\n      }\n      options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY, anchor);\n      if (axis.edgeLabelPlacement) {\n        switch (axis.edgeLabelPlacement) {\n          case 'None':\n            break;\n          case 'Hide':\n            if ((i === 0 || isInverse && i === len - 1) && options.x < rect.x || (i === len - 1 || isInverse && i === 0) && options.x + width > rect.x + rect.width) {\n              continue;\n            }\n            break;\n          case 'Shift':\n            if ((i === 0 || isInverse && i === len - 1) && options.x < rect.x) {\n              intervalLength -= rect.x - options.x;\n              options.x = pointX = !isHorizontalAngle ? rect.x + padding : rect.x;\n            } else if ((i === len - 1 || isInverse && i === 0) && options.x + width > rect.x + rect.width) {\n              if (elementSize.width > intervalLength && axis.labelIntersectAction === 'Trim') {\n                intervalLength -= options.x + width - (rect.x + rect.width);\n              } else {\n                intervalLength = width;\n              }\n              options.x = pointX = !isHorizontalAngle ? rect.x + rect.width - intervalLength / 2 : rect.x + rect.width - intervalLength;\n            }\n            if (this.chart.primaryYAxis.opposedPosition && i === 0 && options.x <= rect.x) {\n              intervalLength -= rect.x - options.x;\n              options.x += rect.x + width / 2;\n              pointX += rect.x + width / 2;\n            }\n            break;\n        }\n      }\n      options.text = this.getLabelText(label, axis, intervalLength);\n      // ------- Hide Calculation (Start) -------------\n      // Currect label actual start value (Start)\n      var xValue = void 0;\n      var xValue2 = void 0;\n      if (isAxisBreakLabel && angle === 0) {\n        if (axis.lineBreakAlignment === 'Right') {\n          xValue = options.x - width;\n          xValue2 = options.x;\n        } else if (axis.lineBreakAlignment === 'Center') {\n          xValue = options.x - width / 2;\n          xValue2 = options.x + width / 2;\n        } else {\n          xValue = options.x;\n          xValue2 = options.x + width;\n        }\n      } else {\n        xValue = options.x;\n        xValue2 = options.x + width;\n      }\n      // Currect label actual start value (End)\n      if (angle === 0 && axis.labelIntersectAction === 'Hide' && i !== 0 && (!isInverse ? xValue <= previousEnd : xValue2 >= previousEnd)) {\n        continue;\n      }\n      // Previous label actual end value (Start)\n      if (isAxisBreakLabel) {\n        if (axis.lineBreakAlignment === 'Right') {\n          previousEnd = isInverse ? options.x - width : options.x;\n        } else if (axis.lineBreakAlignment === 'Center') {\n          previousEnd = isInverse ? options.x - width / 2 : options.x + width / 2;\n        } else {\n          previousEnd = isInverse ? options.x : options.x + width;\n        }\n      } else {\n        previousEnd = isInverse ? options.x : options.x + width;\n      }\n      // Previous label actual end value (End)\n      // ------- Hide Calculation (End) -------------\n      // label Rotataion calculation (Start)\n      if (angle !== 0) {\n        var height = void 0;\n        var rect_1 = void 0;\n        if (isAxisBreakLabel) {\n          var xAdjustment = 0;\n          var yAdjustment = 0;\n          height = label.breakLabelSize.height;\n          yAdjustment = label.breakLabelSize.height - 4; // 4 for label bound correction\n          // xAdjustment (Start)\n          if (axis.lineBreakAlignment === 'Center') {\n            xAdjustment = -(label.breakLabelSize.width / 2);\n          } else if (axis.lineBreakAlignment === 'Right') {\n            xAdjustment = -label.breakLabelSize.width;\n          }\n          // xAdjustment (End)\n          if (isLabelUnderAxisLine) {\n            yAdjustment = label.breakLabelSize.height / (options.text.length + 1);\n          }\n          rect_1 = new Rect(options.x + xAdjustment, options.y - yAdjustment, label.breakLabelSize.width, height);\n        } else {\n          height = pointY - (options.y - (label.size.height / 2 + 10));\n          rect_1 = new Rect(options.x, options.y - (label.size.height / 2 - 5), label.size.width, height);\n        }\n        var rectCoordinates = this.getRectanglePoints(rect_1);\n        var rectCenterX = isAxisBreakLabel ? rect_1.x + rect_1.width / 2 : pointX;\n        var rectCenterY = isAxisBreakLabel ? rect_1.y + rect_1.height / 2 : pointY - height / 2;\n        if (isAxisBreakLabel) {\n          options.transform = 'rotate(' + angle + ',' + rectCenterX + ',' + rectCenterY + ')';\n        } else {\n          options.transform = 'rotate(' + angle + ',' + pointX + ',' + pointY + ')';\n        }\n        newPoints.push(getRotatedRectangleCoordinates(rectCoordinates, rectCenterX, rectCenterY, angle));\n        isRotatedLabelIntersect = false;\n        if (axis.labelIntersectAction !== 'None') {\n          for (var index_1 = i; index_1 > 0; index_1--) {\n            if (newPoints[i] && newPoints[index_1 - 1] && isRotatedRectIntersect(newPoints[i], newPoints[index_1 - 1])) {\n              isRotatedLabelIntersect = true;\n              newPoints[i] = null;\n              break;\n            }\n          }\n        }\n      }\n      // label Rotataion calculation (End)\n      textElement(chart.renderer, options, label.labelStyle, label.labelStyle.color || chart.themeStyle.axisLabel, labelElement, axis.isAxisOpposedPosition !== (axis.labelPosition === 'Inside'), chart.redraw, true, null, null, null, label.size, isRotatedLabelIntersect, chart.enableCanvas);\n    }\n    if (!this.chart.enableCanvas) {\n      if (!chart.delayRedraw) {\n        parent.appendChild(labelElement);\n      } else if (axis.visible && axis.internalVisibility) {\n        this.createZoomingLabel(this.chart, labelElement, axis, index, rect);\n      }\n    }\n  };\n  /**\n   * To get text anchor value for line break labels.\n   *\n   * @param {Axis} axis axis model\n   * @returns {string} returns text anchor\n   */\n  CartesianAxisLayoutPanel.prototype.getAnchor = function (axis) {\n    return axis.lineBreakAlignment === 'Center' ? 'middle' : this.chart.enableRtl ? axis.lineBreakAlignment === 'Left' ? 'end' : 'start' : axis.lineBreakAlignment === 'Left' ? 'start' : 'end';\n  };\n  /**\n   * Get rect coordinates\n   *\n   * @param {Rect} rect rect\n   * @returns {ChartLocation[]} rectangle points\n   */\n  CartesianAxisLayoutPanel.prototype.getRectanglePoints = function (rect) {\n    var point1 = new ChartLocation(rect.x, rect.y);\n    var point2 = new ChartLocation(rect.x + rect.width, rect.y);\n    var point3 = new ChartLocation(rect.x + rect.width, rect.y + rect.height);\n    var point4 = new ChartLocation(rect.x, rect.y + rect.height);\n    return [point1, point2, point3, point4];\n  };\n  /**\n   * To get axis label text\n   *\n   * @param {VisibleLabels} label label\n   * @param {Axis} axis axis\n   * @param {number} intervalLength intervalLength\n   * @returns {string | string[]} label or label collection\n   */\n  CartesianAxisLayoutPanel.prototype.getLabelText = function (label, axis, intervalLength) {\n    if (isBreakLabel(label.originalText)) {\n      var result = [];\n      var str = void 0;\n      for (var index = 0; index < label.text.length; index++) {\n        str = this.findAxisLabel(axis, label.text[index], intervalLength);\n        result.push(str);\n      }\n      return result;\n    } else {\n      return this.findAxisLabel(axis, label.text, intervalLength);\n    }\n  };\n  /**\n   * To render the x-axis label border.\n   *\n   * @param {Axis} axis axis\n   * @param {number} index index\n   * @param {Element} parent parent\n   * @param {Rect} axisRect axisRect\n   * @returns {void}\n   */\n  CartesianAxisLayoutPanel.prototype.drawXAxisBorder = function (axis, index, parent, axisRect) {\n    if (axis.border.width > 0) {\n      var scrollBarHeight = axis.labelPosition === 'Outside' ? axis.scrollBarHeight : 0;\n      var isOpposed = axis.isAxisOpposedPosition;\n      var startX = void 0;\n      var startY = axisRect.y + (isOpposed ? -1 : 1) * scrollBarHeight;\n      var padding = 10;\n      var pointX = void 0;\n      var gap = axisRect.width / axis.visibleRange.delta * (axis.valueType === 'DateTime' ? axis.dateTimeInterval : axis.visibleRange.interval);\n      var endX = void 0;\n      var length_2 = axis.maxLabelSize.height + (axis.tickPosition === axis.labelPosition ? axis.majorTickLines.height : 0);\n      var labelBorder = '';\n      var ticksbwtLabel = axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks' ? -0.5 : 0;\n      var endY = isOpposed && axis.labelPosition === 'Inside' || !isOpposed && axis.labelPosition === 'Outside' ? axisRect.y + length_2 + padding + scrollBarHeight : axisRect.y - length_2 - padding - scrollBarHeight;\n      for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\n        pointX = valueToCoefficient(axis.visibleLabels[i].value + ticksbwtLabel, axis);\n        pointX = (axis.isAxisInverse ? 1 - pointX : pointX) * axisRect.width;\n        if (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') {\n          startX = pointX + axisRect.x;\n          endX = pointX + gap + axisRect.x;\n        } else {\n          startX = pointX - gap * 0.5 + axisRect.x;\n          endX = pointX + gap * 0.5 + axisRect.x;\n        }\n        switch (axis.border.type) {\n          case 'Rectangle':\n          case 'WithoutTopBorder':\n            if (startX < axisRect.x && axis.labelPlacement != \"OnTicks\") {\n              labelBorder += 'M' + ' ' + axisRect.x + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n            } else if (Math.floor(endX) > axisRect.width + axisRect.x && !(axis.visibleLabels.length === 1) && !(i === axis.visibleLabels.length - 1)) {\n              labelBorder += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + (axisRect.width + axisRect.x) + ' ' + endY + ' ';\n            } else {\n              startX = i === 0 && axis.labelPlacement == \"OnTicks\" ? axisRect.x : startX;\n              endX = i === axis.visibleLabels.length - 1 && axis.labelPlacement == \"OnTicks\" ? endX - gap * 0.5 : endX;\n              labelBorder += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n              if (i === 0) {\n                labelBorder += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' + 'M ' + startX + ' ' + endY + ' L ' + axisRect.x + ' ' + endY;\n              }\n              if (i === axis.visibleLabels.length - 1) {\n                labelBorder += 'M' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ' + 'M ' + endX + ' ' + endY + ' L ' + (axisRect.width + axisRect.x) + ' ' + endY;\n              }\n            }\n            break;\n          case 'WithoutTopandBottomBorder':\n            if (!(startX < axisRect.x) && !(Math.floor(endX) > axisRect.width + axisRect.x)) {\n              labelBorder += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' + 'M ' + endX + ' ' + startY + ' L ' + endX + ' ' + endY;\n            }\n            break;\n        }\n      }\n      labelBorder += axis.border.type === 'Rectangle' ? 'M ' + ' ' + axisRect.x + ' ' + startY + 'L' + ' ' + (axisRect.x + axisRect.width) + ' ' + startY : '';\n      if (labelBorder !== '') {\n        this.createAxisBorderElement(axis, index, labelBorder, parent);\n      }\n    }\n    if (this.chart.multiLevelLabelModule && axis.multiLevelLabels.length > 0) {\n      this.chart.multiLevelLabelModule.renderXAxisMultiLevelLabels(axis, index, parent, axisRect);\n    }\n  };\n  /**\n   * To create border element of the axis\n   *\n   * @param {Axis} axis axis\n   * @param {number} index index\n   * @param {string} labelBorder labelBorder\n   * @param {Element} parent parent\n   * @returns {void}\n   */\n  CartesianAxisLayoutPanel.prototype.createAxisBorderElement = function (axis, index, labelBorder, parent) {\n    var element = getElement(this.chart.element.id + '_BorderLine_' + index);\n    var direction = element ? element.getAttribute('d') : '';\n    var borderElement = this.chart.renderer.drawPath(new PathOption(this.chart.element.id + '_BorderLine_' + index, 'transparent', axis.border.width, axis.border.color || this.chart.themeStyle.axisLine, 1, '', labelBorder));\n    borderElement.style.pointerEvents = 'none';\n    appendChildElement(this.chart.enableCanvas, parent, borderElement, this.chart.redraw, false, 'x', 'y', null, direction, true);\n  };\n  /**\n   * To find the axis label of the intersect action\n   *\n   * @param {Axis} axis axis\n   * @param {string} label label\n   * @param {number} width width\n   * @returns {string} label\n   */\n  CartesianAxisLayoutPanel.prototype.findAxisLabel = function (axis, label, width) {\n    return axis.labelIntersectAction === 'Trim' ? axis.angle % 360 === 0 && !axis.enableTrim ? textTrim(width, label, axis.labelStyle) : label : label;\n  };\n  /**\n   * X-Axis Title function performed\n   *\n   * @param {Axis} axis axis\n   * @param {number} index index\n   * @param {Element} parent parent\n   * @param {Rect} rect rect\n   * @returns {void}\n   */\n  CartesianAxisLayoutPanel.prototype.drawXAxisTitle = function (axis, index, parent, rect) {\n    if (axis.title) {\n      var chart = this.chart;\n      var elementSize = measureText(axis.title, axis.titleStyle);\n      var scrollBarHeight = isNullOrUndefined(axis.crossesAt) ? axis.scrollBarHeight : 0;\n      var padding = (axis.tickPosition === 'Inside' ? 0 : axis.majorTickLines.height + axis.titlePadding) + (axis.labelPosition === 'Inside' ? 0 : axis.maxLabelSize.height + axis.multiLevelLabelHeight + axis.labelPadding);\n      var titleSize = axis.titleSize.height * (axis.titleCollection.length - 1);\n      padding = axis.isAxisOpposedPosition ? -(padding + elementSize.height / 4 + scrollBarHeight + titleSize) : padding + 3 * elementSize.height / 4 + scrollBarHeight;\n      var options = new TextOption(chart.element.id + '_AxisTitle_' + index, rect.x + rect.width * 0.5, rect.y + padding, 'middle', axis.titleCollection);\n      var element = textElement(chart.renderer, options, axis.titleStyle, axis.titleStyle.color || chart.themeStyle.axisTitle, parent, null, null, null, null, null, null, null, null, chart.enableCanvas);\n      element.setAttribute('aria-hidden', 'true');\n    }\n  };\n  /**\n   * To render the axis grid and tick lines(Both Major and Minor)\n   *\n   * @param {Axis} axis axis\n   * @param {number} index index\n   * @param {string} gridDirection gridDirection\n   * @param {MajorTickLinesModel | MinorTickLinesModel | MajorGridLinesModel | MinorGridLinesModel} gridModel gridModel\n   * @param {string} gridId gridId\n   * @param {number} gridIndex gridIndex\n   * @param {Element} parent parent\n   * @param {string} themeColor themeColor\n   * @param {string} dashArray dashArray\n   * @returns {void}\n   */\n  CartesianAxisLayoutPanel.prototype.renderGridLine = function (axis, index, gridDirection, gridModel, gridId, gridIndex, parent, themeColor, dashArray) {\n    if (dashArray === void 0) {\n      dashArray = null;\n    }\n    var chart = this.chart;\n    var direction;\n    var element;\n    if (gridModel.width > 0 && axis.visible && axis.internalVisibility && gridDirection) {\n      element = getElement(chart.element.id + gridId + index + '_' + gridIndex);\n      direction = element ? element.getAttribute('d') : null;\n      element = null;\n      this.htmlObject = chart.renderer.drawPath(new PathOption(chart.element.id + gridId + index + '_' + gridIndex, 'transparent', gridModel.width, gridModel.color || themeColor, null, dashArray, gridDirection));\n      appendChildElement(chart.enableCanvas, parent, this.htmlObject, chart.redraw, true, 'x', 'y', null, direction, true);\n    }\n  };\n  /**\n   * To Find the parent node of the axis\n   *\n   * @param {string} elementId elementId\n   * @param {Element} label label\n   * @param {number} index index\n   * @returns {Element} parent node of the axis\n   */\n  CartesianAxisLayoutPanel.prototype.findParentNode = function (elementId, label, index) {\n    if (document.getElementById(elementId + 'AxisGroup' + index + 'Inside').contains(document.getElementById(label.id))) {\n      return document.getElementById(elementId + 'AxisGroup' + index + 'Inside');\n    } else {\n      return document.getElementById(elementId + 'AxisGroup' + index + 'Outside');\n    }\n  };\n  /**\n   * Create Zooming Labels Function Called here\n   *\n   * @param {Chart} chart chart\n   * @param {Element} labelElement labelElement\n   * @param {Axis} axis axis\n   * @param {number} index index\n   * @param {Rect} rect rect\n   * @returns {void}\n   */\n  CartesianAxisLayoutPanel.prototype.createZoomingLabel = function (chart, labelElement, axis, index, rect) {\n    var parentNode = this.findParentNode(chart.element.id, labelElement, index);\n    labelElement.setAttribute('opacity', '0.3');\n    var zoomElement = chart.renderer.createGroup({\n      id: chart.element.id + 'AxisLabels_Zoom' + index\n    });\n    zoomElement = createZoomingLabels(chart, axis, zoomElement, index, axis.orientation === 'Vertical', rect);\n    parentNode.replaceChild(labelElement, document.getElementById(labelElement.id));\n    if (getElement(chart.element.id + 'AxisLabels_Zoom' + index)) {\n      parentNode.replaceChild(zoomElement, document.getElementById(zoomElement.id));\n    } else {\n      parentNode.appendChild(zoomElement);\n    }\n  };\n  return CartesianAxisLayoutPanel;\n}();\nexport { CartesianAxisLayoutPanel };","map":{"version":3,"names":["createElement","isNullOrUndefined","DataUtil","subtractThickness","valueToCoefficient","sum","redrawElement","isBreakLabel","ChartLocation","subArray","inside","appendChildElement","stringToNumber","Thickness","logBase","createZoomingLabels","getElement","Size","Rect","measureText","TextOption","PathOption","textElement","textTrim","getRotatedRectangleCoordinates","isRotatedRectIntersect","isZoomSet","axisPadding","CartesianAxisLayoutPanel","chartModule","chart","padding","prototype","measureAxis","rect","chartAreaWidth","chartArea","width","availableSize","crossAt","seriesClipRect","x","y","height","initialClipRect","leftSize","rightSize","topSize","bottomSize","measureRowAxis","measureColumnAxis","delayRedraw","calculateAxisSize","calculateFixedChartArea","refreshAxis","margin","right","legendSettings","position","legendModule","legendBounds","_i","_a","rows","length","item","farSizes","row","calculateRowSize","nearSizes","insideNearSizes","insideFarSizes","arrangeAxis","measureDefinition","computedHeight","column","calculateColumnSize","columns","computedWidth","definition","size","ele","axes","axis","scrollBarHeight","scrollBarModule","zoomModule","zoomSettings","enableScrollbar","enableScrollbarOnZooming","isZoomed","zoomFactor","zoomPosition","scrollbarSettings","enable","getModule","baseModule","calculateRangeAndInterval","computeSize","nearCount","farCount","axisOffset","i","len","j","len_1","plotOffset","k","len_2","span","computedTop","plotOffsetTop","getAxisOffsetValue","plotOffsetBottom","isAxisOpposedPosition","labelPosition","orientation","len_3","len_4","computedLeft","plotOffsetLeft","plotOffsetRight","measure","actualIndex","axisCollections","verticalAxes","push","getActualRow","pushAxis","horizontalAxes","getActualColumn","isRTLEnabled","enableRtl","setIsInversedAndOpposedPosition","position1","position2","rangeOffset","crossesAt","crossesInAxis","requireInvertedAxis","crossInAxis","primaryXAxis","primaryYAxis","updateCrossAt","name","valueType","option","skeleton","type","dateParser","intl","getDateParser","dateFormatter","getDateFormat","Date","parse","parseJson","val","parseFloat","labels","indexOf","axisCollection","actualLength","pos","columnIndex","result","rowIndex","rowTop","remainingHeight","Math","max","min","parseInt","columnLeft","remainingWidth","renderAxes","axisElement","renderer","createGroup","id","element","axisLineElement","setAttribute","outsideElement","isInside","axisVisibility","series","yAxisName","xAxisName","visible","findAxisPosition","updateCrossValue","internalVisibility","lineStyle","drawAxisLine","updatedRect","majorGridLines","majorTickLines","drawXAxisGridLine","tickPosition","drawXAxisLabels","placeNextToAxisLine","drawXAxisBorder","drawXAxisTitle","drawYAxisGridLine","drawYAxisLabels","drawYAxisBorder","drawYAxisTitle","enableCanvas","appendChild","childNodes","renderScrollbar","border","color","drawBottomLine","svgObject","redraw","zoomingScrollBar","isScrollUI","visibleSeries","scrollElement","render","destroy","visibleRange","index","isRow","optionsLine","x1","x2","y1","y2","definitionName","htmlObject","drawLine","plotX","plotY","plotBottom","plotTop","plotLeft","plotRight","parent","direction","getAttribute","dashArray","themeStyle","axisLine","drawPath","isLogAxis","isCategoryAxis","tempInterval","pointY","majorGrid","majorTick","minorGridDirection","isOpposed","tickSize","axisLineSize","ticksbwtLabel","labelPlacement","isTickInside","ticks","visibleLabels","chartThemeStyle","minorGridLines","minorTickLines","value","interval","isBorder","renderGridLine","majorGridLine","majorTickLine","minorTicksPerInterval","renderMinorGridOnZooming","drawAxisMinorLine","minorGridLine","minorTickLine","start","startIndex","endIndex","label","pointX","elementSize","labelSpace","labelPadding","options","isAxisBreakLabel","isLabelInside","tickSpace","angle","isVerticalAngle","labelElement","textHeight","textPadding","maxLineWidth","pixel","isInverse","isAxisInverse","previousEnd","intervalLength","labelHeight","yAxisLabelX","isLabelOnAxisLineLeft","sizeWidth","breakLabelSizeWidth","map","breakLabelSize","LabelMaxWidth","apply","breakLabelMaxWidth","originalText","stockChart","floor","text","labelIntersectAction","isInversed","labelStyle","textAlignment","edgeLabelPlacement","previousYValue","currentYValue","transform","axisLabel","createZoomingLabel","getAxisLabelXvalue","textWidth","anchor","lineBreakAlignment","startY","gap","delta","dateTimeInterval","endY","length_1","maxLabelSize","labelBorder","endX","createAxisBorderElement","multiLevelLabels","multiLevelLabelModule","renderYAxisMultiLevelLabels","title","labelRotation","titlePadding","multiLevelLabelHeight","titleSize","titleCollection","titleStyle","axisTitle","minorDirection","labelIndex","isFirstLabel","coor","range","logStart","logEnd","logInterval","logPosition","ticksX","ticksY","minorGird","minorTick","pow","findLogNumeric","ceil","concat","tempValue","islabelInside","isHorizontalAngle","labelWidth","newPoints","isRotatedLabelIntersect","isLabelUnderAxisLine","isEndAnchor","paddingForBreakLabel","getAnchor","isRtlEnabled","opposedPosition","getLabelText","xValue","xValue2","rect_1","xAdjustment","yAdjustment","rectCoordinates","getRectanglePoints","rectCenterX","rectCenterY","index_1","point1","point2","point3","point4","str","findAxisLabel","axisRect","startX","length_2","renderXAxisMultiLevelLabels","borderElement","style","pointerEvents","enableTrim","gridDirection","gridModel","gridId","gridIndex","themeColor","findParentNode","elementId","document","getElementById","contains","parentNode","zoomElement","replaceChild"],"sources":["/Users/thonghoangdanh/FullStack/birdnest/node_modules/@syncfusion/ej2-charts/src/chart/axis/cartesian-panel.js"],"sourcesContent":["import { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataUtil } from '@syncfusion/ej2-data';\nimport { subtractThickness, valueToCoefficient, sum, redrawElement, isBreakLabel, ChartLocation } from '../../common/utils/helper';\nimport { subArray, inside, appendChildElement, stringToNumber } from '../../common/utils/helper';\nimport { Thickness, logBase, createZoomingLabels, getElement } from '../../common/utils/helper';\nimport { Size, Rect, measureText, TextOption, PathOption } from '@syncfusion/ej2-svg-base';\nimport { textElement, textTrim, getRotatedRectangleCoordinates, isRotatedRectIntersect, isZoomSet } from '../../common/utils/helper';\n/**\n * Specifies the Cartesian Axis Layout.\n */\nvar axisPadding = 10;\nvar CartesianAxisLayoutPanel = /** @class */ (function () {\n    /** @private */\n    function CartesianAxisLayoutPanel(chartModule) {\n        this.chart = chartModule;\n        this.padding = 5;\n    }\n    /**\n     * Measure the axis size.\n     *\n     * @returns {void}\n     * @private\n     */\n    CartesianAxisLayoutPanel.prototype.measureAxis = function (rect) {\n        var chart = this.chart;\n        var chartAreaWidth = chart.chartArea.width ? stringToNumber(chart.chartArea.width, chart.availableSize.width) : null;\n        this.crossAt(chart);\n        this.seriesClipRect = new Rect(rect.x, rect.y, rect.width, rect.height);\n        this.initialClipRect = rect;\n        this.leftSize = 0;\n        this.rightSize = 0;\n        this.topSize = 0;\n        this.bottomSize = 0;\n        //Measure Axis size with initial Rect\n        this.measureRowAxis(chart, this.initialClipRect);\n        this.initialClipRect = subtractThickness(this.initialClipRect, new Thickness(this.leftSize, this.rightSize, 0, 0));\n        this.measureColumnAxis(chart, this.initialClipRect);\n        this.initialClipRect = subtractThickness(this.initialClipRect, new Thickness(0, 0, this.topSize, this.bottomSize));\n        if (!this.chart.delayRedraw) {\n            this.calculateAxisSize(this.initialClipRect);\n        }\n        this.leftSize = 0;\n        this.rightSize = 0;\n        this.topSize = 0;\n        this.bottomSize = 0;\n        //Measure Axis size with series Rect\n        this.measureRowAxis(chart, this.initialClipRect);\n        this.seriesClipRect = subtractThickness(this.seriesClipRect, new Thickness(this.leftSize, this.rightSize, 0, 0));\n        this.measureColumnAxis(chart, this.initialClipRect);\n        this.seriesClipRect = subtractThickness(this.seriesClipRect, new Thickness(0, 0, this.topSize, this.bottomSize));\n        if (chartAreaWidth) {\n            this.calculateFixedChartArea(chart, chartAreaWidth);\n        }\n        if (!this.chart.delayRedraw) {\n            chart.refreshAxis();\n            this.calculateAxisSize(this.seriesClipRect);\n        }\n    };\n    CartesianAxisLayoutPanel.prototype.calculateFixedChartArea = function (chart, chartAreaWidth) {\n        this.seriesClipRect.width = chartAreaWidth;\n        this.seriesClipRect.x = chart.availableSize.width - chart.margin.right - chartAreaWidth -\n            (chart.legendSettings.position === \"Right\" ? chart.legendModule.legendBounds.width : 0);\n        for (var _i = 0, _a = chart.rows; _i < _a.length; _i++) {\n            var item = _a[_i];\n            this.seriesClipRect.x -= sum(item.farSizes);\n        }\n    };\n    CartesianAxisLayoutPanel.prototype.measureRowAxis = function (chart, rect) {\n        var row;\n        this.calculateRowSize(rect);\n        for (var _i = 0, _a = chart.rows; _i < _a.length; _i++) {\n            var item = _a[_i];\n            row = item;\n            row.nearSizes = [];\n            row.farSizes = [];\n            row.insideNearSizes = [];\n            row.insideFarSizes = [];\n            this.arrangeAxis(row);\n            this.measureDefinition(row, chart, new Size(chart.availableSize.width, row.computedHeight));\n            if (this.leftSize < sum(row.nearSizes)) {\n                this.leftSize = sum(row.nearSizes);\n            }\n            if (this.rightSize < sum(row.farSizes)) {\n                this.rightSize = sum(row.farSizes);\n            }\n        }\n    };\n    CartesianAxisLayoutPanel.prototype.measureColumnAxis = function (chart, rect) {\n        var column;\n        this.calculateColumnSize(rect);\n        for (var _i = 0, _a = chart.columns; _i < _a.length; _i++) {\n            var item = _a[_i];\n            column = item;\n            column.farSizes = [];\n            column.nearSizes = [];\n            column.insideNearSizes = [];\n            column.insideFarSizes = [];\n            this.arrangeAxis(column);\n            this.measureDefinition(column, chart, new Size(column.computedWidth, chart.availableSize.height));\n            if (this.bottomSize < sum(column.nearSizes)) {\n                this.bottomSize = sum(column.nearSizes);\n            }\n            if (this.topSize < sum(column.farSizes)) {\n                this.topSize = sum(column.farSizes);\n            }\n        }\n    };\n    /**\n     * Measure the column and row in chart.\n     *\n     * @returns {void}\n     * @private\n     */\n    CartesianAxisLayoutPanel.prototype.measureDefinition = function (definition, chart, size) {\n        var ele = 16; // scrollbar element height is 16.\n        for (var _i = 0, _a = definition.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            axis.scrollBarHeight = chart.scrollBarModule && chart.zoomModule && chart.zoomSettings.enableScrollbar &&\n                axis.enableScrollbarOnZooming && chart.zoomModule.isZoomed && (axis.zoomFactor < 1 || axis.zoomPosition > 0) ? ele : 0;\n            axis.scrollBarHeight = chart.scrollBarModule && (chart.zoomModule && chart.zoomSettings.enableScrollbar &&\n                axis.enableScrollbarOnZooming && chart.zoomModule.isZoomed && (axis.zoomFactor < 1 || axis.zoomPosition > 0)\n                || axis.scrollbarSettings.enable) ? ele : 0;\n            axis.getModule(chart);\n            axis.baseModule.calculateRangeAndInterval(size, axis);\n            definition.computeSize(axis, axis.scrollBarHeight, definition, chart);\n        }\n        if (definition.farSizes.length > 0) {\n            definition.farSizes[definition.farSizes.length - 1] -= axisPadding;\n        }\n        if (definition.nearSizes.length > 0) {\n            definition.nearSizes[definition.nearSizes.length - 1] -= axisPadding;\n        }\n    };\n    /**\n     * Measure the axis.\n     *\n     * @returns {void}\n     * @private\n     */\n    CartesianAxisLayoutPanel.prototype.calculateAxisSize = function (rect) {\n        var chart = this.chart;\n        var row;\n        var column;\n        var definition;\n        var axis;\n        var nearCount = 0;\n        var farCount = 0;\n        var size = 0;\n        var x;\n        var y;\n        var axisOffset;\n        this.calculateRowSize(rect);\n        for (var i = 0, len = chart.rows.length; i < len; i++) {\n            row = chart.rows[i];\n            nearCount = 0;\n            farCount = 0;\n            for (var j = 0, len_1 = row.axes.length; j < len_1; j++) {\n                axis = row.axes[j];\n                axisOffset = axis.plotOffset;\n                if (axis.rect.height === 0) {\n                    axis.rect.height = row.computedHeight;\n                    size = 0;\n                    for (var k = i + 1, len_2 = i + axis.span; k < len_2; k++) {\n                        definition = chart.rows[k];\n                        size += definition.computedHeight;\n                    }\n                    axis.rect.y = (row.computedTop - size) + (axis.plotOffsetTop ? axis.plotOffsetTop : axisOffset);\n                    axis.rect.height = (axis.rect.height + size) -\n                        (this.getAxisOffsetValue(axis.plotOffsetTop, axis.plotOffsetBottom, axis.plotOffset));\n                    axis.rect.width = 0;\n                }\n                if (axis.isAxisOpposedPosition) {\n                    if (axis.labelPosition === 'Inside' && axis.orientation === \"Vertical\") {\n                        x = rect.x + rect.width - sum(subArray(row.insideFarSizes, farCount));\n                    }\n                    else {\n                        x = rect.x + rect.width + sum(subArray(row.farSizes, farCount));\n                    }\n                    axis.rect.x = axis.rect.x >= x ? axis.rect.x : x;\n                    farCount++;\n                }\n                else {\n                    if (axis.labelPosition === 'Inside' && axis.orientation === \"Vertical\") {\n                        x = rect.x + sum(subArray(row.insideNearSizes, nearCount));\n                    }\n                    else {\n                        x = rect.x - sum(subArray(row.nearSizes, nearCount));\n                    }\n                    axis.rect.x = axis.rect.x <= x ? axis.rect.x : x;\n                    nearCount++;\n                }\n            }\n        }\n        this.calculateColumnSize(rect);\n        for (var i = 0, len = chart.columns.length; i < len; i++) {\n            column = chart.columns[i];\n            nearCount = 0;\n            farCount = 0;\n            for (var j = 0, len_3 = column.axes.length; j < len_3; j++) {\n                axis = column.axes[j];\n                axisOffset = axis.plotOffset;\n                if (axis.rect.width === 0) {\n                    for (var k = i, len_4 = (i + axis.span); k < len_4; k++) {\n                        definition = chart.columns[k];\n                        axis.rect.width += definition.computedWidth;\n                    }\n                    axis.rect.x = column.computedLeft + (axis.plotOffsetLeft ? axis.plotOffsetLeft : axisOffset);\n                    axis.rect.width -= (this.getAxisOffsetValue(axis.plotOffsetLeft, axis.plotOffsetRight, axis.plotOffset));\n                    axis.rect.height = 0;\n                }\n                if (axis.isAxisOpposedPosition) {\n                    if (axis.labelPosition === 'Inside' && axis.orientation === \"Horizontal\") {\n                        y = rect.y + sum(subArray(column.insideFarSizes, farCount));\n                    }\n                    else {\n                        y = rect.y - sum(subArray(column.farSizes, farCount));\n                    }\n                    axis.rect.y = axis.rect.y <= y ? axis.rect.y : y;\n                    farCount++;\n                }\n                else {\n                    if (axis.labelPosition === 'Inside' && axis.orientation === \"Horizontal\") {\n                        y = rect.y + rect.height - sum(subArray(column.insideNearSizes, nearCount));\n                    }\n                    else {\n                        y = rect.y + rect.height + sum(subArray(column.nearSizes, nearCount));\n                    }\n                    axis.rect.y = axis.rect.y >= y ? axis.rect.y : y;\n                    nearCount++;\n                }\n            }\n        }\n    };\n    /**\n     * Measure the axis.\n     *\n     * @returns {void}\n     * @private\n     */\n    CartesianAxisLayoutPanel.prototype.measure = function () {\n        var chart = this.chart;\n        var row;\n        var column;\n        var definition;\n        var actualIndex;\n        var span;\n        for (var _i = 0, _a = chart.axisCollections; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            //definition.Axes = axis;\n            if (axis.orientation === 'Vertical') {\n                chart.verticalAxes.push(axis);\n                actualIndex = this.getActualRow(axis);\n                row = chart.rows[actualIndex];\n                this.pushAxis(row, axis);\n                span = ((actualIndex + axis.span) > chart.rows.length ? chart.rows.length : (actualIndex + axis.span));\n                for (var j = actualIndex + 1; j < span; j++) {\n                    definition = chart.rows[j];\n                    definition.axes[row.axes.length - 1] = axis;\n                    chart.rows[j] = definition;\n                }\n                chart.rows[actualIndex] = row;\n            }\n            else {\n                chart.horizontalAxes.push(axis);\n                actualIndex = this.getActualColumn(axis);\n                column = chart.columns[actualIndex];\n                this.pushAxis(column, axis);\n                span = ((actualIndex + axis.span) > chart.columns.length ? chart.columns.length : (actualIndex + axis.span));\n                for (var j = actualIndex + 1; j < span; j++) {\n                    definition = chart.columns[j];\n                    definition.axes[column.axes.length - 1] = axis;\n                    chart.columns[j] = definition;\n                }\n                chart.columns[actualIndex] = column;\n            }\n            axis.isRTLEnabled = chart.enableRtl;\n            axis.setIsInversedAndOpposedPosition();\n        }\n    };\n    CartesianAxisLayoutPanel.prototype.getAxisOffsetValue = function (position1, position2, plotOffset) {\n        var rangeOffset = position1 ? (position1 + (position2 ? position2 :\n            plotOffset)) : (position2 ? position2 + plotOffset : 2 * plotOffset);\n        return rangeOffset;\n    };\n    CartesianAxisLayoutPanel.prototype.crossAt = function (chart) {\n        for (var _i = 0, _a = chart.axisCollections; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            if (axis.crossesAt === null) {\n                continue;\n            }\n            if (!axis.crossesInAxis) {\n                if (chart.requireInvertedAxis) {\n                    axis.crossInAxis = ((axis.orientation === 'Horizontal')) ? chart.primaryXAxis : chart.primaryYAxis;\n                }\n                else {\n                    axis.crossInAxis = ((axis.orientation === 'Horizontal')) ? chart.primaryYAxis : chart.primaryXAxis;\n                }\n                axis.crossAt = this.updateCrossAt(axis.crossInAxis, axis.crossesAt);\n                continue;\n            }\n            else {\n                for (var i = 2, len = chart.axisCollections.length; i < len; i++) {\n                    if (axis.crossesInAxis === chart.axisCollections[i].name) {\n                        axis.crossInAxis = chart.axisCollections[i];\n                        axis.crossAt = this.updateCrossAt(axis.crossInAxis, axis.crossesAt);\n                        continue;\n                    }\n                }\n            }\n        }\n    };\n    CartesianAxisLayoutPanel.prototype.updateCrossAt = function (axis, crossAt) {\n        switch (axis.valueType) {\n            case 'DateTime':\n                var option = {\n                    skeleton: 'full',\n                    type: 'dateTime'\n                };\n                var dateParser = this.chart.intl.getDateParser(option);\n                var dateFormatter = this.chart.intl.getDateFormat(option);\n                return Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: crossAt }).val))));\n            case 'Category':\n                return parseFloat(crossAt) ? parseFloat(crossAt) : axis.labels.indexOf(crossAt);\n            case 'Logarithmic':\n                return logBase(crossAt, axis.logBase);\n            default:\n                return crossAt;\n        }\n    };\n    CartesianAxisLayoutPanel.prototype.pushAxis = function (definition, axis) {\n        for (var i = 0, len = definition.axes.length; i <= len; i++) {\n            if (!definition.axes[i]) {\n                definition.axes[i] = axis;\n                break;\n            }\n        }\n    };\n    CartesianAxisLayoutPanel.prototype.arrangeAxis = function (definition) {\n        var axisCollection = [];\n        for (var i = 0, len = definition.axes.length; i <= len; i++) {\n            if (definition.axes[i]) {\n                axisCollection.push(definition.axes[i]);\n            }\n        }\n        definition.axes = axisCollection;\n    };\n    CartesianAxisLayoutPanel.prototype.getActualColumn = function (axis) {\n        var actualLength = this.chart.columns.length;\n        var pos = axis.columnIndex;\n        var result = pos >= actualLength ? actualLength - 1 : (pos < 0 ? 0 : pos);\n        return result;\n    };\n    CartesianAxisLayoutPanel.prototype.getActualRow = function (axis) {\n        var actualLength = this.chart.rows.length;\n        var pos = axis.rowIndex;\n        var result = pos >= actualLength ? actualLength - 1 : (pos < 0 ? 0 : pos);\n        return result;\n    };\n    /**\n     * Measure the row size.\n     *\n     * @returns {void}\n     */\n    CartesianAxisLayoutPanel.prototype.calculateRowSize = function (rect) {\n        /*! Calculate row size */\n        var chart = this.chart;\n        var row;\n        var rowTop = rect.y + rect.height;\n        var height = 0;\n        var remainingHeight = Math.max(0, rect.height);\n        for (var i = 0, len = chart.rows.length; i < len; i++) {\n            row = chart.rows[i];\n            if (row.height.indexOf('%') !== -1) {\n                height = Math.min(remainingHeight, (rect.height * parseInt(row.height, 10) / 100));\n            }\n            else {\n                height = Math.min(remainingHeight, parseInt(row.height, 10));\n            }\n            height = (i !== (len - 1)) ? height : remainingHeight;\n            row.computedHeight = height;\n            rowTop -= height;\n            row.computedTop = rowTop;\n            remainingHeight -= height;\n        }\n    };\n    /**\n     * Measure the row size.\n     *\n     * @param {Rect} rect rect\n     * @returns {void}\n     */\n    CartesianAxisLayoutPanel.prototype.calculateColumnSize = function (rect) {\n        /*! Calculate column size */\n        var chart = this.chart;\n        var column;\n        var columnLeft = rect.x;\n        var width = 0;\n        var remainingWidth = Math.max(0, rect.width);\n        for (var i = 0, len = chart.columns.length; i < len; i++) {\n            column = chart.columns[i];\n            if (column.width.indexOf('%') !== -1) {\n                width = Math.min(remainingWidth, (rect.width * parseInt(column.width, 10) / 100));\n            }\n            else {\n                width = Math.min(remainingWidth, parseInt(column.width, 10));\n            }\n            width = (i !== (len - 1)) ? width : remainingWidth;\n            column.computedWidth = width;\n            column.computedLeft = columnLeft;\n            columnLeft += width;\n            remainingWidth -= width;\n        }\n    };\n    /**\n     * To render the axis element.\n     *\n     * @returns {void}\n     * @private\n     */\n    // tslint:disable-next-line:max-func-body-length\n    CartesianAxisLayoutPanel.prototype.renderAxes = function () {\n        var chart = this.chart;\n        var axis;\n        var axisElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisInsideCollection' });\n        var axisLineElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisOutsideCollection' });\n        if (axisLineElement) {\n            axisLineElement.setAttribute('aria-hidden', 'true');\n        }\n        var outsideElement;\n        var isInside;\n        for (var i = 0, len = chart.axisCollections.length; i < len; i++) {\n            var axisVisibility = true;\n            axis = chart.axisCollections[i];\n            this.element = chart.renderer.createGroup({ id: chart.element.id + 'AxisGroup' + i + 'Inside' });\n            if (this.element) {\n                this.element.setAttribute('aria-hidden', 'true');\n            }\n            outsideElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisGroup' + i + 'Outside' });\n            if (outsideElement) {\n                outsideElement.setAttribute('aria-hidden', 'true');\n            }\n            ;\n            for (var _i = 0, _a = axis.series; _i < _a.length; _i++) {\n                var series = _a[_i];\n                if (axis.name === series.yAxisName || axis.name === series.xAxisName) {\n                    axisVisibility = series.visible;\n                    if (!axisVisibility) {\n                        continue;\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n            if (!axisVisibility) {\n                continue;\n            }\n            isInside = this.findAxisPosition(axis);\n            if (axis.orientation === 'Horizontal') {\n                axis.updateCrossValue();\n                if (axis.visible && axis.internalVisibility && axis.lineStyle.width > 0) {\n                    this.drawAxisLine(axis, i, axis.plotOffset, 0, 0, 0, axis.plotOffsetLeft, axis.plotOffsetRight, isInside ? outsideElement : this.element, axis.updatedRect);\n                }\n                if (axis.majorGridLines.width > 0 || axis.majorTickLines.width > 0) {\n                    this.drawXAxisGridLine(axis, i, (isInside || axis.tickPosition === 'Inside') ? outsideElement : this.element, axis.updatedRect);\n                }\n                if (axis.visible && axis.internalVisibility) {\n                    this.drawXAxisLabels(axis, i, (isInside || axis.labelPosition === 'Inside') ? outsideElement : this.element, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n                    this.drawXAxisBorder(axis, i, (isInside || axis.labelPosition === 'Inside') ? outsideElement : this.element, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n                    this.drawXAxisTitle(axis, i, isInside ? outsideElement : this.element, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n                }\n            }\n            else {\n                axis.updateCrossValue();\n                if (axis.visible && axis.internalVisibility && axis.lineStyle.width > 0) {\n                    this.drawAxisLine(axis, i, 0, axis.plotOffset, axis.plotOffsetBottom, axis.plotOffsetTop, 0, 0, isInside ? outsideElement : this.element, axis.updatedRect);\n                }\n                if (axis.majorGridLines.width > 0 || axis.majorTickLines.width > 0) {\n                    this.drawYAxisGridLine(axis, i, (isInside || axis.tickPosition === 'Inside') ? outsideElement : this.element, axis.updatedRect);\n                }\n                if (axis.visible && axis.internalVisibility) {\n                    this.drawYAxisLabels(axis, i, (isInside || axis.labelPosition === 'Inside') ? outsideElement : this.element, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n                    this.drawYAxisBorder(axis, i, (isInside || axis.labelPosition === 'Inside') ? outsideElement : this.element, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n                    this.drawYAxisTitle(axis, i, isInside ? outsideElement : this.element, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n                }\n            }\n            if (!this.chart.enableCanvas) {\n                axisElement.appendChild(this.element);\n                if (outsideElement && outsideElement.childNodes.length > 0) {\n                    axisLineElement.appendChild(outsideElement);\n                }\n            }\n            if (chart.scrollBarModule && ((chart.zoomSettings.enableScrollbar && axis.enableScrollbarOnZooming) ||\n                axis.scrollbarSettings.enable)) {\n                this.renderScrollbar(chart, axis);\n            }\n        }\n        this.element = chart.renderer.createGroup({ id: chart.element.id + 'DefinitionLine' });\n        for (var j = 0, len = chart.rows.length; j < len; j++) {\n            var row = chart.rows[j];\n            if (row.border.color) {\n                this.drawBottomLine(row, j, true);\n            }\n        }\n        for (var j = 0, len = chart.columns.length; j < len; j++) {\n            var column = chart.columns[j];\n            if (column.border.color) {\n                this.drawBottomLine(column, j, false);\n            }\n        }\n        if (!this.chart.enableCanvas) {\n            axisElement.appendChild(this.element);\n        }\n        appendChildElement(chart.enableCanvas, chart.svgObject, axisElement, chart.redraw);\n        return axisLineElement;\n    };\n    /**\n     * To render the axis scrollbar\n     *\n     * @param {Chart} chart chart\n     * @param {Axis} axis axis\n     * @returns {void}\n     */\n    CartesianAxisLayoutPanel.prototype.renderScrollbar = function (chart, axis) {\n        var isZoomed = isNullOrUndefined(chart.zoomModule) ? false : chart.zoomModule.isZoomed;\n        if (((isZoomed && (axis.zoomFactor < 1 || axis.zoomPosition > 0)) || (axis.scrollbarSettings.enable &&\n            (axis.zoomFactor <= 1 || axis.zoomPosition >= 0))) &&\n            (!axis.zoomingScrollBar.isScrollUI || chart.visibleSeries[0].type.indexOf('Bar') >= 0)) {\n            if (!chart.scrollElement) {\n                chart.scrollElement = redrawElement(chart.redraw, chart.element.id + '_scrollElement') || createElement('div', { id: chart.element.id + '_scrollElement' });\n            }\n            appendChildElement(false, chart.scrollElement, axis.zoomingScrollBar.render(true), true);\n        }\n        else if (axis.zoomFactor === 1 && axis.zoomPosition === 0 && axis.zoomingScrollBar.svgObject && !axis.scrollbarSettings.enable) {\n            axis.zoomingScrollBar.destroy();\n        }\n        if (axis.zoomingScrollBar.isScrollUI) {\n            axis.zoomingScrollBar.isScrollUI = false;\n        }\n    };\n    /**\n     * To find the axis position\n     *\n     * @param {Axis} axis axis\n     * @returns {boolean} axis position\n     */\n    CartesianAxisLayoutPanel.prototype.findAxisPosition = function (axis) {\n        return axis.crossAt !== null && axis.isInside(axis.crossInAxis.visibleRange);\n    };\n    /**\n     * To render the bootom line of the columns and rows\n     *\n     * @param {Row | Column} definition definition\n     * @param {number} index index\n     * @param {boolean} isRow isRow\n     * @returns {void}\n     */\n    CartesianAxisLayoutPanel.prototype.drawBottomLine = function (definition, index, isRow) {\n        var chart = this.chart;\n        var optionsLine = {};\n        var x1;\n        var x2;\n        var y1;\n        var y2;\n        var definitionName;\n        if (isRow) {\n            definition = definition;\n            y1 = y2 = definition.computedTop + definition.computedHeight;\n            x1 = this.seriesClipRect.x;\n            x2 = x1 + this.seriesClipRect.width;\n            definitionName = 'Row';\n        }\n        else {\n            definition = definition;\n            x1 = x2 = definition.computedLeft;\n            y1 = this.seriesClipRect.y;\n            y2 = y1 + this.seriesClipRect.height;\n            definitionName = 'Column';\n        }\n        optionsLine = {\n            'id': chart.element.id + '_AxisBottom_' + definitionName + index,\n            x1: x1,\n            y1: y1,\n            x2: x2,\n            y2: y2,\n            'stroke-width': definition.border.width,\n            'stroke': definition.border.color\n        };\n        this.htmlObject = chart.renderer.drawLine(optionsLine);\n        this.element.appendChild(this.htmlObject);\n    };\n    /**\n     * To render the axis line\n     *\n     * @param {Axis} axis axis\n     * @param {number} index index\n     * @param {number} plotX plotX\n     * @param {number} plotY plotY\n     * @param {Element} parent parent\n     * @param {Rect} rect rect\n     * @returns {void}\n     */\n    CartesianAxisLayoutPanel.prototype.drawAxisLine = function (axis, index, plotX, plotY, plotBottom, plotTop, plotLeft, plotRight, parent, rect) {\n        var chart = this.chart;\n        var optionsLine = {};\n        var element = getElement(chart.element.id + 'AxisLine_' + index);\n        var direction = element ? element.getAttribute('d') : '';\n        element = null;\n        optionsLine = {\n            'id': chart.element.id + 'AxisLine_' + index,\n            'd': 'M ' + (rect.x - plotX - plotLeft) + ' ' + (rect.y - plotY - plotTop) +\n                ' L ' + (rect.x + rect.width + plotX + plotRight) + ' ' + (rect.y + rect.height + plotY + plotBottom),\n            'stroke-dasharray': axis.lineStyle.dashArray,\n            'stroke-width': axis.lineStyle.width,\n            'stroke': axis.lineStyle.color || chart.themeStyle.axisLine\n        };\n        this.htmlObject = chart.renderer.drawPath(optionsLine);\n        appendChildElement(chart.enableCanvas, parent, this.htmlObject, chart.redraw, true, 'x', 'y', null, direction);\n    };\n    /**\n     * To render the yAxis grid line\n     *\n     * @param {Axis} axis axis\n     * @param {number} index index\n     * @param {Element} parent parent\n     * @param {Rect} rect rect\n     * @returns {void}\n     */\n    CartesianAxisLayoutPanel.prototype.drawYAxisGridLine = function (axis, index, parent, rect) {\n        var isLogAxis = axis.valueType === 'Logarithmic';\n        var isCategoryAxis = axis.valueType.indexOf('Category') > -1;\n        var tempInterval;\n        var pointY = 0;\n        var majorGrid = '';\n        var majorTick = '';\n        var minorGridDirection;\n        var isOpposed = axis.isAxisOpposedPosition;\n        var tickSize = isOpposed ? axis.majorTickLines.height : -axis.majorTickLines.height;\n        var axisLineSize = (isOpposed) ? axis.lineStyle.width * 0.5 : -axis.lineStyle.width * 0.5;\n        var ticksbwtLabel = (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') ?\n            0.5 : 0;\n        var scrollBarHeight = isNullOrUndefined(axis.crossesAt) ? isOpposed ? axis.scrollBarHeight :\n            -axis.scrollBarHeight : 0;\n        var isTickInside = axis.tickPosition === 'Inside';\n        var ticks = isTickInside ? (rect.x - tickSize - axisLineSize) : (rect.x + tickSize + axisLineSize + scrollBarHeight);\n        var length = axis.visibleLabels.length;\n        var chartThemeStyle = this.chart.themeStyle;\n        if (axis.valueType.indexOf('Category') > -1 && axis.labelPlacement === 'BetweenTicks' && length > 0) {\n            length += 1;\n        }\n        var minorGridLines = axis.minorGridLines;\n        var minorTickLines = axis.minorTickLines;\n        //Gridlines\n        for (var i = 0; i < length; i++) {\n            tempInterval = !axis.visibleLabels[i] ? (axis.visibleLabels[i - 1].value + axis.visibleRange.interval) - ticksbwtLabel\n                : axis.visibleLabels[i].value - ticksbwtLabel;\n            pointY = valueToCoefficient(tempInterval, axis) * rect.height;\n            pointY = (pointY * -1) + (rect.y + rect.height);\n            if (pointY >= rect.y && (rect.y + rect.height) >= pointY) {\n                if ((inside(tempInterval, axis.visibleRange)) || this.isBorder(axis, i, pointY)) {\n                    majorGrid = 'M ' + this.seriesClipRect.x + ' ' + (pointY) +\n                        ' L ' + (this.seriesClipRect.x + this.seriesClipRect.width) + ' ' + pointY;\n                    this.renderGridLine(axis, index, majorGrid, axis.majorGridLines, '_MajorGridLine_', i, this.element, chartThemeStyle.majorGridLine, axis.majorGridLines.dashArray);\n                }\n                majorTick = 'M ' + (rect.x + axisLineSize + (isTickInside ? scrollBarHeight : 0)) + ' ' + pointY +\n                    ' L ' + (ticks) + ' ' + pointY;\n                this.renderGridLine(axis, index, majorTick, axis.majorTickLines, '_MajorTickLine_', i, parent, chartThemeStyle.majorTickLine);\n                if ((minorGridLines.width > 0 || minorTickLines.width > 0) && axis.minorTicksPerInterval > 0) {\n                    if (i === 0 && isZoomSet(axis) && !isLogAxis && !isCategoryAxis) {\n                        this.renderMinorGridOnZooming(axis, tempInterval, rect, i, index, chartThemeStyle, parent);\n                    }\n                    minorGridDirection = this.drawAxisMinorLine(axis, tempInterval, rect, i);\n                    this.renderGridLine(axis, index, minorGridDirection[0], minorGridLines, '_MinorGridLine_', i, this.element, chartThemeStyle.minorGridLine, minorGridLines.dashArray);\n                    this.renderGridLine(axis, index, minorGridDirection[1], minorTickLines, '_MinorTickLine_', i, parent, chartThemeStyle.minorTickLine);\n                    if (i === length - 1 && isZoomSet(axis) && isLogAxis && !isCategoryAxis) {\n                        this.renderMinorGridOnZooming(axis, (tempInterval + axis.visibleRange.interval), rect, i, index, chartThemeStyle, parent);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To check the border of the axis\n     *\n     * @param {Axis} axis axis\n     * @param {number} index index\n     * @param {number} value value\n     * @returns {boolean} check the border of the axis\n     */\n    CartesianAxisLayoutPanel.prototype.isBorder = function (axis, index, value) {\n        var border = this.chart.chartArea.border;\n        var rect = this.seriesClipRect;\n        var orientation = axis.orientation;\n        var start = (orientation === 'Horizontal') ? rect.x : rect.y;\n        var size = (orientation === 'Horizontal') ? rect.width : rect.height;\n        var startIndex = (orientation === 'Horizontal') ? 0 : axis.visibleLabels.length - 1;\n        var endIndex = (orientation === 'Horizontal') ? axis.visibleLabels.length - 1 : 0;\n        if (axis.plotOffset > 0) {\n            return true;\n        }\n        else if ((value === start || value === (start + size)) && (border.width <= 0 || border.color === 'transparent')) {\n            return true;\n        }\n        else if ((value !== start && index === startIndex) || (value !== (start + size) && index === endIndex)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * To render the yAxis label\n     *\n     * @param {Axis} axis axis\n     * @param {number} index index\n     * @param {Element} parent parent\n     * @param {Rect} rect rect\n     * @returns {void}\n     * @private\n     */\n    CartesianAxisLayoutPanel.prototype.drawYAxisLabels = function (axis, index, parent, rect) {\n        var chart = this.chart;\n        var label;\n        var pointX = 0;\n        var pointY = 0;\n        var elementSize;\n        var labelSpace = axis.labelPadding;\n        var options;\n        var isAxisBreakLabel;\n        var isLabelInside = axis.labelPosition === 'Inside';\n        var isOpposed = axis.isAxisOpposedPosition;\n        var tickSpace = axis.labelPosition === axis.tickPosition ? axis.majorTickLines.height : 0;\n        var padding = tickSpace + labelSpace + axis.lineStyle.width * 0.5;\n        var angle = axis.angle % 360;\n        var isVerticalAngle = (angle === -90 || angle === 90 || angle === 270 || angle === -270);\n        padding += (isVerticalAngle) ? (isLabelInside ? 5 : -5) : 0;\n        padding = (isOpposed) ? padding : -padding;\n        var labelElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisLabels' + index });\n        var scrollBarHeight = isNullOrUndefined(axis.crossesAt) ? axis.scrollBarHeight * (isOpposed ? 1 : -1) : 0;\n        var textHeight;\n        var textPadding;\n        var maxLineWidth;\n        var pixel = 10;\n        var isInverse = axis.isAxisInverse;\n        var previousEnd = isInverse ? rect.y : (rect.y + rect.height);\n        var labelPadding;\n        var intervalLength;\n        var labelHeight;\n        var yAxisLabelX;\n        var isLabelOnAxisLineLeft = ((!isOpposed && !isLabelInside) || (isOpposed && isLabelInside));\n        if (isLabelInside) {\n            labelPadding = !isLabelOnAxisLineLeft ? -padding : padding;\n        }\n        else {\n            labelPadding = !isLabelOnAxisLineLeft ? -padding + scrollBarHeight : padding + scrollBarHeight;\n        }\n        var sizeWidth = [];\n        var breakLabelSizeWidth = [];\n        axis.visibleLabels.map(function (item) {\n            sizeWidth.push(item.size['width']);\n            breakLabelSizeWidth.push(item.breakLabelSize['width']);\n        });\n        var LabelMaxWidth = Math.max.apply(Math, sizeWidth);\n        var breakLabelMaxWidth = Math.max.apply(Math, breakLabelSizeWidth);\n        for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\n            label = axis.visibleLabels[i];\n            isAxisBreakLabel = isBreakLabel(axis.visibleLabels[i].originalText);\n            elementSize = isAxisBreakLabel ? axis.visibleLabels[i].breakLabelSize : axis.visibleLabels[i].size;\n            pointY = (valueToCoefficient(axis.visibleLabels[i].value, axis) * rect.height) + (chart.stockChart ? 7 : 0);\n            pointY = Math.floor((pointY * -1) + (rect.y + rect.height));\n            textHeight = ((elementSize.height / 8) * axis.visibleLabels[i].text.length / 2);\n            textPadding = ((elementSize.height / 4) * 3) + 3;\n            intervalLength = rect.height / axis.visibleLabels.length;\n            labelHeight = ((axis.labelIntersectAction === 'Trim' || axis.labelIntersectAction === 'Wrap') && angle !== 0 &&\n                elementSize.width > intervalLength) ? intervalLength : elementSize.width;\n            pointY = (isAxisBreakLabel ? (axis.labelPosition === 'Inside' ? (pointY - (elementSize.height / 2) - textHeight + textPadding)\n                : (pointY - textHeight)) : (axis.labelPosition === 'Inside' ? pointY + textPadding : pointY));\n            if (axis.labelPosition === 'Inside' && ((i === 0 && !axis.isInversed) || (i === len - 1 && axis.isInversed))) {\n                if (chart.stockChart) {\n                    pointY -= (textPadding);\n                }\n                else {\n                    pointY -= (textPadding + labelHeight / 2);\n                }\n            }\n            if (axis.majorGridLines.width > axis.majorTickLines.width) {\n                maxLineWidth = axis.majorGridLines.width;\n            }\n            else {\n                maxLineWidth = axis.majorTickLines.width;\n            }\n            if (axis.labelStyle.textAlignment === 'Far') {\n                pointY = pointY - maxLineWidth - pixel;\n            }\n            else if (axis.labelStyle.textAlignment === 'Near') {\n                pointY = pointY + maxLineWidth + pixel;\n            }\n            else if (axis.labelStyle.textAlignment === 'Center') {\n                // eslint-disable-next-line no-self-assign\n                pointY = pointY;\n            }\n            // label X value adjustment (Start)\n            if (isLabelInside) {\n                yAxisLabelX = labelPadding + ((angle === 0 ? elementSize.width : (isAxisBreakLabel ? breakLabelMaxWidth : LabelMaxWidth)) / 2);\n            }\n            else {\n                yAxisLabelX = labelPadding - ((angle === 0 ? elementSize.width : (isAxisBreakLabel ? breakLabelMaxWidth : LabelMaxWidth)) / 2);\n            }\n            pointX = isOpposed ? (rect.x - yAxisLabelX) : (rect.x + yAxisLabelX);\n            if (isVerticalAngle) {\n                pointX += (isOpposed) ? -10 : 10;\n            }\n            yAxisLabelX = labelPadding;\n            options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY, 'middle', label.text, '', 'middle');\n            switch (axis.edgeLabelPlacement) {\n                case 'None':\n                    break;\n                case 'Hide':\n                    if (((i === 0 || (isInverse && i === len - 1)) && options.y > rect.y) ||\n                        (((i === len - 1) || (isInverse && i === 0)) && options.y - elementSize.height * 0.5 < rect.y)) {\n                        options.text = '';\n                    }\n                    break;\n                case 'Shift':\n                    if ((i === 0 || (isInverse && i === len - 1)) && options.y > rect.y) {\n                        options.y = pointY = rect.y + rect.height;\n                    }\n                    else if (((i === len - 1) || (isInverse && i === 0)) && (options.y - elementSize.height * 0.5 < rect.y)) {\n                        options.y = pointY = rect.y + elementSize.height * 0.5;\n                    }\n                    break;\n            }\n            // ------- Hide Calculation (Start) -------------\n            var previousYValue = options.y;\n            var currentYValue = options.y - labelHeight;\n            if (isAxisBreakLabel) {\n                previousYValue = (options.y - (labelHeight / 2));\n                currentYValue = options.y + (labelHeight / 2);\n            }\n            if ((angle === 90 || angle === 270) && axis.labelIntersectAction === 'Hide' && i !== 0 &&\n                (!isInverse ? previousYValue >= previousEnd : currentYValue <= previousEnd)) {\n                continue;\n            }\n            previousEnd = isInverse ? previousYValue : currentYValue;\n            // ------- Hide Calculation (End) -------------\n            options.transform = 'rotate(' + angle + ',' + pointX + ',' + pointY + ')';\n            textElement(chart.renderer, options, label.labelStyle, label.labelStyle.color || chart.themeStyle.axisLabel, labelElement, false, chart.redraw, true, true, null, null, null, null, chart.enableCanvas);\n        }\n        if (!this.chart.enableCanvas) {\n            if (!chart.delayRedraw) {\n                appendChildElement(chart.enableCanvas, parent, labelElement, chart.redraw);\n            }\n            else if (axis.visible && axis.internalVisibility) {\n                this.createZoomingLabel(this.chart, labelElement, axis, index, rect);\n            }\n        }\n    };\n    /**\n     * To get X value based on lineBreakAlignment for Y axis line break labels only.\n     *\n     * @param {number} x text x position\n     * @param {Axis} axis y axis values\n     * @param {number} textWidth axis label width\n     * @returns {number} returns suitable axis label x position\n     */\n    CartesianAxisLayoutPanel.prototype.getAxisLabelXvalue = function (x, axis, textWidth) {\n        var anchor = axis.lineBreakAlignment;\n        var isLabelInside = axis.labelPosition === 'Inside';\n        var isOpposed = axis.isAxisOpposedPosition;\n        if ((isOpposed && isLabelInside) || (!isOpposed && !isLabelInside)) {\n            return (anchor === 'Right' ? x : (anchor === 'Center' ? (x - textWidth / 2) : (x - textWidth)));\n        }\n        else {\n            return (anchor === 'Left' ? x : (anchor === 'Center' ? (x + textWidth / 2) : (x + textWidth)));\n        }\n    };\n    /**\n     * To render the yAxis label border.\n     *\n     * @param {Axis} axis axis\n     * @param {number} index index\n     * @param {Element} parent parent\n     * @param {Rect} rect rect\n     * @returns {void}\n     */\n    CartesianAxisLayoutPanel.prototype.drawYAxisBorder = function (axis, index, parent, rect) {\n        if (axis.border.width > 0) {\n            var startY = void 0;\n            var pointY = void 0;\n            var scrollBarHeight = axis.labelPosition === 'Outside' ? axis.scrollBarHeight : 0;\n            var isOpposed = axis.isAxisOpposedPosition;\n            scrollBarHeight = (isOpposed ? 1 : -1) * scrollBarHeight;\n            var gap = (rect.height / axis.visibleRange.delta) * (axis.valueType === 'DateTime' ? axis.dateTimeInterval\n                : axis.visibleRange.interval);\n            var endY = void 0;\n            var length_1 = axis.maxLabelSize.width + 10 + ((axis.tickPosition === axis.labelPosition) ?\n                axis.majorTickLines.height : 0);\n            var labelBorder = '';\n            var ticksbwtLabel = (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') ? -0.5 : 0;\n            var endX = ((isOpposed && axis.labelPosition === 'Inside') || (!isOpposed\n                && axis.labelPosition === 'Outside')) ? rect.x - length_1 + scrollBarHeight : rect.x + length_1 + scrollBarHeight;\n            for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\n                pointY = valueToCoefficient(axis.visibleLabels[i].value + ticksbwtLabel, axis);\n                pointY = (axis.isAxisInverse ? (1 - pointY) : pointY) * rect.height;\n                if (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') {\n                    startY = (pointY * -1) + (rect.y + rect.height);\n                    endY = (pointY * -1) - (gap) + (rect.y + rect.height);\n                }\n                else {\n                    startY = (pointY * -1) + gap / 2 + (rect.y + rect.height);\n                    endY = (pointY * -1) - gap / 2 + (rect.y + rect.height);\n                }\n                switch (axis.border.type) {\n                    case 'Rectangle':\n                    case 'WithoutTopBorder':\n                        if (startY > (rect.y + rect.height)) {\n                            labelBorder += ('M' + ' ' + endX + ' ' + (rect.y + rect.height) + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ');\n                        }\n                        else if (Math.floor(rect.y) > (endY)) {\n                            labelBorder += ('M' + ' ' + (rect.x + scrollBarHeight) + ' ' + startY + ' ' + 'L' + ' ' + endX\n                                + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + (rect.y) + ' ');\n                        }\n                        else {\n                            labelBorder += ('M' + ' ' + (rect.x + scrollBarHeight) + ' ' + startY + ' ' + 'L' + ' ' + endX +\n                                ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ');\n                            if (i === axis.visibleLabels.length - 1) {\n                                labelBorder += ('M' + ' ' + (rect.x + scrollBarHeight) + ' ' + endY + ' ' + 'L' + ' ' +\n                                    endX + ' ' + endY + ' ');\n                            }\n                        }\n                        break;\n                    case 'WithoutTopandBottomBorder':\n                        if (!(startY > rect.y + rect.height) && !((endY) < Math.floor(rect.y))) {\n                            labelBorder += ('M' + ' ' + (rect.x + scrollBarHeight) + ' ' + startY + ' ' + 'L' + ' ' + endX +\n                                ' ' + startY + ' ' + 'M' + ' ' + endX + ' ' + endY + ' ' +\n                                'L' + ' ' + (rect.x + scrollBarHeight) + ' ' + endY);\n                        }\n                        break;\n                }\n            }\n            labelBorder += (axis.border.type === 'Rectangle') ? ('M' + ' ' + (rect.x + scrollBarHeight) + ' ' + rect.y + ' ' + 'L' + ' ' +\n                (rect.x + scrollBarHeight) + ' ' + (rect.y + rect.height) + ' ') : '';\n            if (labelBorder !== '') {\n                this.createAxisBorderElement(axis, index, labelBorder, parent);\n            }\n        }\n        if (axis.multiLevelLabels.length > 0 && this.chart.multiLevelLabelModule) {\n            this.chart.multiLevelLabelModule.renderYAxisMultiLevelLabels(axis, index, parent, rect);\n        }\n    };\n    /**\n     * To render the yAxis title\n     *\n     * @param {Axis} axis axis\n     * @param {number} index index\n     * @param {Element} parent parent\n     * @param {Rect} rect rect\n     * @returns {void}\n     */\n    CartesianAxisLayoutPanel.prototype.drawYAxisTitle = function (axis, index, parent, rect) {\n        if (axis.title) {\n            var chart = this.chart;\n            var isOpposed = axis.isAxisOpposedPosition;\n            var labelRotation = isOpposed ? 90 : -90;\n            var padding = (axis.tickPosition === 'Inside' ? 0 : axis.majorTickLines.height + axis.titlePadding) +\n                (axis.labelPosition === 'Inside' ? 0 :\n                    (axis.maxLabelSize.width + axis.multiLevelLabelHeight + this.padding));\n            padding = isOpposed ? padding + axis.scrollBarHeight : -padding - axis.scrollBarHeight;\n            var x = rect.x + padding;\n            var y = rect.y + rect.height * 0.5;\n            var titleSize = (axis.titleSize.height * (axis.titleCollection.length - 1));\n            var options = new TextOption(chart.element.id + '_AxisTitle_' + index, x, y - axis.labelPadding - titleSize, 'middle', axis.titleCollection, 'rotate(' + labelRotation + ',' + (x) + ',' + (y) + ')', null, labelRotation);\n            var element = textElement(chart.renderer, options, axis.titleStyle, axis.titleStyle.color || chart.themeStyle.axisTitle, parent, null, null, null, null, null, null, null, null, chart.enableCanvas);\n            element.setAttribute('aria-hidden', 'true');\n        }\n    };\n    /**\n     * xAxis grid line calculation performed here\n     *\n     * @param {Axis} axis axis\n     * @param {number} index index\n     * @param {Element} parent parent\n     * @param {Rect} rect rect\n     * @returns {void}\n     */\n    CartesianAxisLayoutPanel.prototype.drawXAxisGridLine = function (axis, index, parent, rect) {\n        var isLogAxis = axis.valueType === 'Logarithmic';\n        var isCategoryAxis = axis.valueType.indexOf('Category') > -1;\n        var tempInterval;\n        var pointX = 0;\n        var majorGrid = '';\n        var majorTick = '';\n        var minorDirection;\n        var isOpposed = axis.isAxisOpposedPosition;\n        var tickSize = (isOpposed) ? -axis.majorTickLines.height : axis.majorTickLines.height;\n        var axisLineSize = (isOpposed) ? -axis.lineStyle.width * 0.5 : axis.lineStyle.width * 0.5;\n        var scrollBarHeight = isNullOrUndefined(axis.crossesAt) ? isOpposed ? -axis.scrollBarHeight :\n            axis.scrollBarHeight : 0;\n        var ticksbwtLabel = (axis.valueType.indexOf('Category') > -1 && axis.labelPlacement === 'BetweenTicks') ?\n            0.5 : 0;\n        var length = axis.visibleLabels.length;\n        var isTickInside = axis.tickPosition === 'Inside';\n        var ticks = isTickInside ? (rect.y - tickSize - axisLineSize) : (rect.y + tickSize + axisLineSize + scrollBarHeight);\n        var chartThemeStyle = this.chart.themeStyle;\n        if (axis.valueType.indexOf('Category') > -1 && length > 0 && axis.labelPlacement === 'BetweenTicks') {\n            length += 1;\n        }\n        //Gridlines\n        for (var i = 0; i < length; i++) {\n            if (axis.valueType !== 'DateTimeCategory') {\n                tempInterval = axis.visibleLabels[i] ? axis.visibleLabels[i].value - ticksbwtLabel\n                    : (axis.visibleLabels[i - 1].value + axis.visibleRange.interval) - ticksbwtLabel;\n            }\n            else {\n                tempInterval = axis.visibleLabels[i] ?\n                    axis.visibleLabels[i].value - ticksbwtLabel : axis.visibleRange.max;\n            }\n            pointX = (valueToCoefficient(tempInterval, axis) * rect.width) + rect.x;\n            if (pointX >= rect.x && (rect.x + rect.width) >= pointX) {\n                if (inside(tempInterval, axis.visibleRange) || this.isBorder(axis, i, pointX)) {\n                    majorGrid = 'M ' + pointX + ' ' + (this.seriesClipRect.y + this.seriesClipRect.height) +\n                        ' L ' + pointX + ' ' + this.seriesClipRect.y;\n                    this.renderGridLine(axis, index, majorGrid, axis.majorGridLines, '_MajorGridLine_', i, this.element, chartThemeStyle.majorGridLine, axis.majorGridLines.dashArray);\n                }\n                majorTick = 'M ' + (pointX) + ' ' + (rect.y + axisLineSize + (isTickInside ? scrollBarHeight : 0))\n                    + ' L ' + (pointX) + ' ' + ticks;\n                this.renderGridLine(axis, index, majorTick, axis.majorTickLines, '_MajorTickLine_', i, parent, chartThemeStyle.majorTickLine);\n                if (axis.minorTicksPerInterval > 0 && (axis.minorGridLines.width > 0 || axis.minorTickLines.width > 0)) {\n                    if (i === 0 && isZoomSet(axis) && !isLogAxis && !isCategoryAxis) {\n                        this.renderMinorGridOnZooming(axis, tempInterval, rect, i, index, chartThemeStyle, parent);\n                    }\n                    minorDirection = this.drawAxisMinorLine(axis, tempInterval, rect, i);\n                    this.renderGridLine(axis, index, minorDirection[0], axis.minorGridLines, '_MinorGridLine_', i, this.element, chartThemeStyle.minorGridLine, axis.minorGridLines.dashArray);\n                    this.renderGridLine(axis, index, minorDirection[1], axis.minorTickLines, '_MinorTickLine_', i, parent, chartThemeStyle.minorTickLine);\n                    if (i === length - 1 && isZoomSet(axis) && isLogAxis && !isCategoryAxis) {\n                        this.renderMinorGridOnZooming(axis, (tempInterval + axis.visibleRange.interval), rect, i, index, chartThemeStyle, parent);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To render missing minor grid lines while zooming\n     *\n     * @param {Axis} axis axis\n     * @param {number} tempInterval tempInterval\n     * @param {Rect} rect rect\n     * @param {number} i i\n     * @param {number} index index\n     * @param {IThemeStyle} chartThemeStyle chartThemeStyle\n     * @param {Element} parent parent\n     * @returns {void}\n     */\n    CartesianAxisLayoutPanel.prototype.renderMinorGridOnZooming = function (axis, tempInterval, rect, i, index, chartThemeStyle, parent) {\n        var minorDirection = this.drawAxisMinorLine(axis, tempInterval, rect, i, true);\n        this.renderGridLine(axis, index, minorDirection[0], axis.minorGridLines, '_MinorGridLine_', -1, this.element, chartThemeStyle.minorGridLine, axis.minorGridLines.dashArray);\n        this.renderGridLine(axis, index, minorDirection[1], axis.minorTickLines, '_MinorTickLine_', -1, parent, chartThemeStyle.minorTickLine);\n    };\n    /**\n     * To calcualte the axis minor line\n     *\n     * @param {Axis} axis axis\n     * @param {number} tempInterval tempInterval\n     * @param {Rect} rect rect\n     * @param {number} labelIndex labelIndex\n     * @param {boolean} isFirstLabel isFirstLabel\n     * @returns {string[]} axis minor line path\n     */\n    CartesianAxisLayoutPanel.prototype.drawAxisMinorLine = function (axis, tempInterval, rect, labelIndex, isFirstLabel) {\n        var value = tempInterval;\n        var coor = 0;\n        var position = 0;\n        var range = axis.visibleRange;\n        var isTickInside = axis.tickPosition === 'Inside';\n        var direction = [];\n        var tickSize = axis.isAxisOpposedPosition ? -axis.minorTickLines.height : axis.minorTickLines.height;\n        var logStart;\n        var logEnd;\n        var logInterval = 1;\n        var logPosition = 1;\n        var ticksX = isTickInside ? (rect.y - tickSize) : (rect.y + tickSize);\n        var ticksY = isTickInside ? (rect.x + tickSize) : (rect.x - tickSize);\n        var minorGird = '';\n        var minorTick = '';\n        var isInverse = axis.isAxisInverse;\n        if (axis.valueType === 'Logarithmic') {\n            logStart = Math.pow(axis.logBase, value - range.interval);\n            logEnd = Math.pow(axis.logBase, value);\n            logInterval = (logEnd - logStart) / (axis.minorTicksPerInterval + 1);\n            logPosition = logStart + logInterval;\n        }\n        if (axis.orientation === 'Horizontal') {\n            for (var j = 0; j < axis.minorTicksPerInterval; j++) {\n                value = this.findLogNumeric(axis, logPosition, value, labelIndex, isFirstLabel);\n                logPosition += logInterval;\n                if (inside(value, range)) {\n                    position = ((value - range.min) / (range.max - range.min));\n                    position = Math.ceil((isInverse ? (1 - position) : position) * rect.width);\n                    coor = (Math.floor(position + rect.x));\n                    minorGird = minorGird.concat('M' + ' ' + coor + ' ' + (this.seriesClipRect.y)\n                        + 'L ' + coor + ' ' + (this.seriesClipRect.y + this.seriesClipRect.height));\n                    coor = (Math.floor(position + rect.x));\n                    minorTick = minorTick.concat('M' + ' ' + coor + ' ' + (rect.y)\n                        + 'L ' + coor + ' ' + (ticksX + axis.scrollBarHeight));\n                }\n            }\n        }\n        else {\n            for (var j = 0; j < axis.minorTicksPerInterval; j++) {\n                value = this.findLogNumeric(axis, logPosition, value, labelIndex, isFirstLabel);\n                if (inside(value, range)) {\n                    position = ((value - range.min) / (range.max - range.min));\n                    position = Math.ceil(((isInverse ? (1 - position) : position)) * rect.height) * -1; // For inversed axis\n                    coor = (Math.floor(position + rect.y + rect.height));\n                    minorGird = minorGird.concat('M' + ' ' + (this.seriesClipRect.x) + ' ' + coor\n                        + 'L ' + (this.seriesClipRect.x + this.seriesClipRect.width) + ' ' + coor + ' ');\n                    coor = (Math.floor(position + rect.y + rect.height));\n                    minorTick = minorTick.concat('M' + ' ' + rect.x + ' ' + coor + 'L ' + (ticksY - axis.scrollBarHeight) +\n                        ' ' + coor + ' ');\n                }\n                logPosition += logInterval;\n            }\n        }\n        direction.push(minorGird);\n        direction.push(minorTick);\n        return direction;\n    };\n    /**\n     * To find the numeric value of the log\n     *\n     * @param {Axis} axis axis\n     * @param {number} logPosition logPosition\n     * @param {number} value value\n     * @param {number} labelIndex labelIndex\n     * @param {boolean} isFirstLabel isFirstLabel\n     * @returns {number} value\n     */\n    CartesianAxisLayoutPanel.prototype.findLogNumeric = function (axis, logPosition, value, labelIndex, isFirstLabel) {\n        var range = axis.visibleRange;\n        var tempValue;\n        if (axis.valueType === 'Logarithmic') {\n            value = logBase(logPosition, axis.logBase);\n        }\n        else if (axis.valueType === 'DateTime') {\n            tempValue = axis.dateTimeInterval / (axis.minorTicksPerInterval + 1);\n            value = isFirstLabel ? (value - tempValue) : (value + tempValue);\n        }\n        else if (axis.valueType === 'DateTimeCategory') {\n            var padding = axis.labelPlacement === 'BetweenTicks' ? 0.5 : 0;\n            value += ((axis.visibleLabels[labelIndex + 1] ?\n                axis.visibleLabels[labelIndex + 1].value - padding : axis.visibleRange.max) -\n                (axis.visibleLabels[labelIndex] ?\n                    axis.visibleLabels[labelIndex].value - padding : axis.visibleRange.min)) /\n                (axis.minorTicksPerInterval + 1);\n        }\n        else {\n            tempValue = range.interval / (axis.minorTicksPerInterval + 1);\n            value = isFirstLabel ? (value - tempValue) : (value + tempValue);\n        }\n        return value;\n    };\n    /**\n     * To render the xAxis Labels\n     *\n     * @param {Axis} axis axis\n     * @param {number} index index\n     * @param {Element} parent parent\n     * @param {Rect} rect rect\n     * @returns {void}\n     * @private\n     */\n    CartesianAxisLayoutPanel.prototype.drawXAxisLabels = function (axis, index, parent, rect) {\n        var chart = this.chart;\n        var pointX = 0;\n        var pointY = 0;\n        var labelSpace = axis.labelPadding;\n        var labelHeight;\n        var elementSize;\n        var labelPadding;\n        var anchor;\n        var pixel = 10;\n        var labelElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisLabels' + index });\n        var islabelInside = axis.labelPosition === 'Inside';\n        var isOpposed = axis.isAxisOpposedPosition;\n        var tickSpace = axis.labelPosition === axis.tickPosition ? axis.majorTickLines.height : 0;\n        var padding = tickSpace + labelSpace + axis.lineStyle.width * 0.5;\n        var angle = axis.angle % 360;\n        var isHorizontalAngle = (angle === 0 || angle === -180 || angle === 180);\n        var options;\n        var labelWidth;\n        var isInverse = axis.isAxisInverse;\n        var previousEnd = isInverse ? (rect.x + rect.width) : rect.x;\n        var width = 0;\n        var length = axis.visibleLabels.length;\n        var intervalLength;\n        var label;\n        var isAxisBreakLabel;\n        var scrollBarHeight = axis.scrollbarSettings.enable || (!islabelInside && isNullOrUndefined(axis.crossesAt)\n            && (axis.zoomFactor < 1 || axis.zoomPosition > 0)) ? axis.scrollBarHeight : 0;\n        var newPoints = [];\n        var isRotatedLabelIntersect = false;\n        padding += (angle === 90 || angle === 270 || angle === -90 || angle === -270) ? (islabelInside ? 5 : -5) : 0;\n        var isLabelUnderAxisLine = ((!isOpposed && !islabelInside) || (isOpposed && islabelInside));\n        var isEndAnchor = isLabelUnderAxisLine ?\n            ((360 >= angle && angle >= 180) || (-1 >= angle && angle >= -180)) :\n            ((1 <= angle && angle <= 180) || (-181 >= angle && angle >= -360));\n        for (var i = 0, len = length; i < len; i++) {\n            label = axis.visibleLabels[i];\n            isAxisBreakLabel = isBreakLabel(label.originalText);\n            pointX = (valueToCoefficient(label.value, axis) * rect.width) + rect.x;\n            elementSize = label.size;\n            intervalLength = rect.width / length;\n            labelWidth = isAxisBreakLabel ? label.breakLabelSize.width : elementSize.width;\n            width = ((axis.labelIntersectAction === 'Trim' || axis.labelIntersectAction === 'Wrap') && angle === 0 &&\n                labelWidth > intervalLength) ? intervalLength : labelWidth;\n            labelHeight = elementSize.height / 4;\n            pointX -= (isAxisBreakLabel || angle !== 0) ? 0 : (width / 2);\n            // label X value adjustment for label rotation (Start)\n            if (angle !== 0) {\n                if (isAxisBreakLabel) {\n                    pointX -= axis.lineBreakAlignment === 'Left' ? (label.breakLabelSize.width / 2) : axis.lineBreakAlignment === 'Right' ?\n                        -(label.breakLabelSize.width / 2) : 0;\n                }\n                else {\n                    pointX -= (angle === -90 || angle === 270 ? -labelHeight : (angle === 90 || angle === -270) ? labelHeight : 0);\n                }\n            }\n            // label X value adjustment for label rotation (End)\n            if (axis.labelStyle.textAlignment === 'Far') {\n                pointX = pointX + width - pixel;\n            }\n            else if (axis.labelStyle.textAlignment === 'Near') {\n                pointX = pointX - width + pixel;\n            }\n            else if (axis.labelStyle.textAlignment === 'Center') {\n                // eslint-disable-next-line no-self-assign\n                pointX = pointX;\n            }\n            // For line break label alignment like left, right & center in angle 0\n            if (isAxisBreakLabel && axis.lineBreakAlignment !== 'Center' && angle === 0) {\n                pointX += axis.lineBreakAlignment === 'Left' ? -(width / 2) : (width / 2);\n            }\n            var paddingForBreakLabel = isAxisBreakLabel ?\n                (isHorizontalAngle ? (elementSize.height) : (label.breakLabelSize.width / 2)) : 0;\n            padding = isAxisBreakLabel ? (tickSpace + labelSpace + axis.lineStyle.width * 0.5) : padding;\n            // label Y value adjustment (Start)\n            if (islabelInside && angle) {\n                if (isAxisBreakLabel) {\n                    pointY = isOpposed ? (rect.y + padding + (paddingForBreakLabel)) : (rect.y - padding - (paddingForBreakLabel));\n                }\n                else {\n                    pointY = isOpposed ? (rect.y + padding + labelHeight) : (rect.y - padding - labelHeight);\n                }\n            }\n            else {\n                if (isAxisBreakLabel) {\n                    labelPadding = !isLabelUnderAxisLine ? -(padding + scrollBarHeight + (paddingForBreakLabel)) :\n                        padding + scrollBarHeight + (angle ? paddingForBreakLabel : (3 * labelHeight));\n                }\n                else {\n                    labelPadding = !isLabelUnderAxisLine ?\n                        -(padding + scrollBarHeight + (angle ? labelHeight : (label.index > 1 ? (2 * labelHeight) : 0))) :\n                        padding + scrollBarHeight + ((angle ? 1 : 3) * labelHeight);\n                }\n                pointY = (rect.y + (labelPadding * label.index));\n            }\n            // label Y value adjustment (End)\n            if (isAxisBreakLabel) {\n                anchor = this.getAnchor(axis); // for break label self alignment\n            }\n            else {\n                anchor = (chart.enableRtl) ? ((isEndAnchor) ? '' : 'end') : (chart.isRtlEnabled || isEndAnchor) ? 'end' : '';\n            }\n            options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY, anchor);\n            if (axis.edgeLabelPlacement) {\n                switch (axis.edgeLabelPlacement) {\n                    case 'None':\n                        break;\n                    case 'Hide':\n                        if (((i === 0 || (isInverse && i === len - 1)) && options.x < rect.x) ||\n                            ((i === len - 1 || (isInverse && i === 0)) && (options.x + width > rect.x + rect.width))) {\n                            continue;\n                        }\n                        break;\n                    case 'Shift':\n                        if ((i === 0 || (isInverse && i === len - 1)) && options.x < rect.x) {\n                            intervalLength -= (rect.x - options.x);\n                            options.x = pointX = !isHorizontalAngle ? rect.x + padding : rect.x;\n                        }\n                        else if ((i === len - 1 || (isInverse && i === 0)) && ((options.x + width) > rect.x + rect.width)) {\n                            if (elementSize.width > intervalLength && axis.labelIntersectAction === 'Trim') {\n                                intervalLength -= (options.x + width - (rect.x + rect.width));\n                            }\n                            else {\n                                intervalLength = width;\n                            }\n                            options.x = pointX = !isHorizontalAngle ? rect.x + rect.width - intervalLength / 2 : rect.x + rect.width - intervalLength;\n                        }\n                        if (this.chart.primaryYAxis.opposedPosition && i === 0 && options.x <= rect.x) {\n                            intervalLength -= (rect.x - options.x);\n                            options.x += rect.x + (width / 2);\n                            pointX += rect.x + (width / 2);\n                        }\n                        break;\n                }\n            }\n            options.text = this.getLabelText(label, axis, intervalLength);\n            // ------- Hide Calculation (Start) -------------\n            // Currect label actual start value (Start)\n            var xValue = void 0;\n            var xValue2 = void 0;\n            if (isAxisBreakLabel && angle === 0) {\n                if (axis.lineBreakAlignment === 'Right') {\n                    xValue = (options.x - width);\n                    xValue2 = options.x;\n                }\n                else if (axis.lineBreakAlignment === 'Center') {\n                    xValue = (options.x - (width / 2));\n                    xValue2 = options.x + (width / 2);\n                }\n                else {\n                    xValue = options.x;\n                    xValue2 = options.x + width;\n                }\n            }\n            else {\n                xValue = options.x;\n                xValue2 = options.x + width;\n            }\n            // Currect label actual start value (End)\n            if (angle === 0 && axis.labelIntersectAction === 'Hide' && i !== 0 &&\n                (!isInverse ? xValue <= previousEnd : xValue2 >= previousEnd)) {\n                continue;\n            }\n            // Previous label actual end value (Start)\n            if (isAxisBreakLabel) {\n                if (axis.lineBreakAlignment === 'Right') {\n                    previousEnd = isInverse ? (options.x - width) : options.x;\n                }\n                else if (axis.lineBreakAlignment === 'Center') {\n                    previousEnd = isInverse ? (options.x - (width / 2)) : options.x + (width / 2);\n                }\n                else {\n                    previousEnd = isInverse ? options.x : options.x + width;\n                }\n            }\n            else {\n                previousEnd = isInverse ? options.x : options.x + width;\n            }\n            // Previous label actual end value (End)\n            // ------- Hide Calculation (End) -------------\n            // label Rotataion calculation (Start)\n            if (angle !== 0) {\n                var height = void 0;\n                var rect_1 = void 0;\n                if (isAxisBreakLabel) {\n                    var xAdjustment = 0;\n                    var yAdjustment = 0;\n                    height = (label.breakLabelSize.height);\n                    yAdjustment = (label.breakLabelSize.height) - 4; // 4 for label bound correction\n                    // xAdjustment (Start)\n                    if (axis.lineBreakAlignment === 'Center') {\n                        xAdjustment = -(label.breakLabelSize.width / 2);\n                    }\n                    else if (axis.lineBreakAlignment === 'Right') {\n                        xAdjustment = -label.breakLabelSize.width;\n                    }\n                    // xAdjustment (End)\n                    if (isLabelUnderAxisLine) {\n                        yAdjustment = (label.breakLabelSize.height) / (options.text.length + 1);\n                    }\n                    rect_1 = new Rect(options.x + xAdjustment, options.y - (yAdjustment), label.breakLabelSize.width, height);\n                }\n                else {\n                    height = (pointY) - (options.y - ((label.size.height / 2) + 10));\n                    rect_1 = new Rect(options.x, options.y - ((label.size.height / 2) - 5), label.size.width, height);\n                }\n                var rectCoordinates = this.getRectanglePoints(rect_1);\n                var rectCenterX = isAxisBreakLabel ? rect_1.x + (rect_1.width / 2) : pointX;\n                var rectCenterY = isAxisBreakLabel ? rect_1.y + (rect_1.height / 2) : (pointY - (height / 2));\n                if (isAxisBreakLabel) {\n                    options.transform = 'rotate(' + angle + ',' + rectCenterX + ',' + rectCenterY + ')';\n                }\n                else {\n                    options.transform = 'rotate(' + angle + ',' + pointX + ',' + pointY + ')';\n                }\n                newPoints.push(getRotatedRectangleCoordinates(rectCoordinates, rectCenterX, rectCenterY, angle));\n                isRotatedLabelIntersect = false;\n                if (axis.labelIntersectAction !== 'None') {\n                    for (var index_1 = i; index_1 > 0; index_1--) {\n                        if (newPoints[i] && newPoints[index_1 - 1] && isRotatedRectIntersect(newPoints[i], newPoints[index_1 - 1])) {\n                            isRotatedLabelIntersect = true;\n                            newPoints[i] = null;\n                            break;\n                        }\n                    }\n                }\n            }\n            // label Rotataion calculation (End)\n            textElement(chart.renderer, options, label.labelStyle, label.labelStyle.color || chart.themeStyle.axisLabel, labelElement, (axis.isAxisOpposedPosition !== (axis.labelPosition === 'Inside')), chart.redraw, true, null, null, null, label.size, isRotatedLabelIntersect, chart.enableCanvas);\n        }\n        if (!this.chart.enableCanvas) {\n            if (!chart.delayRedraw) {\n                parent.appendChild(labelElement);\n            }\n            else if (axis.visible && axis.internalVisibility) {\n                this.createZoomingLabel(this.chart, labelElement, axis, index, rect);\n            }\n        }\n    };\n    /**\n     * To get text anchor value for line break labels.\n     *\n     * @param {Axis} axis axis model\n     * @returns {string} returns text anchor\n     */\n    CartesianAxisLayoutPanel.prototype.getAnchor = function (axis) {\n        return (axis.lineBreakAlignment === 'Center' ? 'middle' : (this.chart.enableRtl) ? (axis.lineBreakAlignment === 'Left' ? 'end' : 'start') : (axis.lineBreakAlignment === 'Left' ? 'start' : 'end'));\n    };\n    /**\n     * Get rect coordinates\n     *\n     * @param {Rect} rect rect\n     * @returns {ChartLocation[]} rectangle points\n     */\n    CartesianAxisLayoutPanel.prototype.getRectanglePoints = function (rect) {\n        var point1 = new ChartLocation(rect.x, rect.y);\n        var point2 = new ChartLocation(rect.x + rect.width, rect.y);\n        var point3 = new ChartLocation(rect.x + rect.width, rect.y + rect.height);\n        var point4 = new ChartLocation(rect.x, rect.y + rect.height);\n        return [point1, point2, point3, point4];\n    };\n    /**\n     * To get axis label text\n     *\n     * @param {VisibleLabels} label label\n     * @param {Axis} axis axis\n     * @param {number} intervalLength intervalLength\n     * @returns {string | string[]} label or label collection\n     */\n    CartesianAxisLayoutPanel.prototype.getLabelText = function (label, axis, intervalLength) {\n        if (isBreakLabel(label.originalText)) {\n            var result = [];\n            var str = void 0;\n            for (var index = 0; index < label.text.length; index++) {\n                str = this.findAxisLabel(axis, label.text[index], intervalLength);\n                result.push(str);\n            }\n            return result;\n        }\n        else {\n            return this.findAxisLabel(axis, label.text, intervalLength);\n        }\n    };\n    /**\n     * To render the x-axis label border.\n     *\n     * @param {Axis} axis axis\n     * @param {number} index index\n     * @param {Element} parent parent\n     * @param {Rect} axisRect axisRect\n     * @returns {void}\n     */\n    CartesianAxisLayoutPanel.prototype.drawXAxisBorder = function (axis, index, parent, axisRect) {\n        if (axis.border.width > 0) {\n            var scrollBarHeight = axis.labelPosition === 'Outside' ? axis.scrollBarHeight : 0;\n            var isOpposed = axis.isAxisOpposedPosition;\n            var startX = void 0;\n            var startY = axisRect.y + ((isOpposed ? -1 : 1) * scrollBarHeight);\n            var padding = 10;\n            var pointX = void 0;\n            var gap = (axisRect.width / axis.visibleRange.delta) * (axis.valueType === 'DateTime' ? axis.dateTimeInterval\n                : axis.visibleRange.interval);\n            var endX = void 0;\n            var length_2 = axis.maxLabelSize.height +\n                ((axis.tickPosition === axis.labelPosition) ? axis.majorTickLines.height : 0);\n            var labelBorder = '';\n            var ticksbwtLabel = (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') ? -0.5 : 0;\n            var endY = ((isOpposed && axis.labelPosition === 'Inside') ||\n                (!isOpposed && axis.labelPosition === 'Outside')) ?\n                (axisRect.y + length_2 + padding + scrollBarHeight) : (axisRect.y - length_2 - padding - scrollBarHeight);\n            for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\n                pointX = valueToCoefficient(axis.visibleLabels[i].value + ticksbwtLabel, axis);\n                pointX = (axis.isAxisInverse ? (1 - pointX) : pointX) * axisRect.width;\n                if (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') {\n                    startX = pointX + axisRect.x;\n                    endX = pointX + (gap) + axisRect.x;\n                }\n                else {\n                    startX = pointX - gap * 0.5 + axisRect.x;\n                    endX = pointX + gap * 0.5 + axisRect.x;\n                }\n                switch (axis.border.type) {\n                    case 'Rectangle':\n                    case 'WithoutTopBorder':\n                        if (startX < axisRect.x && axis.labelPlacement != \"OnTicks\") {\n                            labelBorder += ('M' + ' ' + axisRect.x + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ');\n                        }\n                        else if (Math.floor(endX) > axisRect.width + axisRect.x && !(axis.visibleLabels.length === 1) && !(i === axis.visibleLabels.length - 1)) {\n                            labelBorder += ('M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                                'L' + ' ' + (axisRect.width + axisRect.x) + ' ' + endY + ' ');\n                        }\n                        else {\n                            startX = (i === 0 && axis.labelPlacement == \"OnTicks\") ? axisRect.x : startX;\n                            endX = ((i === axis.visibleLabels.length - 1) && axis.labelPlacement == \"OnTicks\") ? endX - gap * 0.5 : endX;\n                            labelBorder += ('M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' +\n                                endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ');\n                            if (i === 0) {\n                                labelBorder += ('M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                                    'M ' + startX + ' ' + endY + ' L ' + (axisRect.x) + ' ' + endY);\n                            }\n                            if (i === axis.visibleLabels.length - 1) {\n                                labelBorder += ('M' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ' +\n                                    'M ' + endX + ' ' + endY + ' L ' + (axisRect.width + axisRect.x) + ' ' + endY);\n                            }\n                        }\n                        break;\n                    case 'WithoutTopandBottomBorder':\n                        if (!(startX < axisRect.x) && !(Math.floor(endX) > axisRect.width + axisRect.x)) {\n                            labelBorder += ('M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                                'M ' + endX + ' ' + startY + ' L ' + endX + ' ' + endY);\n                        }\n                        break;\n                }\n            }\n            labelBorder += (axis.border.type === 'Rectangle' ? ('M ' + ' ' + axisRect.x + ' ' + startY + 'L' + ' ' +\n                (axisRect.x + axisRect.width) + ' ' + startY) : '');\n            if (labelBorder !== '') {\n                this.createAxisBorderElement(axis, index, labelBorder, parent);\n            }\n        }\n        if (this.chart.multiLevelLabelModule && axis.multiLevelLabels.length > 0) {\n            this.chart.multiLevelLabelModule.renderXAxisMultiLevelLabels(axis, index, parent, axisRect);\n        }\n    };\n    /**\n     * To create border element of the axis\n     *\n     * @param {Axis} axis axis\n     * @param {number} index index\n     * @param {string} labelBorder labelBorder\n     * @param {Element} parent parent\n     * @returns {void}\n     */\n    CartesianAxisLayoutPanel.prototype.createAxisBorderElement = function (axis, index, labelBorder, parent) {\n        var element = getElement(this.chart.element.id + '_BorderLine_' + index);\n        var direction = element ? element.getAttribute('d') : '';\n        var borderElement = this.chart.renderer.drawPath(new PathOption(this.chart.element.id + '_BorderLine_' + index, 'transparent', axis.border.width, axis.border.color || this.chart.themeStyle.axisLine, 1, '', labelBorder));\n        borderElement.style.pointerEvents = 'none';\n        appendChildElement(this.chart.enableCanvas, parent, borderElement, this.chart.redraw, false, 'x', 'y', null, direction, true);\n    };\n    /**\n     * To find the axis label of the intersect action\n     *\n     * @param {Axis} axis axis\n     * @param {string} label label\n     * @param {number} width width\n     * @returns {string} label\n     */\n    CartesianAxisLayoutPanel.prototype.findAxisLabel = function (axis, label, width) {\n        return (axis.labelIntersectAction === 'Trim' ?\n            ((axis.angle % 360 === 0 && !axis.enableTrim) ? textTrim(width, label, axis.labelStyle) : label) : label);\n    };\n    /**\n     * X-Axis Title function performed\n     *\n     * @param {Axis} axis axis\n     * @param {number} index index\n     * @param {Element} parent parent\n     * @param {Rect} rect rect\n     * @returns {void}\n     */\n    CartesianAxisLayoutPanel.prototype.drawXAxisTitle = function (axis, index, parent, rect) {\n        if (axis.title) {\n            var chart = this.chart;\n            var elementSize = measureText(axis.title, axis.titleStyle);\n            var scrollBarHeight = isNullOrUndefined(axis.crossesAt) ? axis.scrollBarHeight : 0;\n            var padding = (axis.tickPosition === 'Inside' ? 0 : axis.majorTickLines.height + axis.titlePadding) +\n                (axis.labelPosition === 'Inside' ? 0 :\n                    axis.maxLabelSize.height + axis.multiLevelLabelHeight + axis.labelPadding);\n            var titleSize = (axis.titleSize.height * (axis.titleCollection.length - 1));\n            padding = axis.isAxisOpposedPosition ? -(padding + elementSize.height / 4 + scrollBarHeight + titleSize) : (padding + (3 *\n                elementSize.height / 4) + scrollBarHeight);\n            var options = new TextOption(chart.element.id + '_AxisTitle_' + index, rect.x + rect.width * 0.5, rect.y + padding, 'middle', axis.titleCollection);\n            var element = textElement(chart.renderer, options, axis.titleStyle, axis.titleStyle.color || chart.themeStyle.axisTitle, parent, null, null, null, null, null, null, null, null, chart.enableCanvas);\n            element.setAttribute('aria-hidden', 'true');\n        }\n    };\n    /**\n     * To render the axis grid and tick lines(Both Major and Minor)\n     *\n     * @param {Axis} axis axis\n     * @param {number} index index\n     * @param {string} gridDirection gridDirection\n     * @param {MajorTickLinesModel | MinorTickLinesModel | MajorGridLinesModel | MinorGridLinesModel} gridModel gridModel\n     * @param {string} gridId gridId\n     * @param {number} gridIndex gridIndex\n     * @param {Element} parent parent\n     * @param {string} themeColor themeColor\n     * @param {string} dashArray dashArray\n     * @returns {void}\n     */\n    CartesianAxisLayoutPanel.prototype.renderGridLine = function (axis, index, gridDirection, gridModel, gridId, gridIndex, parent, themeColor, dashArray) {\n        if (dashArray === void 0) { dashArray = null; }\n        var chart = this.chart;\n        var direction;\n        var element;\n        if (gridModel.width > 0 && axis.visible && axis.internalVisibility && gridDirection) {\n            element = getElement(chart.element.id + gridId + index + '_' + gridIndex);\n            direction = element ? element.getAttribute('d') : null;\n            element = null;\n            this.htmlObject = chart.renderer.drawPath(new PathOption(chart.element.id + gridId + index + '_' + gridIndex, 'transparent', gridModel.width, gridModel.color || themeColor, null, dashArray, gridDirection));\n            appendChildElement(chart.enableCanvas, parent, this.htmlObject, chart.redraw, true, 'x', 'y', null, direction, true);\n        }\n    };\n    /**\n     * To Find the parent node of the axis\n     *\n     * @param {string} elementId elementId\n     * @param {Element} label label\n     * @param {number} index index\n     * @returns {Element} parent node of the axis\n     */\n    CartesianAxisLayoutPanel.prototype.findParentNode = function (elementId, label, index) {\n        if (document.getElementById(elementId + 'AxisGroup' + index + 'Inside').contains(document.getElementById(label.id))) {\n            return document.getElementById(elementId + 'AxisGroup' + index + 'Inside');\n        }\n        else {\n            return document.getElementById(elementId + 'AxisGroup' + index + 'Outside');\n        }\n    };\n    /**\n     * Create Zooming Labels Function Called here\n     *\n     * @param {Chart} chart chart\n     * @param {Element} labelElement labelElement\n     * @param {Axis} axis axis\n     * @param {number} index index\n     * @param {Rect} rect rect\n     * @returns {void}\n     */\n    CartesianAxisLayoutPanel.prototype.createZoomingLabel = function (chart, labelElement, axis, index, rect) {\n        var parentNode = this.findParentNode(chart.element.id, labelElement, index);\n        labelElement.setAttribute('opacity', '0.3');\n        var zoomElement = chart.renderer.createGroup({\n            id: chart.element.id + 'AxisLabels_Zoom' + index\n        });\n        zoomElement = createZoomingLabels(chart, axis, zoomElement, index, axis.orientation === 'Vertical', rect);\n        parentNode.replaceChild(labelElement, document.getElementById(labelElement.id));\n        if (getElement(chart.element.id + 'AxisLabels_Zoom' + index)) {\n            parentNode.replaceChild(zoomElement, document.getElementById(zoomElement.id));\n        }\n        else {\n            parentNode.appendChild(zoomElement);\n        }\n    };\n    return CartesianAxisLayoutPanel;\n}());\nexport { CartesianAxisLayoutPanel };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}