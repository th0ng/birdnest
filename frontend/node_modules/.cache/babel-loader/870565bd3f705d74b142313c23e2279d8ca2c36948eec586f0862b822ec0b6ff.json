{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { getActualDesiredIntervalsCount, triggerLabelRender } from '../../common/utils/helper';\nimport { DoubleRange } from '../utils/double-range';\nimport { withIn } from '../../common/utils/helper';\nimport { extend, getValue } from '@syncfusion/ej2-base';\nimport { NiceInterval } from '../axis/axis-helper';\n/**\n * `Category` module is used to render category axis.\n */\nvar Category = /** @class */function (_super) {\n  __extends(Category, _super);\n  /**\n   * Constructor for the category module.\n   *\n   * @private\n   */\n  function Category(chart) {\n    return _super.call(this, chart) || this;\n  }\n  /**\n   * The function to calculate the range and labels for the axis.\n   *\n   * @returns {void}\n   */\n  Category.prototype.calculateRangeAndInterval = function (size, axis) {\n    this.calculateRange(axis);\n    this.getActualRange(axis, size);\n    this.applyRangePadding(axis, size);\n    this.calculateVisibleLabels(axis);\n  };\n  /**\n   * Actual Range for the axis.\n   *\n   * @private\n   */\n  Category.prototype.getActualRange = function (axis, size) {\n    this.initializeDoubleRange(axis);\n    // axis.doubleRange = new DoubleRange(<number>this.min, <number>this.max);\n    axis.actualRange = {};\n    if (!axis.interval) {\n      axis.actualRange.interval = Math.max(1, Math.floor(axis.doubleRange.delta / getActualDesiredIntervalsCount(size, axis)));\n    } else {\n      axis.actualRange.interval = Math.ceil(axis.interval);\n    }\n    axis.actualRange.min = axis.doubleRange.start;\n    axis.actualRange.max = axis.doubleRange.end;\n    axis.actualRange.delta = axis.doubleRange.delta;\n  };\n  /**\n   * Padding for the axis.\n   *\n   * @private\n   */\n  Category.prototype.applyRangePadding = function (axis, size) {\n    var ticks = axis.labelPlacement === 'BetweenTicks' && this.chart.chartAreaType !== 'PolarRadar' ? 0.5 : 0;\n    if (ticks > 0) {\n      axis.actualRange.min -= ticks;\n      axis.actualRange.max += ticks;\n    } else {\n      axis.actualRange.max += axis.actualRange.max ? 0 : 0.5;\n    }\n    axis.doubleRange = new DoubleRange(axis.actualRange.min, axis.actualRange.max);\n    axis.actualRange.delta = axis.doubleRange.delta;\n    this.calculateVisibleRange(size, axis);\n  };\n  /**\n   * Calculate label for the axis.\n   *\n   * @private\n   */\n  Category.prototype.calculateVisibleLabels = function (axis) {\n    /*! Generate axis labels */\n    axis.visibleLabels = [];\n    axis.visibleRange.interval = axis.visibleRange.interval < 1 ? 1 : axis.visibleRange.interval;\n    var tempInterval = Math.ceil(axis.visibleRange.min);\n    var labelStyle;\n    if (axis.zoomFactor < 1 || axis.zoomPosition > 0) {\n      tempInterval = axis.visibleRange.min - axis.visibleRange.min % axis.visibleRange.interval;\n    }\n    var position;\n    axis.startLabel = axis.labels[Math.round(axis.visibleRange.min)];\n    axis.endLabel = axis.labels[Math.floor(axis.visibleRange.max)];\n    for (; tempInterval <= axis.visibleRange.max; tempInterval += axis.visibleRange.interval) {\n      labelStyle = extend({}, getValue('properties', axis.labelStyle), null, true);\n      if (withIn(tempInterval, axis.visibleRange) && axis.labels.length > 0) {\n        position = Math.round(tempInterval);\n        triggerLabelRender(this.chart, position, axis.labels[position] ? axis.labels[position].toString() : position.toString(), labelStyle, axis);\n      }\n    }\n    if (axis.getMaxLabelWidth) {\n      axis.getMaxLabelWidth(this.chart);\n    }\n  };\n  /**\n   * Get module name\n   */\n  Category.prototype.getModuleName = function () {\n    /**\n     * Returns the module name\n     */\n    return 'Category';\n  };\n  /**\n   * To destroy the category axis.\n   *\n   * @returns {void}\n   * @private\n   */\n  Category.prototype.destroy = function () {\n    /**\n     * Destroy method performed here\n     */\n  };\n  return Category;\n}(NiceInterval);\nexport { Category };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","getActualDesiredIntervalsCount","triggerLabelRender","DoubleRange","withIn","extend","getValue","NiceInterval","Category","_super","chart","call","calculateRangeAndInterval","size","axis","calculateRange","getActualRange","applyRangePadding","calculateVisibleLabels","initializeDoubleRange","actualRange","interval","Math","max","floor","doubleRange","delta","ceil","min","start","end","ticks","labelPlacement","chartAreaType","calculateVisibleRange","visibleLabels","visibleRange","tempInterval","labelStyle","zoomFactor","zoomPosition","position","startLabel","labels","round","endLabel","length","toString","getMaxLabelWidth","getModuleName","destroy"],"sources":["/Users/thonghoangdanh/FullStack/birdnest/node_modules/@syncfusion/ej2-charts/src/chart/axis/category-axis.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getActualDesiredIntervalsCount, triggerLabelRender } from '../../common/utils/helper';\nimport { DoubleRange } from '../utils/double-range';\nimport { withIn } from '../../common/utils/helper';\nimport { extend, getValue } from '@syncfusion/ej2-base';\nimport { NiceInterval } from '../axis/axis-helper';\n/**\n * `Category` module is used to render category axis.\n */\nvar Category = /** @class */ (function (_super) {\n    __extends(Category, _super);\n    /**\n     * Constructor for the category module.\n     *\n     * @private\n     */\n    function Category(chart) {\n        return _super.call(this, chart) || this;\n    }\n    /**\n     * The function to calculate the range and labels for the axis.\n     *\n     * @returns {void}\n     */\n    Category.prototype.calculateRangeAndInterval = function (size, axis) {\n        this.calculateRange(axis);\n        this.getActualRange(axis, size);\n        this.applyRangePadding(axis, size);\n        this.calculateVisibleLabels(axis);\n    };\n    /**\n     * Actual Range for the axis.\n     *\n     * @private\n     */\n    Category.prototype.getActualRange = function (axis, size) {\n        this.initializeDoubleRange(axis);\n        // axis.doubleRange = new DoubleRange(<number>this.min, <number>this.max);\n        axis.actualRange = {};\n        if (!axis.interval) {\n            axis.actualRange.interval = Math.max(1, Math.floor(axis.doubleRange.delta / getActualDesiredIntervalsCount(size, axis)));\n        }\n        else {\n            axis.actualRange.interval = Math.ceil(axis.interval);\n        }\n        axis.actualRange.min = axis.doubleRange.start;\n        axis.actualRange.max = axis.doubleRange.end;\n        axis.actualRange.delta = axis.doubleRange.delta;\n    };\n    /**\n     * Padding for the axis.\n     *\n     * @private\n     */\n    Category.prototype.applyRangePadding = function (axis, size) {\n        var ticks = (axis.labelPlacement === 'BetweenTicks' && this.chart.chartAreaType !== 'PolarRadar') ? 0.5 : 0;\n        if (ticks > 0) {\n            axis.actualRange.min -= ticks;\n            axis.actualRange.max += ticks;\n        }\n        else {\n            axis.actualRange.max += axis.actualRange.max ? 0 : 0.5;\n        }\n        axis.doubleRange = new DoubleRange(axis.actualRange.min, axis.actualRange.max);\n        axis.actualRange.delta = axis.doubleRange.delta;\n        this.calculateVisibleRange(size, axis);\n    };\n    /**\n     * Calculate label for the axis.\n     *\n     * @private\n     */\n    Category.prototype.calculateVisibleLabels = function (axis) {\n        /*! Generate axis labels */\n        axis.visibleLabels = [];\n        axis.visibleRange.interval = axis.visibleRange.interval < 1 ? 1 : axis.visibleRange.interval;\n        var tempInterval = Math.ceil(axis.visibleRange.min);\n        var labelStyle;\n        if (axis.zoomFactor < 1 || axis.zoomPosition > 0) {\n            tempInterval = axis.visibleRange.min - (axis.visibleRange.min % axis.visibleRange.interval);\n        }\n        var position;\n        axis.startLabel = axis.labels[Math.round(axis.visibleRange.min)];\n        axis.endLabel = axis.labels[Math.floor(axis.visibleRange.max)];\n        for (; tempInterval <= axis.visibleRange.max; tempInterval += axis.visibleRange.interval) {\n            labelStyle = (extend({}, getValue('properties', axis.labelStyle), null, true));\n            if (withIn(tempInterval, axis.visibleRange) && axis.labels.length > 0) {\n                position = Math.round(tempInterval);\n                triggerLabelRender(this.chart, position, axis.labels[position] ? axis.labels[position].toString() : position.toString(), labelStyle, axis);\n            }\n        }\n        if (axis.getMaxLabelWidth) {\n            axis.getMaxLabelWidth(this.chart);\n        }\n    };\n    /**\n     * Get module name\n     */\n    Category.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Category';\n    };\n    /**\n     * To destroy the category axis.\n     *\n     * @returns {void}\n     * @private\n     */\n    Category.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    return Category;\n}(NiceInterval));\nexport { Category };\n"],"mappings":"AAAA,IAAIA,SAAS,GAAI,IAAI,IAAI,IAAI,CAACA,SAAS,IAAM,YAAY;EACrD,IAAIC,aAAa,GAAG,UAAUC,CAAC,EAAEC,CAAC,EAAE;IAChCF,aAAa,GAAGG,MAAM,CAACC,cAAc,IAChC;MAAEC,SAAS,EAAE;IAAG,CAAC,YAAYC,KAAK,IAAI,UAAUL,CAAC,EAAEC,CAAC,EAAE;MAAED,CAAC,CAACI,SAAS,GAAGH,CAAC;IAAE,CAAE,IAC5E,UAAUD,CAAC,EAAEC,CAAC,EAAE;MAAE,KAAK,IAAIK,CAAC,IAAIL,CAAC,EAAE,IAAIA,CAAC,CAACM,cAAc,CAACD,CAAC,CAAC,EAAEN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IAAE,CAAC;IAC9E,OAAOP,aAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;EAC9B,CAAC;EACD,OAAO,UAAUD,CAAC,EAAEC,CAAC,EAAE;IACnBF,aAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;IACnB,SAASO,EAAE,GAAG;MAAE,IAAI,CAACC,WAAW,GAAGT,CAAC;IAAE;IACtCA,CAAC,CAACU,SAAS,GAAGT,CAAC,KAAK,IAAI,GAAGC,MAAM,CAACS,MAAM,CAACV,CAAC,CAAC,IAAIO,EAAE,CAACE,SAAS,GAAGT,CAAC,CAACS,SAAS,EAAE,IAAIF,EAAE,EAAE,CAAC;EACxF,CAAC;AACL,CAAC,EAAG;AACJ,SAASI,8BAA8B,EAAEC,kBAAkB,QAAQ,2BAA2B;AAC9F,SAASC,WAAW,QAAQ,uBAAuB;AACnD,SAASC,MAAM,QAAQ,2BAA2B;AAClD,SAASC,MAAM,EAAEC,QAAQ,QAAQ,sBAAsB;AACvD,SAASC,YAAY,QAAQ,qBAAqB;AAClD;AACA;AACA;AACA,IAAIC,QAAQ,GAAG,aAAe,UAAUC,MAAM,EAAE;EAC5CtB,SAAS,CAACqB,QAAQ,EAAEC,MAAM,CAAC;EAC3B;AACJ;AACA;AACA;AACA;EACI,SAASD,QAAQ,CAACE,KAAK,EAAE;IACrB,OAAOD,MAAM,CAACE,IAAI,CAAC,IAAI,EAAED,KAAK,CAAC,IAAI,IAAI;EAC3C;EACA;AACJ;AACA;AACA;AACA;EACIF,QAAQ,CAACT,SAAS,CAACa,yBAAyB,GAAG,UAAUC,IAAI,EAAEC,IAAI,EAAE;IACjE,IAAI,CAACC,cAAc,CAACD,IAAI,CAAC;IACzB,IAAI,CAACE,cAAc,CAACF,IAAI,EAAED,IAAI,CAAC;IAC/B,IAAI,CAACI,iBAAiB,CAACH,IAAI,EAAED,IAAI,CAAC;IAClC,IAAI,CAACK,sBAAsB,CAACJ,IAAI,CAAC;EACrC,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIN,QAAQ,CAACT,SAAS,CAACiB,cAAc,GAAG,UAAUF,IAAI,EAAED,IAAI,EAAE;IACtD,IAAI,CAACM,qBAAqB,CAACL,IAAI,CAAC;IAChC;IACAA,IAAI,CAACM,WAAW,GAAG,CAAC,CAAC;IACrB,IAAI,CAACN,IAAI,CAACO,QAAQ,EAAE;MAChBP,IAAI,CAACM,WAAW,CAACC,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,KAAK,CAACV,IAAI,CAACW,WAAW,CAACC,KAAK,GAAGzB,8BAA8B,CAACY,IAAI,EAAEC,IAAI,CAAC,CAAC,CAAC;IAC5H,CAAC,MACI;MACDA,IAAI,CAACM,WAAW,CAACC,QAAQ,GAAGC,IAAI,CAACK,IAAI,CAACb,IAAI,CAACO,QAAQ,CAAC;IACxD;IACAP,IAAI,CAACM,WAAW,CAACQ,GAAG,GAAGd,IAAI,CAACW,WAAW,CAACI,KAAK;IAC7Cf,IAAI,CAACM,WAAW,CAACG,GAAG,GAAGT,IAAI,CAACW,WAAW,CAACK,GAAG;IAC3ChB,IAAI,CAACM,WAAW,CAACM,KAAK,GAAGZ,IAAI,CAACW,WAAW,CAACC,KAAK;EACnD,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIlB,QAAQ,CAACT,SAAS,CAACkB,iBAAiB,GAAG,UAAUH,IAAI,EAAED,IAAI,EAAE;IACzD,IAAIkB,KAAK,GAAIjB,IAAI,CAACkB,cAAc,KAAK,cAAc,IAAI,IAAI,CAACtB,KAAK,CAACuB,aAAa,KAAK,YAAY,GAAI,GAAG,GAAG,CAAC;IAC3G,IAAIF,KAAK,GAAG,CAAC,EAAE;MACXjB,IAAI,CAACM,WAAW,CAACQ,GAAG,IAAIG,KAAK;MAC7BjB,IAAI,CAACM,WAAW,CAACG,GAAG,IAAIQ,KAAK;IACjC,CAAC,MACI;MACDjB,IAAI,CAACM,WAAW,CAACG,GAAG,IAAIT,IAAI,CAACM,WAAW,CAACG,GAAG,GAAG,CAAC,GAAG,GAAG;IAC1D;IACAT,IAAI,CAACW,WAAW,GAAG,IAAItB,WAAW,CAACW,IAAI,CAACM,WAAW,CAACQ,GAAG,EAAEd,IAAI,CAACM,WAAW,CAACG,GAAG,CAAC;IAC9ET,IAAI,CAACM,WAAW,CAACM,KAAK,GAAGZ,IAAI,CAACW,WAAW,CAACC,KAAK;IAC/C,IAAI,CAACQ,qBAAqB,CAACrB,IAAI,EAAEC,IAAI,CAAC;EAC1C,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIN,QAAQ,CAACT,SAAS,CAACmB,sBAAsB,GAAG,UAAUJ,IAAI,EAAE;IACxD;IACAA,IAAI,CAACqB,aAAa,GAAG,EAAE;IACvBrB,IAAI,CAACsB,YAAY,CAACf,QAAQ,GAAGP,IAAI,CAACsB,YAAY,CAACf,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAGP,IAAI,CAACsB,YAAY,CAACf,QAAQ;IAC5F,IAAIgB,YAAY,GAAGf,IAAI,CAACK,IAAI,CAACb,IAAI,CAACsB,YAAY,CAACR,GAAG,CAAC;IACnD,IAAIU,UAAU;IACd,IAAIxB,IAAI,CAACyB,UAAU,GAAG,CAAC,IAAIzB,IAAI,CAAC0B,YAAY,GAAG,CAAC,EAAE;MAC9CH,YAAY,GAAGvB,IAAI,CAACsB,YAAY,CAACR,GAAG,GAAId,IAAI,CAACsB,YAAY,CAACR,GAAG,GAAGd,IAAI,CAACsB,YAAY,CAACf,QAAS;IAC/F;IACA,IAAIoB,QAAQ;IACZ3B,IAAI,CAAC4B,UAAU,GAAG5B,IAAI,CAAC6B,MAAM,CAACrB,IAAI,CAACsB,KAAK,CAAC9B,IAAI,CAACsB,YAAY,CAACR,GAAG,CAAC,CAAC;IAChEd,IAAI,CAAC+B,QAAQ,GAAG/B,IAAI,CAAC6B,MAAM,CAACrB,IAAI,CAACE,KAAK,CAACV,IAAI,CAACsB,YAAY,CAACb,GAAG,CAAC,CAAC;IAC9D,OAAOc,YAAY,IAAIvB,IAAI,CAACsB,YAAY,CAACb,GAAG,EAAEc,YAAY,IAAIvB,IAAI,CAACsB,YAAY,CAACf,QAAQ,EAAE;MACtFiB,UAAU,GAAIjC,MAAM,CAAC,CAAC,CAAC,EAAEC,QAAQ,CAAC,YAAY,EAAEQ,IAAI,CAACwB,UAAU,CAAC,EAAE,IAAI,EAAE,IAAI,CAAE;MAC9E,IAAIlC,MAAM,CAACiC,YAAY,EAAEvB,IAAI,CAACsB,YAAY,CAAC,IAAItB,IAAI,CAAC6B,MAAM,CAACG,MAAM,GAAG,CAAC,EAAE;QACnEL,QAAQ,GAAGnB,IAAI,CAACsB,KAAK,CAACP,YAAY,CAAC;QACnCnC,kBAAkB,CAAC,IAAI,CAACQ,KAAK,EAAE+B,QAAQ,EAAE3B,IAAI,CAAC6B,MAAM,CAACF,QAAQ,CAAC,GAAG3B,IAAI,CAAC6B,MAAM,CAACF,QAAQ,CAAC,CAACM,QAAQ,EAAE,GAAGN,QAAQ,CAACM,QAAQ,EAAE,EAAET,UAAU,EAAExB,IAAI,CAAC;MAC9I;IACJ;IACA,IAAIA,IAAI,CAACkC,gBAAgB,EAAE;MACvBlC,IAAI,CAACkC,gBAAgB,CAAC,IAAI,CAACtC,KAAK,CAAC;IACrC;EACJ,CAAC;EACD;AACJ;AACA;EACIF,QAAQ,CAACT,SAAS,CAACkD,aAAa,GAAG,YAAY;IAC3C;AACR;AACA;IACQ,OAAO,UAAU;EACrB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIzC,QAAQ,CAACT,SAAS,CAACmD,OAAO,GAAG,YAAY;IACrC;AACR;AACA;EAFQ,CAGH;EACD,OAAO1C,QAAQ;AACnB,CAAC,CAACD,YAAY,CAAE;AAChB,SAASC,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}