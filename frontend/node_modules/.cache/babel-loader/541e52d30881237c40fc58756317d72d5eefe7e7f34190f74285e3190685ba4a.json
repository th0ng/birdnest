{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { Series } from '../series/chart-series';\nimport { ColumnBase } from './column-base';\nimport { Axis } from '../axis/axis';\n/**\n * `Pareto series` module used to render the Pareto series.\n */\nvar ParetoSeries = /** @class */function (_super) {\n  __extends(ParetoSeries, _super);\n  function ParetoSeries() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.paretoAxes = [];\n    return _this;\n  }\n  /**\n   * Defines the Line initialization\n   */\n  ParetoSeries.prototype.initSeries = function (targetSeries, chart) {\n    var series = new Series(chart, 'series', targetSeries.properties, true);\n    series.name = 'Pareto';\n    series.yAxisName = targetSeries.yAxisName + '_CumulativeAxis';\n    series.category = 'Pareto';\n    targetSeries.category = 'Pareto';\n    series.type = 'Line';\n    series.interior = chart.themeStyle.errorBar;\n    chart.visibleSeries.push(series);\n    this.initAxis(targetSeries, series, chart);\n  };\n  /**\n   * Defines the Axis initialization for Line\n   */\n  ParetoSeries.prototype.initAxis = function (paretoSeries, targetSeries, chart) {\n    var isExist = this.paretoAxes.some(function (currentAxis) {\n      return currentAxis.name === targetSeries.yAxisName;\n    });\n    if (!isExist) {\n      var secondaryAxis = paretoSeries.yAxisName ? chart.axes.filter(function (axis) {\n        return axis.name === paretoSeries.yAxisName;\n      })[0] : chart.primaryYAxis;\n      var newAxis = new Axis(chart, 'axis', {\n        name: targetSeries.yAxisName,\n        majorGridLines: {\n          width: 0\n        },\n        majorTickLines: secondaryAxis.majorTickLines,\n        lineStyle: secondaryAxis.lineStyle,\n        minimum: 0,\n        maximum: 100,\n        rowIndex: secondaryAxis.rowIndex,\n        opposedPosition: true,\n        labelFormat: '{value}%'\n      });\n      this.paretoAxes.push(newAxis);\n    }\n  };\n  /**\n   * Render Pareto series.\n   *\n   * @returns {void}\n   * @private\n   */\n  ParetoSeries.prototype.render = function (series) {\n    series.chart.columnSeriesModule.render(series);\n  };\n  /**\n   * To perform the cumulative calculation for pareto series.\n   */\n  ParetoSeries.prototype.performCumulativeCalculation = function (json, series) {\n    var data = json;\n    var sum = 0;\n    var count = 0;\n    var length = data.length;\n    for (var i = 0; i < length; i++) {\n      sum += data[i][series.yName];\n    }\n    for (var i = 0; i < length; i++) {\n      count = count + data[i][series.yName];\n      data[i][series.yName] = Math.round(count / sum * 100);\n    }\n    return data;\n  };\n  /**\n   * Animates the series.\n   *\n   * @param  {Series} series - Defines the series to animate.\n   * @returns {void}\n   */\n  ParetoSeries.prototype.doAnimation = function (series) {\n    this.animate(series);\n  };\n  /**\n   * Get module name.\n   */\n  ParetoSeries.prototype.getModuleName = function () {\n    return 'ParetoSeries';\n    /**\n     * return the module name\n     */\n  };\n  /**\n   * To destroy the pareto series.\n   *\n   * @returns {void}\n   * @private\n   */\n  ParetoSeries.prototype.destroy = function () {\n    /**\n     * Destroy method performed here\n     */\n  };\n  return ParetoSeries;\n}(ColumnBase);\nexport { ParetoSeries };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Series","ColumnBase","Axis","ParetoSeries","_super","_this","apply","arguments","paretoAxes","initSeries","targetSeries","chart","series","properties","name","yAxisName","category","type","interior","themeStyle","errorBar","visibleSeries","push","initAxis","paretoSeries","isExist","some","currentAxis","secondaryAxis","axes","filter","axis","primaryYAxis","newAxis","majorGridLines","width","majorTickLines","lineStyle","minimum","maximum","rowIndex","opposedPosition","labelFormat","render","columnSeriesModule","performCumulativeCalculation","json","data","sum","count","length","i","yName","Math","round","doAnimation","animate","getModuleName","destroy"],"sources":["/Users/thonghoangdanh/FullStack/birdnest/node_modules/@syncfusion/ej2-charts/src/chart/series/pareto-series.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Series } from '../series/chart-series';\nimport { ColumnBase } from './column-base';\nimport { Axis } from '../axis/axis';\n/**\n * `Pareto series` module used to render the Pareto series.\n */\nvar ParetoSeries = /** @class */ (function (_super) {\n    __extends(ParetoSeries, _super);\n    function ParetoSeries() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.paretoAxes = [];\n        return _this;\n    }\n    /**\n     * Defines the Line initialization\n     */\n    ParetoSeries.prototype.initSeries = function (targetSeries, chart) {\n        var series = new Series(chart, 'series', targetSeries.properties, true);\n        series.name = 'Pareto';\n        series.yAxisName = targetSeries.yAxisName + '_CumulativeAxis';\n        series.category = 'Pareto';\n        targetSeries.category = 'Pareto';\n        series.type = 'Line';\n        series.interior = chart.themeStyle.errorBar;\n        chart.visibleSeries.push(series);\n        this.initAxis(targetSeries, series, chart);\n    };\n    /**\n     * Defines the Axis initialization for Line\n     */\n    ParetoSeries.prototype.initAxis = function (paretoSeries, targetSeries, chart) {\n        var isExist = this.paretoAxes.some(function (currentAxis) {\n            return currentAxis.name === targetSeries.yAxisName;\n        });\n        if (!isExist) {\n            var secondaryAxis = (paretoSeries.yAxisName ? chart.axes.filter(function (axis) {\n                return axis.name === paretoSeries.yAxisName;\n            })[0] : chart.primaryYAxis);\n            var newAxis = new Axis(chart, 'axis', {\n                name: targetSeries.yAxisName,\n                majorGridLines: {\n                    width: 0\n                },\n                majorTickLines: secondaryAxis.majorTickLines,\n                lineStyle: secondaryAxis.lineStyle,\n                minimum: 0,\n                maximum: 100,\n                rowIndex: secondaryAxis.rowIndex,\n                opposedPosition: true,\n                labelFormat: '{value}%'\n            });\n            this.paretoAxes.push(newAxis);\n        }\n    };\n    /**\n     * Render Pareto series.\n     *\n     * @returns {void}\n     * @private\n     */\n    ParetoSeries.prototype.render = function (series) {\n        series.chart.columnSeriesModule.render(series);\n    };\n    /**\n     * To perform the cumulative calculation for pareto series.\n     */\n    ParetoSeries.prototype.performCumulativeCalculation = function (json, series) {\n        var data = json;\n        var sum = 0;\n        var count = 0;\n        var length = data.length;\n        for (var i = 0; i < length; i++) {\n            sum += data[i][series.yName];\n        }\n        for (var i = 0; i < length; i++) {\n            count = count + data[i][series.yName];\n            data[i][series.yName] = Math.round((count / sum) * 100);\n        }\n        return data;\n    };\n    /**\n     * Animates the series.\n     *\n     * @param  {Series} series - Defines the series to animate.\n     * @returns {void}\n     */\n    ParetoSeries.prototype.doAnimation = function (series) {\n        this.animate(series);\n    };\n    /**\n     * Get module name.\n     */\n    ParetoSeries.prototype.getModuleName = function () {\n        return 'ParetoSeries';\n        /**\n         * return the module name\n         */\n    };\n    /**\n     * To destroy the pareto series.\n     *\n     * @returns {void}\n     * @private\n     */\n    ParetoSeries.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    return ParetoSeries;\n}(ColumnBase));\nexport { ParetoSeries };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}