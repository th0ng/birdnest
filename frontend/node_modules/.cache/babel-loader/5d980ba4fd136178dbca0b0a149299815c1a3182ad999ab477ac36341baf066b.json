{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { TechnicalAnalysis } from './indicator-base';\n/**\n * `AccumulationDistributionIndicator` module is used to render accumulation distribution indicator.\n */\nvar AccumulationDistributionIndicator = /** @class */function (_super) {\n  __extends(AccumulationDistributionIndicator, _super);\n  function AccumulationDistributionIndicator() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Defines the predictions using accumulation distribution approach\n   *\n   * @private\n   */\n  AccumulationDistributionIndicator.prototype.initDataSource = function (indicator) {\n    var adPoints = [];\n    var validData = indicator.points;\n    if (validData.length > 0 && validData.length > indicator.period) {\n      adPoints = this.calculateADPoints(indicator, validData);\n    }\n    this.setSeriesRange(adPoints, indicator);\n  };\n  /**\n   *  Calculates the Accumulation Distribution values\n   *\n   * @private\n   */\n  AccumulationDistributionIndicator.prototype.calculateADPoints = function (indicator, validData) {\n    var temp = [];\n    var sum = 0;\n    var i = 0;\n    var value = 0;\n    var high = 0;\n    var low = 0;\n    var close = 0;\n    var signalSeries = indicator.targetSeries[0];\n    for (i = 0; i < validData.length; i++) {\n      high = Number(validData[i].high);\n      low = Number(validData[i].low);\n      close = Number(validData[i].close);\n      /**\n       * Money Flow Multiplier = [(Close -  Low) - (High - Close)] /(High - Low)\n       * Money Flow Volume = Money Flow Multiplier x Volume for the Period\n       * ADL = Previous ADL + Current Period's Money Flow Volume\n       */\n      value = (close - low - (high - close)) / (high - low);\n      /**\n       * Sum is to calculate the Y values of the Accumulation distribution indicator\n       */\n      sum = sum + value * Number(validData[i].volume);\n      /**\n       * To calculate the x and y values for the Accumulation distribution indicator\n       */\n      temp[i] = this.getDataPoint(validData[i].x, sum, validData[i], signalSeries, temp.length);\n    }\n    return temp;\n  };\n  /**\n   * To destroy the Accumulation Distribution Technical Indicator.\n   *\n   * @returns {void}\n   * @private\n   */\n  AccumulationDistributionIndicator.prototype.destroy = function () {\n    /**\n     * Destroys the Accumulation Distribution Technical indicator\n     */\n  };\n  /**\n   * Get module name.\n   */\n  AccumulationDistributionIndicator.prototype.getModuleName = function () {\n    /**\n     * Returns the module name of the Indicator\n     */\n    return 'AccumulationDistributionIndicator';\n  };\n  return AccumulationDistributionIndicator;\n}(TechnicalAnalysis);\nexport { AccumulationDistributionIndicator };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","TechnicalAnalysis","AccumulationDistributionIndicator","_super","apply","arguments","initDataSource","indicator","adPoints","validData","points","length","period","calculateADPoints","setSeriesRange","temp","sum","i","value","high","low","close","signalSeries","targetSeries","Number","volume","getDataPoint","x","destroy","getModuleName"],"sources":["/Users/thonghoangdanh/FullStack/birdnest/node_modules/@syncfusion/ej2-charts/src/chart/technical-indicators/ad-indicator.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { TechnicalAnalysis } from './indicator-base';\n/**\n * `AccumulationDistributionIndicator` module is used to render accumulation distribution indicator.\n */\nvar AccumulationDistributionIndicator = /** @class */ (function (_super) {\n    __extends(AccumulationDistributionIndicator, _super);\n    function AccumulationDistributionIndicator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Defines the predictions using accumulation distribution approach\n     *\n     * @private\n     */\n    AccumulationDistributionIndicator.prototype.initDataSource = function (indicator) {\n        var adPoints = [];\n        var validData = indicator.points;\n        if (validData.length > 0 && validData.length > indicator.period) {\n            adPoints = this.calculateADPoints(indicator, validData);\n        }\n        this.setSeriesRange(adPoints, indicator);\n    };\n    /**\n     *  Calculates the Accumulation Distribution values\n     *\n     * @private\n     */\n    AccumulationDistributionIndicator.prototype.calculateADPoints = function (indicator, validData) {\n        var temp = [];\n        var sum = 0;\n        var i = 0;\n        var value = 0;\n        var high = 0;\n        var low = 0;\n        var close = 0;\n        var signalSeries = indicator.targetSeries[0];\n        for (i = 0; i < validData.length; i++) {\n            high = Number(validData[i].high);\n            low = Number(validData[i].low);\n            close = Number(validData[i].close);\n            /**\n             * Money Flow Multiplier = [(Close -  Low) - (High - Close)] /(High - Low)\n             * Money Flow Volume = Money Flow Multiplier x Volume for the Period\n             * ADL = Previous ADL + Current Period's Money Flow Volume\n             */\n            value = ((close - low) - (high - close)) / (high - low);\n            /**\n             * Sum is to calculate the Y values of the Accumulation distribution indicator\n             */\n            sum = sum + value * Number(validData[i].volume);\n            /**\n             * To calculate the x and y values for the Accumulation distribution indicator\n             */\n            temp[i] = this.getDataPoint(validData[i].x, sum, validData[i], signalSeries, temp.length);\n        }\n        return temp;\n    };\n    /**\n     * To destroy the Accumulation Distribution Technical Indicator.\n     *\n     * @returns {void}\n     * @private\n     */\n    AccumulationDistributionIndicator.prototype.destroy = function () {\n        /**\n         * Destroys the Accumulation Distribution Technical indicator\n         */\n    };\n    /**\n     * Get module name.\n     */\n    AccumulationDistributionIndicator.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the Indicator\n         */\n        return 'AccumulationDistributionIndicator';\n    };\n    return AccumulationDistributionIndicator;\n}(TechnicalAnalysis));\nexport { AccumulationDistributionIndicator };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}