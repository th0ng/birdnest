{"ast":null,"code":"var _jsxFileName = \"/Users/thonghoangdanh/FullStack/birdnest/src/components/Body.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport birdnestService from '../services/birdnest';\n\n//construction for drone data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction droneConstructor(serialNumber, positionX, positionY, closestDistance, pilotInformation) {\n  this.serialNumber = serialNumber;\n  this.positionX = positionX;\n  this.positionY = positionY;\n  this.closestDistance = closestDistance;\n  this.pilotInformation = pilotInformation;\n}\n;\n\n//Body\nconst Body = _ref => {\n  _s();\n  let {\n    drones\n  } = _ref;\n  //device data, stay static\n  const device = drones.children[0];\n  //drones data, updated every 2 seconds\n  const dronesData = drones.children[1].children;\n\n  //array to store the data\n  const [violatingDrones, setViolatingDrones] = useState([]);\n  useEffect(() => {\n    //Looping through the data\n    for (const drone of dronesData) {\n      //Check if the position is in the no-fly zone\n      const distance = Math.hypot(Math.abs(drone.children[8].value - 250000), Math.abs(drone.children[7].value - 250000));\n      if (distance < 100000) {\n        //Check if there's already that drone in the array, if so update the timestamp, else update the array with the new drone\n        const found = violatingDrones.find(obj => obj.data.serialNumber === drone.children[0].value);\n        if (found) {\n          const updatedClosestDistance = distance < found.data.distance ? distance : found.data.closestDistance;\n          //Define the updated piece of data\n          const updatedDroneData = new droneConstructor(found.data.serialNumber, drone.children[8].value, drone.children[7].value, updatedClosestDistance, found.data.pilotInformation);\n          const updatedDrone = {\n            data: updatedDroneData,\n            time: Date.now()\n          };\n          const updatedDronesArray = violatingDrones.map(drone => drone.data.serialNumber === updatedDrone.data.serialNumber ? updatedDrone : drone);\n          setViolatingDrones(updatedDronesArray);\n        } else {\n          //If there's not the drone in the array, get the pilot information and make a new data by constructor, after that add new data to the array and update the array\n          birdnestService.getPilotInformation(drone.children[0].value).then(pilotInformation => {\n            const newViolatingDrone = {\n              data: new droneConstructor(drone.children[0].value, drone.children[8].value, drone.children[7].value, distance, pilotInformation),\n              time: Date.now()\n            };\n            setViolatingDrones([newViolatingDrone, ...violatingDrones]);\n          });\n        }\n      }\n    }\n    ;\n  }, [drones]);\n\n  //check for outtimed data every 1 minute using useEffect and Interval.\n  useEffect(() => {\n    const interval = setInterval(() => {\n      var time = Date.now();\n      var updatedDronesArray = violatingDrones.filter(d => d.time + 600000 > time);\n      setViolatingDrones(updatedDronesArray);\n    }, 60000); // this will run the effect every 1 minute\n    return () => clearInterval(interval); // this will clear the interval when the component unmounts\n  });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex w-full mb-5 font-mono\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col w-1/2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-bold text-xl text-indigo-500\",\n          children: \"Device:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-medium text-base\",\n          children: [\"Device ID: \", device.attributes.deviceId, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this), \"Started Time: \", new Date(device.children[1].value).toTimeString() + ' on ' + new Date(device.children[1].value).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex w-full mt-5 font-mono\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"font-bold text-xl text-indigo-500 w-full\",\n        children: \"TABLE OF VIOLATING DRONES AND ITS PILOTS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Serial number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Closest distance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Pilot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: violatingDrones.map(drone => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: drone.data.serialNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: drone.data.closestDistance\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Pilot's ID: \", drone.data.pilotInformation.pilotId]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Pilot's name\", drone.data.pilotInformation.firstName, \" \", drone.data.pilotInformation.lastName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Pilot's email: \", drone.data.pilotInformation.email]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Pilot's phonenumber: \", drone.data.pilotInformation.phoneNumber]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Body, \"Q7OAprGW+dHiZ7mN6U36SInspsw=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","useState","useEffect","birdnestService","droneConstructor","serialNumber","positionX","positionY","closestDistance","pilotInformation","Body","drones","device","children","dronesData","violatingDrones","setViolatingDrones","drone","distance","Math","hypot","abs","value","found","find","obj","data","updatedClosestDistance","updatedDroneData","updatedDrone","time","Date","now","updatedDronesArray","map","getPilotInformation","then","newViolatingDrone","interval","setInterval","filter","d","clearInterval","attributes","deviceId","toTimeString","toLocaleDateString","pilotId","firstName","lastName","email","phoneNumber"],"sources":["/Users/thonghoangdanh/FullStack/birdnest/src/components/Body.jsx"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport birdnestService from '../services/birdnest';\n\n//construction for drone data\nfunction droneConstructor(serialNumber, positionX, positionY, closestDistance, pilotInformation ) {\n  this.serialNumber = serialNumber;\n  this.positionX = positionX;\n  this.positionY = positionY;\n  this.closestDistance = closestDistance;\n  this.pilotInformation = pilotInformation;\n};\n\n//Body\nconst Body = ({ drones }) => {\n  //device data, stay static\n  const device = drones.children[0];\n  //drones data, updated every 2 seconds\n  const dronesData = drones.children[1].children;\n\n  //array to store the data\n  const [violatingDrones, setViolatingDrones] = useState([]);\n  useEffect(() => {\n    //Looping through the data\n    for (const drone of dronesData) {\n      //Check if the position is in the no-fly zone\n      const distance = Math.hypot(Math.abs(drone.children[8].value - 250000), Math.abs(drone.children[7].value - 250000));\n      if (distance < 100000 ) {\n        //Check if there's already that drone in the array, if so update the timestamp, else update the array with the new drone\n        const found = violatingDrones.find(obj => obj.data.serialNumber === drone.children[0].value);\n        if (found) {\n          const updatedClosestDistance = distance < found.data.distance ? distance : found.data.closestDistance;\n          //Define the updated piece of data\n          const updatedDroneData = new droneConstructor(\n            found.data.serialNumber,\n            drone.children[8].value,\n            drone.children[7].value,\n            updatedClosestDistance,\n            found.data.pilotInformation,\n          );\n          const updatedDrone = {\n            data: updatedDroneData,\n            time: Date.now()\n          };\n          const updatedDronesArray = violatingDrones.map(drone => drone.data.serialNumber === updatedDrone.data.serialNumber ? updatedDrone : drone );\n          setViolatingDrones(updatedDronesArray);\n        } else {\n          //If there's not the drone in the array, get the pilot information and make a new data by constructor, after that add new data to the array and update the array\n          birdnestService\n            .getPilotInformation(drone.children[0].value)\n            .then((pilotInformation) => {\n              const newViolatingDrone = {\n                data: new droneConstructor(\n                  drone.children[0].value,\n                  drone.children[8].value,\n                  drone.children[7].value,\n                  distance,\n                  pilotInformation,\n                ),\n                time: Date.now()\n              };\n              setViolatingDrones([newViolatingDrone, ...violatingDrones]);\n            });\n        }\n      }\n    };\n  },[drones]);\n\n  //check for outtimed data every 1 minute using useEffect and Interval.\n  useEffect(() => {\n    const interval = setInterval(() => {\n      var time = Date.now();\n      var updatedDronesArray = violatingDrones.filter(d =>\n      d.time + 600000 > time);\n      setViolatingDrones(updatedDronesArray);\n    }, 60000); // this will run the effect every 1 minute\n    return () => clearInterval(interval); // this will clear the interval when the component unmounts\n  });\n\n  return (\n    <>\n      <div className='flex w-full mb-5 font-mono'>\n        <div className='flex flex-col w-1/2'>\n          <h2 className='font-bold text-xl text-indigo-500'>Device:</h2>\n          <p className='font-medium text-base'>\n          Device ID: {device.attributes.deviceId}\n          <br />\n          Started Time: {\n            new Date(device.children[1].value).toTimeString()\n            + ' on '\n            + new Date(device.children[1].value).toLocaleDateString()\n          }\n          </p>\n        </div>\n      </div>\n      <div className='flex w-full mt-5 font-mono'>\n        <h2 className='font-bold text-xl text-indigo-500 w-full'>TABLE OF VIOLATING DRONES AND ITS PILOTS</h2>\n        <table>\n          <tr>\n            <th>Serial number</th>\n            <th>Closest distance</th>\n            <th>Pilot</th>\n          </tr>\n          <tbody>\n            {violatingDrones.map((drone) =>\n              <tr>\n                <td>{drone.data.serialNumber}</td>\n                <td>{drone.data.closestDistance}</td>\n                <td>\n                  <p>Pilot's ID: {drone.data.pilotInformation.pilotId}</p>\n                  <p>Pilot's name{drone.data.pilotInformation.firstName} {drone.data.pilotInformation.lastName}</p>\n                  <p>Pilot's email: {drone.data.pilotInformation.email}</p>\n                  <p>Pilot's phonenumber: {drone.data.pilotInformation.phoneNumber}</p>\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n}\n\nexport default Body;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}