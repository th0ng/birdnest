{"ast":null,"code":"var _jsxFileName = \"/Users/thonghoangdanh/FullStack/birdnest/src/components/Body.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport birdnestService from '../services/birdnest';\n\n//construction for drone data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction droneConstructor(serialNumber, positionX, positionY, pilotInformation) {\n  this.serialNumber = serialNumber;\n  this.positionX = positionX;\n  this.positionY = positionY;\n  this.distance = Math.hypot(positionX, positionY);\n  this.pilotInformation = pilotInformation;\n}\n;\nconst Body = _ref => {\n  _s();\n  let {\n    drones\n  } = _ref;\n  //device data\n  const device = drones.children[0];\n  //drones data\n  const dronesData = drones.children[1].children;\n  const [violatingDrones, setViolatingDrones] = useState([]);\n\n  //Looping through the data\n  // for (const drone of dronesData) {\n  //   //Check if the position is in the no-fly zone\n  //   const distance = Math.hypot(Math.abs(drone.children[8].value - 250000), Math.abs(drone.children[7].value - 250000))\n  //   if (distance < 100000 ) {\n  //     //Check if there's already that drone in the array, if so update the timestamp, else update the array\n  //     const found = violatingDrones.find(e => e.serialNumber === drone.children[0]);\n  //     if (found) {\n  //       const index = violatingDrones.indexOf(found);\n\n  //       const updatedDrone = {\n  //         data: new droneConstructor(found.serialNumber, drone.children[8].value, drone.chldren[7].value, found.pilotInformation),\n  //         time: Date.now()\n  //       };\n  //       setViolatingDrones(...violatingDrones.slice(0, index), updatedDrone, ...violatingDrones.slice(index + 1));\n  //     } else {\n  //       birdnestService\n  //         .getPilotInformation(drone.children[0].value)\n  //         .then((pilotInformation) => {\n  //           const newViolatingDrone = {\n  //             data: new droneConstructor(\n  //               drone.children[0].value,\n  //               drone.children[8].value,\n  //               drone.children[7].value,\n  //               pilotInformation,\n  //             ),\n  //             time: Date.now()\n  //           };\n  //           setViolatingDrones([newViolatingDrone].concat(violatingDrones));\n  //         });\n  //     }\n  //   }\n  // };\n\n  //running every 1 minute to check for outtimed drones information\n  setInterval(() => {\n    var time = Date.now();\n    var updatedDronesArray = violatingDrones.filter(d => d.time + 60 * 10000 < time);\n    setViolatingDrones(updatedDronesArray);\n  }, 60000);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex w-full mb-5 font-mono\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col w-1/2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-bold text-xl text-indigo-500\",\n          children: \"Device:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-medium text-base\",\n          children: [\"Device ID: \", device.attributes.deviceId, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this), \"Started Time: \", new Date(device.children[1].value).toTimeString() + ' on ' + new Date(device.children[1].value).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex w-1/2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex w-full mt-5 font-mono\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Serial Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Body, \"lUQb2JShSOJX0k+7s/aJ70AH4BU=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","useState","birdnestService","droneConstructor","serialNumber","positionX","positionY","pilotInformation","distance","Math","hypot","Body","drones","device","children","dronesData","violatingDrones","setViolatingDrones","setInterval","time","Date","now","updatedDronesArray","filter","d","attributes","deviceId","value","toTimeString","toLocaleDateString"],"sources":["/Users/thonghoangdanh/FullStack/birdnest/src/components/Body.jsx"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport birdnestService from '../services/birdnest';\n\n//construction for drone data\nfunction droneConstructor(serialNumber, positionX, positionY, pilotInformation ) {\n  this.serialNumber = serialNumber;\n  this.positionX = positionX;\n  this.positionY = positionY;\n  this.distance = Math.hypot(positionX, positionY);\n  this.pilotInformation = pilotInformation;\n};\n\n\nconst Body = ({ drones }) => {\n  //device data\n  const device = drones.children[0];\n  //drones data\n  const dronesData = drones.children[1].children;\n\n  const [violatingDrones, setViolatingDrones] = useState([]);\n\n  //Looping through the data\n  // for (const drone of dronesData) {\n  //   //Check if the position is in the no-fly zone\n  //   const distance = Math.hypot(Math.abs(drone.children[8].value - 250000), Math.abs(drone.children[7].value - 250000))\n  //   if (distance < 100000 ) {\n  //     //Check if there's already that drone in the array, if so update the timestamp, else update the array\n  //     const found = violatingDrones.find(e => e.serialNumber === drone.children[0]);\n  //     if (found) {\n  //       const index = violatingDrones.indexOf(found);\n\n  //       const updatedDrone = {\n  //         data: new droneConstructor(found.serialNumber, drone.children[8].value, drone.chldren[7].value, found.pilotInformation),\n  //         time: Date.now()\n  //       };\n  //       setViolatingDrones(...violatingDrones.slice(0, index), updatedDrone, ...violatingDrones.slice(index + 1));\n  //     } else {\n  //       birdnestService\n  //         .getPilotInformation(drone.children[0].value)\n  //         .then((pilotInformation) => {\n  //           const newViolatingDrone = {\n  //             data: new droneConstructor(\n  //               drone.children[0].value,\n  //               drone.children[8].value,\n  //               drone.children[7].value,\n  //               pilotInformation,\n  //             ),\n  //             time: Date.now()\n  //           };\n  //           setViolatingDrones([newViolatingDrone].concat(violatingDrones));\n  //         });\n  //     }\n  //   }\n  // };\n\n\n  //running every 1 minute to check for outtimed drones information\n  setInterval(() => {\n    var time = Date.now();\n    var updatedDronesArray = violatingDrones.filter(d => (d.time + (60 * 10000)) < time);\n    setViolatingDrones(updatedDronesArray);\n  }, 60000);\n\n\n  return (\n    <>\n      <div className='flex w-full mb-5 font-mono'>\n        <div className='flex flex-col w-1/2'>\n          <h2 className='font-bold text-xl text-indigo-500'>Device:</h2>\n          <p className='font-medium text-base'>\n          Device ID: {device.attributes.deviceId}\n          <br />\n          Started Time: {\n            new Date(device.children[1].value).toTimeString()\n            + ' on '\n            + new Date(device.children[1].value).toLocaleDateString()\n          }\n          </p>\n        </div>\n        <div className='flex w-1/2'>\n\n        </div>\n      </div>\n      <div className='flex w-full mt-5 font-mono'>\n        <table>\n          <thead>\n          <tr>\n            <th>Serial Number</th>\n          </tr>\n          </thead>\n\n        </table>\n      </div>\n    </>\n  );\n}\n\nexport default Body;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,eAAe,MAAM,sBAAsB;;AAElD;AAAA;AAAA;AACA,SAASC,gBAAgB,CAACC,YAAY,EAAEC,SAAS,EAAEC,SAAS,EAAEC,gBAAgB,EAAG;EAC/E,IAAI,CAACH,YAAY,GAAGA,YAAY;EAChC,IAAI,CAACC,SAAS,GAAGA,SAAS;EAC1B,IAAI,CAACC,SAAS,GAAGA,SAAS;EAC1B,IAAI,CAACE,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACL,SAAS,EAAEC,SAAS,CAAC;EAChD,IAAI,CAACC,gBAAgB,GAAGA,gBAAgB;AAC1C;AAAC;AAGD,MAAMI,IAAI,GAAG,QAAgB;EAAA;EAAA,IAAf;IAAEC;EAAO,CAAC;EACtB;EACA,MAAMC,MAAM,GAAGD,MAAM,CAACE,QAAQ,CAAC,CAAC,CAAC;EACjC;EACA,MAAMC,UAAU,GAAGH,MAAM,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACA,QAAQ;EAE9C,MAAM,CAACE,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;;EAE1D;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACAiB,WAAW,CAAC,MAAM;IAChB,IAAIC,IAAI,GAAGC,IAAI,CAACC,GAAG,EAAE;IACrB,IAAIC,kBAAkB,GAAGN,eAAe,CAACO,MAAM,CAACC,CAAC,IAAKA,CAAC,CAACL,IAAI,GAAI,EAAE,GAAG,KAAM,GAAIA,IAAI,CAAC;IACpFF,kBAAkB,CAACK,kBAAkB,CAAC;EACxC,CAAC,EAAE,KAAK,CAAC;EAGT,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,4BAA4B;MAAA,wBACzC;QAAK,SAAS,EAAC,qBAAqB;QAAA,wBAClC;UAAI,SAAS,EAAC,mCAAmC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAa,eAC9D;UAAG,SAAS,EAAC,uBAAuB;UAAA,0BACxBT,MAAM,CAACY,UAAU,CAACC,QAAQ,eACtC;YAAA;YAAA;YAAA;UAAA,QAAM,oBAEJ,IAAIN,IAAI,CAACP,MAAM,CAACC,QAAQ,CAAC,CAAC,CAAC,CAACa,KAAK,CAAC,CAACC,YAAY,EAAE,GAC/C,MAAM,GACN,IAAIR,IAAI,CAACP,MAAM,CAACC,QAAQ,CAAC,CAAC,CAAC,CAACa,KAAK,CAAC,CAACE,kBAAkB,EAAE;QAAA;UAAA;UAAA;UAAA;QAAA,QAEvD;MAAA;QAAA;QAAA;QAAA;MAAA,QACA,eACN;QAAK,SAAS,EAAC;MAAY;QAAA;QAAA;QAAA;MAAA,QAErB;IAAA;MAAA;MAAA;MAAA;IAAA,QACF,eACN;MAAK,SAAS,EAAC,4BAA4B;MAAA,uBACzC;QAAA,uBACE;UAAA,uBACA;YAAA,uBACE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAsB;YAAA;YAAA;YAAA;UAAA;QACnB;UAAA;UAAA;UAAA;QAAA;MACG;QAAA;QAAA;QAAA;MAAA;IAEF;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA,gBACL;AAEP,CAAC;AAAA,GAlFKlB,IAAI;AAAA,KAAJA,IAAI;AAoFV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}