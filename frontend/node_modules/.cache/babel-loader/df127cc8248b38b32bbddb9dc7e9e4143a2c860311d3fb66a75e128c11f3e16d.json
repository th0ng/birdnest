{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { firstToLowerCase } from '../../common/utils/helper';\nimport { TechnicalAnalysis } from './indicator-base';\n/**\n * `EmaIndicator` module is used to render EMA indicator.\n */\nvar EmaIndicator = /** @class */function (_super) {\n  __extends(EmaIndicator, _super);\n  function EmaIndicator() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Defines the predictions based on EMA approach\n   *\n   * @private\n   */\n  EmaIndicator.prototype.initDataSource = function (indicator, chart) {\n    var field = firstToLowerCase(indicator.field);\n    var xField = 'x';\n    var emaPoints = [];\n    var signalSeries = indicator.targetSeries[0];\n    //prepare data\n    var validData = indicator.points;\n    if (validData && validData.length && validData.length >= indicator.period) {\n      //find initial average\n      var sum = 0;\n      var average = 0;\n      //smoothing factor\n      var k = 2 / (indicator.period + 1);\n      for (var i = 0; i < indicator.period; i++) {\n        sum += validData[i][field];\n      }\n      average = sum / indicator.period;\n      emaPoints.push(this.getDataPoint(validData[indicator.period - 1][xField], average, validData[indicator.period - 1], signalSeries, emaPoints.length));\n      var index = indicator.period;\n      while (index < validData.length) {\n        //previous average\n        var prevAverage = emaPoints[index - indicator.period][signalSeries.yName];\n        var yValue = (validData[index][field] - prevAverage) * k + prevAverage;\n        emaPoints.push(this.getDataPoint(validData[index][xField], yValue, validData[index], signalSeries, emaPoints.length));\n        index++;\n      }\n    }\n    this.setSeriesRange(emaPoints, indicator);\n  };\n  /**\n   * To destroy the EMA Indicator\n   *\n   * @returns {void}\n   * @private\n   */\n  EmaIndicator.prototype.destroy = function () {\n    /**\n     * Destroys the EMA Indicator\n     */\n  };\n  /**\n   * Get module name.\n   */\n  EmaIndicator.prototype.getModuleName = function () {\n    /**\n     * Returns the module name of the series\n     */\n    return 'EmaIndicator';\n  };\n  return EmaIndicator;\n}(TechnicalAnalysis);\nexport { EmaIndicator };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","firstToLowerCase","TechnicalAnalysis","EmaIndicator","_super","apply","arguments","initDataSource","indicator","chart","field","xField","emaPoints","signalSeries","targetSeries","validData","points","length","period","sum","average","k","i","push","getDataPoint","index","prevAverage","yName","yValue","setSeriesRange","destroy","getModuleName"],"sources":["/Users/thonghoangdanh/FullStack/birdnest/node_modules/@syncfusion/ej2-charts/src/chart/technical-indicators/ema-indicator.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { firstToLowerCase } from '../../common/utils/helper';\nimport { TechnicalAnalysis } from './indicator-base';\n/**\n * `EmaIndicator` module is used to render EMA indicator.\n */\nvar EmaIndicator = /** @class */ (function (_super) {\n    __extends(EmaIndicator, _super);\n    function EmaIndicator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Defines the predictions based on EMA approach\n     *\n     * @private\n     */\n    EmaIndicator.prototype.initDataSource = function (indicator, chart) {\n        var field = firstToLowerCase(indicator.field);\n        var xField = 'x';\n        var emaPoints = [];\n        var signalSeries = indicator.targetSeries[0];\n        //prepare data\n        var validData = indicator.points;\n        if (validData && validData.length && validData.length >= indicator.period) {\n            //find initial average\n            var sum = 0;\n            var average = 0;\n            //smoothing factor\n            var k = (2 / (indicator.period + 1));\n            for (var i = 0; i < indicator.period; i++) {\n                sum += validData[i][field];\n            }\n            average = sum / indicator.period;\n            emaPoints.push(this.getDataPoint(validData[indicator.period - 1][xField], average, validData[indicator.period - 1], signalSeries, emaPoints.length));\n            var index = indicator.period;\n            while (index < validData.length) {\n                //previous average\n                var prevAverage = emaPoints[index - indicator.period][signalSeries.yName];\n                var yValue = (validData[index][field] - prevAverage) * k + prevAverage;\n                emaPoints.push(this.getDataPoint(validData[index][xField], yValue, validData[index], signalSeries, emaPoints.length));\n                index++;\n            }\n        }\n        this.setSeriesRange(emaPoints, indicator);\n    };\n    /**\n     * To destroy the EMA Indicator\n     *\n     * @returns {void}\n     * @private\n     */\n    EmaIndicator.prototype.destroy = function () {\n        /**\n         * Destroys the EMA Indicator\n         */\n    };\n    /**\n     * Get module name.\n     */\n    EmaIndicator.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the series\n         */\n        return 'EmaIndicator';\n    };\n    return EmaIndicator;\n}(TechnicalAnalysis));\nexport { EmaIndicator };\n"],"mappings":"AAAA,IAAIA,SAAS,GAAI,IAAI,IAAI,IAAI,CAACA,SAAS,IAAM,YAAY;EACrD,IAAIC,aAAa,GAAG,UAAUC,CAAC,EAAEC,CAAC,EAAE;IAChCF,aAAa,GAAGG,MAAM,CAACC,cAAc,IAChC;MAAEC,SAAS,EAAE;IAAG,CAAC,YAAYC,KAAK,IAAI,UAAUL,CAAC,EAAEC,CAAC,EAAE;MAAED,CAAC,CAACI,SAAS,GAAGH,CAAC;IAAE,CAAE,IAC5E,UAAUD,CAAC,EAAEC,CAAC,EAAE;MAAE,KAAK,IAAIK,CAAC,IAAIL,CAAC,EAAE,IAAIA,CAAC,CAACM,cAAc,CAACD,CAAC,CAAC,EAAEN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IAAE,CAAC;IAC9E,OAAOP,aAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;EAC9B,CAAC;EACD,OAAO,UAAUD,CAAC,EAAEC,CAAC,EAAE;IACnBF,aAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;IACnB,SAASO,EAAE,GAAG;MAAE,IAAI,CAACC,WAAW,GAAGT,CAAC;IAAE;IACtCA,CAAC,CAACU,SAAS,GAAGT,CAAC,KAAK,IAAI,GAAGC,MAAM,CAACS,MAAM,CAACV,CAAC,CAAC,IAAIO,EAAE,CAACE,SAAS,GAAGT,CAAC,CAACS,SAAS,EAAE,IAAIF,EAAE,EAAE,CAAC;EACxF,CAAC;AACL,CAAC,EAAG;AACJ,SAASI,gBAAgB,QAAQ,2BAA2B;AAC5D,SAASC,iBAAiB,QAAQ,kBAAkB;AACpD;AACA;AACA;AACA,IAAIC,YAAY,GAAG,aAAe,UAAUC,MAAM,EAAE;EAChDjB,SAAS,CAACgB,YAAY,EAAEC,MAAM,CAAC;EAC/B,SAASD,YAAY,GAAG;IACpB,OAAOC,MAAM,KAAK,IAAI,IAAIA,MAAM,CAACC,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,IAAI,IAAI;EACnE;EACA;AACJ;AACA;AACA;AACA;EACIH,YAAY,CAACJ,SAAS,CAACQ,cAAc,GAAG,UAAUC,SAAS,EAAEC,KAAK,EAAE;IAChE,IAAIC,KAAK,GAAGT,gBAAgB,CAACO,SAAS,CAACE,KAAK,CAAC;IAC7C,IAAIC,MAAM,GAAG,GAAG;IAChB,IAAIC,SAAS,GAAG,EAAE;IAClB,IAAIC,YAAY,GAAGL,SAAS,CAACM,YAAY,CAAC,CAAC,CAAC;IAC5C;IACA,IAAIC,SAAS,GAAGP,SAAS,CAACQ,MAAM;IAChC,IAAID,SAAS,IAAIA,SAAS,CAACE,MAAM,IAAIF,SAAS,CAACE,MAAM,IAAIT,SAAS,CAACU,MAAM,EAAE;MACvE;MACA,IAAIC,GAAG,GAAG,CAAC;MACX,IAAIC,OAAO,GAAG,CAAC;MACf;MACA,IAAIC,CAAC,GAAI,CAAC,IAAIb,SAAS,CAACU,MAAM,GAAG,CAAC,CAAE;MACpC,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGd,SAAS,CAACU,MAAM,EAAEI,CAAC,EAAE,EAAE;QACvCH,GAAG,IAAIJ,SAAS,CAACO,CAAC,CAAC,CAACZ,KAAK,CAAC;MAC9B;MACAU,OAAO,GAAGD,GAAG,GAAGX,SAAS,CAACU,MAAM;MAChCN,SAAS,CAACW,IAAI,CAAC,IAAI,CAACC,YAAY,CAACT,SAAS,CAACP,SAAS,CAACU,MAAM,GAAG,CAAC,CAAC,CAACP,MAAM,CAAC,EAAES,OAAO,EAAEL,SAAS,CAACP,SAAS,CAACU,MAAM,GAAG,CAAC,CAAC,EAAEL,YAAY,EAAED,SAAS,CAACK,MAAM,CAAC,CAAC;MACpJ,IAAIQ,KAAK,GAAGjB,SAAS,CAACU,MAAM;MAC5B,OAAOO,KAAK,GAAGV,SAAS,CAACE,MAAM,EAAE;QAC7B;QACA,IAAIS,WAAW,GAAGd,SAAS,CAACa,KAAK,GAAGjB,SAAS,CAACU,MAAM,CAAC,CAACL,YAAY,CAACc,KAAK,CAAC;QACzE,IAAIC,MAAM,GAAG,CAACb,SAAS,CAACU,KAAK,CAAC,CAACf,KAAK,CAAC,GAAGgB,WAAW,IAAIL,CAAC,GAAGK,WAAW;QACtEd,SAAS,CAACW,IAAI,CAAC,IAAI,CAACC,YAAY,CAACT,SAAS,CAACU,KAAK,CAAC,CAACd,MAAM,CAAC,EAAEiB,MAAM,EAAEb,SAAS,CAACU,KAAK,CAAC,EAAEZ,YAAY,EAAED,SAAS,CAACK,MAAM,CAAC,CAAC;QACrHQ,KAAK,EAAE;MACX;IACJ;IACA,IAAI,CAACI,cAAc,CAACjB,SAAS,EAAEJ,SAAS,CAAC;EAC7C,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIL,YAAY,CAACJ,SAAS,CAAC+B,OAAO,GAAG,YAAY;IACzC;AACR;AACA;EAFQ,CAGH;EACD;AACJ;AACA;EACI3B,YAAY,CAACJ,SAAS,CAACgC,aAAa,GAAG,YAAY;IAC/C;AACR;AACA;IACQ,OAAO,cAAc;EACzB,CAAC;EACD,OAAO5B,YAAY;AACvB,CAAC,CAACD,iBAAiB,CAAE;AACrB,SAASC,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}